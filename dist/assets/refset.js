eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"refset/adapters/login\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	authenticate: function(username, password) \n    	{ \n    	    Ember.Logger.log(\'adapters.login:authenticate\');\n\n    	    var data = {};\n    		data.username  = username;\n    		data.password  = password;\n    		data.queryName = RefsetENV.APP.authenticationActionSoapName;\n\n    		var result = ajax(RefsetENV.APP.authenticationUrl, {type:\'post\', data: data}).then(function(success)\n    		{\n    			success.authenticated = true;\n    			\n    			return success;\n    		},\n    		function (error)\n    		{\n    			var result = {};\n    			\n    			result.authenticated = false;\n    			result.error = (error.errorThrown === \"Unauthorized\") ? \'Username and/or password not recognised\' : \'Error accessing the authentication server\';\n    			\n    			return result; \n    		});	\n    		\n    		return result;\n    	},\n     \n    	isPermittedToUseRefset: function(userId)\n    	{\n    		Ember.Logger.log(\'adapters.login:isPermittedToUseRefset\');\n\n    		var result = ajax(RefsetENV.APP.appsUrl.replace(\'__USER_ID__\', userId), {type:\'get\'}).then(function(permittedAppsResult)\n    		{\n    			return $.inArray(RefsetENV.APP.thisApplicationName,permittedAppsResult.apps) === -1 ? 0 : 1;\n    		},\n    		function (error)\n    		{\n    			Ember.Logger.log(\"adapters.login:isPermittedToUseRefset (error)\",error);\n    			return -1;\n    		});	\n    		\n    		return result;\n    	},\n    	\n    });\n  });//# sourceURL=refset/adapters/login.js");

;eval("define(\"refset/adapters/refsets\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n    var icAjaxRaw = __dependency1__.raw;\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	getHeaders : function(user)\n    	{\n    		var headers =\n    		{\n    			\'X-REFSET-PRE-AUTH-USERNAME\'	: user.name,\n    			\'X-REFSET-PRE-AUTH-TOKEN\'		: user.token\n    		};\n\n    		return headers;\n    	},\n\n    	\n    	returnErrorResponse : function(response)\n    	{\n    		if (typeof response.jqXHR.responseJSON !== \"undefined\")\n    		{\n    			// We have an error generated by the API\n    			return {meta:response.jqXHR.responseJSON.meta};\n    		}\n    		else\n    		{\n    			// We\'ve failed to speak to the API...\n    			return {meta:{errorInfo:{message:response.jqXHR.statusText,code:response.jqXHR.status.toString()}}};\n    		}\n    	},\n    	\n    	findAll : function (user,from,to)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:findAll (user)\",user);\n    		\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/?from=\' + from + \'&to=\' + to, {headers:this.getHeaders(user)}).then(function(response)\n    		{\n    			return response;\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});\n    		\n    		return result;\n    	},\n    	\n    	find : function (user,id)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:find (user,id)\",user,id);\n    		\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + id, {headers:this.getHeaders(user)}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response) \n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n\n    	findHeader : function (user,id)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:findHeader (user,id)\",user,id);\n    		\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + id + \'/header\', {headers:this.getHeaders(user)}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response) \n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	findMembers : function (user,id,from,to)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:findMembers (user,id)\",user,id);\n    		\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + id + \'/members?from=\' + from + \'&to=\' + to, {headers:this.getHeaders(user)}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response) \n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	create : function (user,refset)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:create\",user,refset);\n    		\n    		var _this = this;\n\n    		var jsonFormatRefset = JSON.stringify(refset);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/new\', {headers:this.getHeaders(user), type:\'post\', data: jsonFormatRefset, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	update : function (user,refset)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:update\",user,refset);\n    		\n    		var _this = this;\n\n    		var jsonFormatRefset = JSON.stringify(refset);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/update\', {headers:this.getHeaders(user), type:\'post\', data: jsonFormatRefset, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	addMember : function (user,refsetId,referencedComponentId)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:addMember (user,refsetId,referencedComponentId)\",user,refsetId,referencedComponentId);\n\n    		var _this = this;\n\n    		var member = {referencedComponentId : referencedComponentId, active:true};\n    			\n    		var jsonFormatMemberData = JSON.stringify(member);\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + refsetId + \'/add/member\', {headers:this.getHeaders(user), method:\"post\", data: jsonFormatMemberData, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{			\n    			return response;\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;	\n    	},\n    	\n    	addMembers : function (user,refsetId,members)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:addMembers (user,refsetId,members)\",user,refsetId,members);\n\n    		var _this = this;\n    		\n    		var importMembers = members.map(function(member)\n    		{\n    			var myMember = $.extend(true, {}, member);\n    			delete myMember[\"meta\"];\n    			return myMember;\n    		});\n    			\n    		var jsonFormatMemberData = JSON.stringify(importMembers);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + refsetId + \'/add/members\', {headers:_this.getHeaders(user), method:\"post\", data: jsonFormatMemberData, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{			\n    			return response;\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});\n    		\n    		return result;	\n    	},\n    	\n    	deleteMembers : function(user,refsetid,members)\n    	{\n    		var _this = this;\n    		\n    		var data = members.map(function(member)\n    		{\n    			return member.referencedComponentId;\n    		});\n    		\n    		var jsonFormatMemberData = JSON.stringify(data);\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/delete/\' + refsetid + \'/members\', {headers:this.getHeaders(user), method:\"delete\", data: jsonFormatMemberData, processData: false, contentType: \'application/json\'}).then(function(response){\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	getRefsetExport : function(user,id)\n    	{\n    		var _this = this;\n\n    		var result = icAjaxRaw(RefsetENV.APP.refsetApiBaseUrl + \'/\' + id + \'/export\', {headers:this.getHeaders(user)}).then(function(response)\n    		{\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	deleteRefset : function(user,id)\n    	{\n    		var _this = this;\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/delete/\' + id , {headers:this.getHeaders(user), method:\"delete\", processData: false, contentType: \'application/json\'}).then(function(response){\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n\n    	importRF2 : function (user,refsetId,rf2file)\n    	{\n    		Ember.Logger.log(\"adapters.refsets:importRF2 (user,refsetId)\",user,refsetId);\n\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/\' + refsetId + \'/import\', {headers:_this.getHeaders(user), method:\"post\", data: rf2file, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{			\n    			return response;\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});\n    		\n    		return result;	\n    	},\n    	\n    	searchRefsetMembers : function(user,searchTerm)\n    	{\n    		var _this = this;\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/search?from=0&to=100&q=\' + searchTerm , {headers:this.getHeaders(user), method:\"get\", processData: false, contentType: \'application/json\'}).then(function(response){\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    	checkifDescriptionIsUnique : function(user,description)\n    	{\n    		var _this = this;\n\n    		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + \'/checkDescription/\' + description , {headers:this.getHeaders(user), method:\"get\", processData: false, contentType: \'application/json\'}).then(function(response){\n    			return response;	\n    		},\n    		function (response)\n    		{\n    			return _this.returnErrorResponse(response);\n    		});	\n    		\n    		return result;\n    	},\n    	\n    });\n  });//# sourceURL=refset/adapters/refsets.js");

;eval("define(\"refset/adapters/simple-members\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	getHeaders : function(user)\n    	{\n    		var headers =\n    		{\n    			\'X-REFSET-PRE-AUTH-USERNAME\'	: user.name,\n    			\'X-REFSET-PRE-AUTH-TOKEN\'		: user.token\n    		};\n\n    		return headers;\n    	}, \n    	\n    	returnErrorResponse : function(response)\n    	{\n    		if (typeof response.jqXHR.responseJSON !== \"undefined\")\n    		{\n    			// We have an error generated by the API\n    			return {meta:response.jqXHR.responseJSON.meta};\n    		}\n    		else\n    		{\n    			// We\'ve failed to speak to the API...\n    			return {meta:{errorInfo:{message:response.jqXHR.statusText,code:response.jqXHR.status.toString()}}};\n    		}\n    	},\n    	\n    	findList : function (user,idArray)\n    	{\n    		Ember.Logger.log(\"adapters.simple-members:findList\");\n    		\n    		var jsonFormatIdArray = JSON.stringify(idArray);\n    		var _this = this;\n    	\n    		var result = ajax(RefsetENV.APP.conceptsApiBaseUrl, {headers:this.getHeaders(user), method:\"post\", data: jsonFormatIdArray, processData: false, contentType: \'application/json\'}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response)\n    		{\n    			Ember.Logger.log(\"adapters.simple-members:findList error\",response);\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;\n\n    	},\n    	\n    	find : function (user,id)\n    	{\n    		Ember.Logger.log(\"adapters.simple-members:find\",user,id);\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.conceptsApiBaseUrl + \'/\' + id, {headers:this.getHeaders(user), method:\"get\"}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response)\n    		{\n    			Ember.Logger.log(\"adapters.simple-members:find error\",response);\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;\n\n    	},\n\n    });\n  });//# sourceURL=refset/adapters/simple-members.js");

;eval("define(\"refset/adapters/type-lookups\", \n  [\"ic-ajax\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var ajax = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n    	\n    	getHeaders : function(user)\n    	{\n    		var headers =\n    		{\n    			\'X-REFSET-PRE-AUTH-USERNAME\'	: user.name,\n    			\'X-REFSET-PRE-AUTH-TOKEN\'		: user.token\n    		};\n\n    		return headers;\n    	}, \n    	\n    	returnErrorResponse : function(response)\n    	{\n    		if (typeof response.jqXHR.responseJSON !== \"undefined\")\n    		{\n    			// We have an error generated by the API\n    			return {meta:response.jqXHR.responseJSON.meta};\n    		}\n    		else\n    		{\n    			// We\'ve failed to speak to the API...\n    			return {meta:{errorInfo:{message:response.jqXHR.statusText,code:response.jqXHR.status.toString()}}};\n    		}\n    	},\n    	\n    	getComponentTypes : function (user)\n    	{\n    		Ember.Logger.log(\"adapters.type-lookups:getComponentTypes\");\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.snomedTypesApiBaseUrl + \'componentTypes\', {headers:this.getHeaders(user), method:\"get\"}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response)\n    		{\n    			Ember.Logger.log(\"adapters.type-lookups:getComponentTypes error\",response);\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;\n    	},\n    	\n    	getModules : function (user)\n    	{\n    		Ember.Logger.log(\"adapters.type-lookups:getModules\");\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.snomedTypesApiBaseUrl + \'modules\', {headers:this.getHeaders(user), method:\"get\"}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response)\n    		{\n    			Ember.Logger.log(\"adapters.type-lookups:getModules error\",response);\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;\n    	},\n\n    	getRefsetTypes : function (user)\n    	{\n    		Ember.Logger.log(\"adapters.type-lookups:getRefsetTypes\");\n    		var _this = this;\n    		\n    		var result = ajax(RefsetENV.APP.snomedTypesApiBaseUrl + \'refsetTypes\', {headers:this.getHeaders(user), method:\"get\"}).then(function(response)\n    		{	\n    			return response;\n    		},\n    		function (response)\n    		{\n    			Ember.Logger.log(\"adapters.type-lookups:getRefsetTypes error\",response);\n    			return _this.returnErrorResponse(response);\n    		});\n\n    		return result;\n    	},\n    });\n  });//# sourceURL=refset/adapters/type-lookups.js");

;eval("define(\"refset/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'refset\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'refset\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=refset/app.js");

;eval("define(\"refset/components/snomed-data-dropdown\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Select.extend({\n    	\n    	content : Ember.computed(function()\n    	{		\n    		var dataController 	= Refset.__container__.lookup(\"controller:data\");\n    		return dataController.get(this.dataType);\n    	}),\n     \n    	optionLabelPath : \"content.label\",\n    	optionValuePath : \"content.id\",\n    	classNames 		: \"form-control\"\n    });\n  });//# sourceURL=refset/components/snomed-data-dropdown.js");

;eval("define(\"refset/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"thisApplicationName\":\"Refset\",\"RegistrationEmail\":\"register@ihtsdo.org\",\"authenticationActionSoapName\":\"getUserByNameAuth\",\"authenticationUrl\":\"https://usermanagement3.ihtsdotools.org/security-web/query\",\"appsUrl\":\"https://usermanagement3.ihtsdotools.org/security-web/query/users/__USER_ID__/apps\",\"permissionsUrl\":\"https://usermanagement3.ihtsdotools.org/security-web/query/users/__USER_ID__/apps/Refset\",\"passwordResetURL\":\"https://usermanagement3.ihtsdotools.org/requestPwChange.jsp\",\"refsetApiBaseUrl\":\"https://uat-refset.ihtsdotools.org:8080/refset/v1.0/refsets\",\"conceptsApiBaseUrl\":\"https://uat-refset.ihtsdotools.org:8080/refset/v1.0/snomed/concepts\",\"snomedTypesApiBaseUrl\":\"https://uat-refset.ihtsdotools.org:8080/refset/v1.0/snomed/\",\"numItemsPerPage\":10,\"numItemsPerPageDashboard\":5,\"supportedSnomedTypes\":{\"refsetTypes\":[\"446609009\"],\"componentTypes\":[\"900000000000461009\"]},\"defaultSnomedTypes\":{\"refsetType\":\"446609009\",\"componentType\":\"900000000000461009\",\"moduleType\":\"900000000000207008\"},\"loginExpiry\":720,\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=refset/config/environment.js");

;eval("define(\"refset/controllers/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    Ember.TextField.reopen(\n    {\n    	  attributeBindings: [\'data-provide\',\'data-date-format\',\'data-date-clear-btn\',\'data-date-autoclose\',\'class\',\'data-parsley-type\',\'data-parsley-required-message\',\'required\']\n    });\n\n    Ember.TextArea.reopen({\n    	  attributeBindings: [\'data-parsley-type\',\'data-parsley-required-message\',\'required\',\'data-parsely-descriptioninuse\',\'data-parsely-descriptioninuse-message\',\'data-parsley-validate-if-empty\']\n    });\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs : [\"login\",\"data\"],\n    	\n    	user : Ember.computed.alias(\"controllers.login.user\"),\n    	\n    	logoutTimerDisplay 		: Ember.computed.alias(\"controllers.login.logoutTimerDisplay\"),\n    	showLogoutTimer 		: Ember.computed.alias(\"controllers.login.showLogoutTimer\"),\n    	autoLoggedOut			: Ember.computed.alias(\"controllers.login.autoLoggedOut\"),\n    	logoutProgressDisplay	: Ember.computed.alias(\"controllers.login.logoutProgressDisplay\"),\n\n    	init : function()\n    	{\n    		window.addEventListener(\"dragover\",function(e)\n    		{\n    			e = e || event;\n    			e.preventDefault();\n    		},false);\n    		window.addEventListener(\"drop\",function(e)\n    		{\n    			e = e || event;\n    			e.preventDefault();\n    		},false);\n    	},\n    	\n    	currentPathDidChange : function()\n    	{\n    		var newPath = this.get(\'currentPath\');\n    		Ember.Logger.log(\"controllers.application:currentPathDidChange (path)\",newPath);\n    		\n    		 window.document.title = newPath;\n    		 \n    		var controller = this.get(\'controllers.data\');\n    		controller.applicationPathChanged();\n    	}.observes(\'currentPath\'),\n\n    	actions :\n    	{\n    		showLoginForm: function() \n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.showLoginForm();\n    		},\n\n    		showRegistrationForm: function() \n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.showRegistrationForm();\n    		},\n\n    		logout : function()\n    		{\n    			var controller = this.get(\'controllers.login\');\n    			controller.logout();\n    		},		\n    	},\n    });\n  });//# sourceURL=refset/controllers/application.js");

;eval("define(\"refset/controllers/dashboard\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs : [\"data\",\"news\"],\n\n    	news 				: Ember.computed.alias(\"controllers.news.latestNews\"),\n    	publishedRefsets 	: Ember.computed.alias(\"controllers.data.publishedRefsets\"),\n    	unpublishedRefsets 	: Ember.computed.alias(\"controllers.data.unpublishedRefsets\"),\n    	inactiveRefsets 	: Ember.computed.alias(\"controllers.data.inactiveRefsets\"),\n\n    	latestPublicRefsets  : [],\n    			\n    	initModel : function()\n    	{\n    		Ember.Logger.log(\"controllers.dashboard:initModel\");\n    		\n    		var _this 			= this;\n    		var dataController 	= this.get(\'controllers.data\');\n    		\n    		Ember.run.later(function()\n    		{\n    			var allRefsets = Ember.copy(_this.get(\"publishedRefsets\"));					\n    			_this.latestPublicRefsets.setObjects(allRefsets.splice(0,3));\n    		},2000);\n    		\n    		\n    		// Run next so that we do not prevent the UI being displayed if the data is delayed...\n    		return Ember.run.next(function()\n    		{\n    			dataController.getAllRefsets(_this,\'getAllRefsetsComplete\');\n    		});\n    	},\n    	\n    	actions :\n    	{\n    		getAllRefsetsComplete : function(response)\n    		{\n    			Ember.Logger.log(\"controllers.dashboard:actions:getAllRefsetsComplete (response)\",response);\n    		},	\n    	}\n    });\n  });//# sourceURL=refset/controllers/dashboard.js");

;eval("define(\"refset/controllers/data\", \n  [\"refset/adapters/refsets\",\"refset/adapters/simple-members\",\"refset/adapters/type-lookups\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var RefsetsAdapter = __dependency1__[\"default\"];\n    var refsetsAdapter = RefsetsAdapter.create();\n\n    var MembersAdapter = __dependency2__[\"default\"];\n    var membersAdapter = MembersAdapter.create();\n\n    var SnomedTypesAdapter = __dependency3__[\"default\"];\n    var snomedTypesAdapter = SnomedTypesAdapter.create();\n\n    // Computed alias don\'t work in this controller - no container?\n\n    var autoServerRetryInterval		= 5;	// Seconds before retrying\n    var autoServerRetryMultiplier 	= 1.5; 	// Multiply autoServerRetryInterval by this between each retry (so wait period gets longer)\n    var numAutoServerRetries		= 5; 	// Number of times to auto-retry before prompting user\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	\n    	needs 					: [\"login\"],\n    	\n    	refsets 				: [],\n    	unpublishedRefsets		: [],\n    	publishedRefsets		: [],\n    	inactiveRefsets			: [],\n    	refset 					: {},\n    	currentRefset			: null,\n    	currentAllRefsets		: null,\n    	showWaitCounter			: 0,\n    	hideWaitCounter			: 0,\n    	callsInProgressCounter	: 0,\n    	retryQueue				: [],\n    	moduleTypes				: {},\n    	refsetTypes				: {},\n    	componentTypes			: {},\n    	refsetTypesArray		: [],\n    	componentTypesArray		: [],\n    	moduleTypesArray		: [],\n    	languagesArray			: [{id:\'en_US\',label:\'US English\'}],\n    	languageTypes			: {\'en_US\' : \'US English\'},\n    	initialised				: false,\n    	refsetMemberRequestQueue : [],\n    	refsetsRequestQueue : [],\n    	\n    	moduleUpdatersArray			: function()\n    	{\n    		var users = [];\n    		\n    		var members = this.get(\"refset.members\");\n    		\n    		for (var m=0;m<members.length;m++)\n    		{\n    			var updater = members[m].modifiedBy;\n    					\n    			if ($.inArray(updater,users) === -1)\n    			{\n    				users.push(updater);\n    			}\n    		}\n    		\n    		for (m=0;m<users.length;m++)\n    		{\n    			var userObj = {id:users[m],label:users[m]};\n    			users[m] = userObj;\n    		}\n    		\n    		return users;\n    	}.property(\'refset.members.@each\'),\n\n    	refsetUpdatersArray			: function()\n    	{\n    		var users = [];\n    		\n    		var refsets = this.get(\"refsets\");\n    			\n    		for (var m=0;m<refsets.length;m++)\n    		{\n    			var updater = refsets[m].modifiedBy;\n    					\n    			if ($.inArray(updater,users) === -1)\n    			{\n    				users.push(updater);\n    			}\n    		}\n    		\n    		for (m=0;m<users.length;m++)\n    		{\n    			var userObj = {id:users[m],label:users[m]};\n    			users[m] = userObj;\n    		}\n    		\n    		return users;\n    	}.property(\'refsets.@each\'),\n    	\n    	refsetEffectiveTimesArray			: function()\n    	{\n    		var times = [];\n    		\n    		var refsets = this.get(\"refsets\");\n    		\n    		for (var m=0;m<refsets.length;m++)\n    		{\n    			if (typeof refsets[m].latestEffectiveTime !== \"undefined\")\n    			{\n    				var effTime = refsets[m].latestEffectiveTime;\n\n    				if ($.inArray(effTime,times) === -1)\n    				{\n    					times.push(effTime);\n    				}\n    			}\n    		}\n    		\n    		for (m=0;m<times.length;m++)\n    		{\n    			var timeString = moment(times[m]).format(\"YYYYMMDD\");\n    			var timeObj = {id:times[m],label:timeString};\n    			times[m] = timeObj;\n    		}\n    		\n    		return times;\n    	}.property(\'refsets.@each\'),\n    	\n    	\n    	effectiveTimeArray			: function()\n    	{\n    		var times = [];\n    		\n    		var members = this.get(\"refset.members\");\n    		\n    		for (var m=0;m<members.length;m++)\n    		{\n    			var effTime = members[m].latestEffectiveTime;\n    					\n    			if ($.inArray(effTime,times) === -1)\n    			{\n    				times.push(effTime);\n    			}\n    		}\n    		\n    		for (m=0;m<times.length;m++)\n    		{\n    			var timeString = moment(times[m]).format(\"YYYYMMDD\");\n    			var timeObj = {id:times[m],label:timeString};\n    			times[m] = timeObj;\n    		}\n    		\n    		return times;\n    	}.property(\'refset.members.@each\'),\n\n    	\n    	init : function()\n    	{\n    		Ember.Logger.log(\"controllers.data:init\");\n    		this.processRetryQueue();\n    	},\n\n    	clearRefset : function()\n    	{\n    		this.set(\"refset\",{});\n    	},\n    	\n    	initialiseAppData : function()\n    	{		\n    		Ember.Logger.log(\"controllers.data:initialiseAppData\");\n\n    		var p1 = this.getSnomedRefsetTypes().then(function(p){return typeof p.meta.errorInfo === \"undefined\";});\n    		var p2 = this.getSnomedModulesTypes().then(function(p){return typeof p.meta.errorInfo === \"undefined\";});\n    		var p3 = this.getSnomedComponentTypes().then(function(p){return typeof p.meta.errorInfo === \"undefined\";});\n    		\n    		return Ember.RSVP.all([p1,p2,p3]).then(function(){\n    			return {refsets:p1._result,modules:p2._result,components:p3._result};\n    		}).then(function(init)\n    		{\n    			if (!init.refsets)\n    			{\n    				Bootstrap.NM.push(\'Communication Error : API not responding. Application Failed to initialize Refset Types. retryCounter.\', \'warning\');	\n    			}\n\n    			if (!init.modules)\n    			{\n    				Bootstrap.NM.push(\'Communication Error : API not responding. Application Failed to initialize Modules Types. retryCounter.\', \'warning\');	\n    			}\n\n    			if (!init.components)\n    			{\n    				Bootstrap.NM.push(\'Communication Error : API not responding. Application Failed to initialize Refset Component Types. retryCounter.\', \'warning\');	\n    			}\n    			\n    			return (init.refsets && init.refsets && init.refsets);\n    		});\n    	},\n    	\n    	processRetryQueue : function()\n    	{\n    		if (this.retryQueue.length)\n    		{\n    			// Copy and empty the queue so we can work on a queue that does not change\n    			var queue = this.retryQueue;\n    			this.set(\"retryQueue\",[]);\n    			\n    			for (var q=queue.length -1;q>=0;q--)\n    			{\n    				var queueItem 	= queue[q];\n    				var timeNow 	= new Date().getTime();\n    			\n    				if (queueItem.runTime <= timeNow)\n    				{\n    					queue.splice(q,1);\n    					\n    					this[queueItem.callbackFn].apply(this,queueItem.params);\n    				}\n    			}\n    			\n    			// Add anything left in our queue to the main one for future processing\n    			queue = queue.concat(this.retryQueue);\n    			this.set(\"retryQueue\",queue);\n    		}	\n    		\n    		var _this = this;\n    		\n    		Ember.run.later(function(){_this.processRetryQueue();},250);\n    	},\n    	\n    	applicationPathChanged : function()\n    	{\n    		Ember.Logger.log(\"controllers.data:applicationPathChanged (retryQueue,initialised)\",this.retryQueue,this.initialised);\n\n    		if (!this.initalised)\n    		{\n    			if (this.refsetTypesArray.length && this.componentTypesArray.length && this.moduleTypesArray.length)\n    			{\n    				this.set(\"initialised\",true);\n    			}\n    		}\n    		\n    		\n    		if (this.initialised)\n    		{\n    			this.set(\"showWaitCounter\",this.callsInProgressCounter);\n    			this.set(\"hideWaitCounter\",0);\n\n    			// Need to alert aborts before we do this...\n    			this.set(\"retryQueue\",[]);\n    			this.set(\"refsetMemberRequestQueue\",[]);		\n    			\n    			$(\'.waitAnim\').hide();\n    		}\n    	},\n    	\n    	authenticationStatusChanged : function()\n    	{\n    		Ember.Logger.log(\"controllers.data:authenticationStatusChanged\");\n    		\n    		// Abandon any previous queued messages since we\'ll retry now\n    		this.applicationPathChanged();\n    		\n    		if (this.currentAllRefsets !== null)\n    		{\n    			this.getAllRefsets(this.currentAllRefsets.callingController,this.currentAllRefsets.completeAction);\n    		}\n    		\n    		// If we are holding a refset then refresh it\n    		if (this.currentRefset !== null)\n    		{\n    			this.getRefset(this.currentRefset.uuid,this.currentRefset.callingController,this.currentRefset.completeAction);\n    		}\n    	},\n    	\n    	showWaitAnim : function()\n    	{\n    		this.set(\"showWaitCounter\",this.showWaitCounter+1);\n    		\n    		$(\'.waitAnim\').show();\n    	},\n    	\n    	hideWaitAnim : function()\n    	{\n    		this.set(\"hideWaitCounter\",this.hideWaitCounter+1);\n    		\n    		if (this.showWaitCounter === this.hideWaitCounter)\n    		{\n    			$(\'.waitAnim\').hide();\n    		}\n    	},\n    	\n    	getRetryWaitPeriod : function(counter)\n    	{\n    		var multiplier = 1;\n    		\n    		for (var c=0;c<counter;c++)\n    		{\n    			multiplier = multiplier * autoServerRetryMultiplier;\n    		}\n    		\n    		return Math.ceil(autoServerRetryInterval * multiplier);\n    	},\n    	\n    	handleRequestFailure : function(response,resourceType,callbackFn,callbackParams,callingController,completeAction,retryCounter)\n    	{\n    		var _this = this;\n    		\n    		switch(response.meta.errorInfo.code)\n    		{\n    			case \"401\":\n    			{\n    				var loginController = this.get(\'controllers.login\');\n    				var user = loginController.user;\n    								\n    				// Question here is, has the user\'s token been updated?\n\n    				if (user.token === null)\n    				{\n    					// User is not logged in, so prompt to login\n    					Bootstrap.NM.push(\'Authentication Required : The \' + resourceType + \' you have requested is not publically available. You must log in to view it.\', \'warning\');\n    					loginController.showLoginForm();\n\n        				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n        				{\n            				callingController.send(completeAction,response);\n        				}				\n    				}\n    				else\n    				{\n    					// User is logged in, but it not permitted to access the requested resource\n    					Bootstrap.NM.push(\'Not Authorised : You do not have permission to access the \' + resourceType + \' you have requested.\', \'warning\');\n    					\n    			        BootstrapDialog.show({\n    			            title: \'Not Authorised\',\n    			            closable: false,\n    			            message: \'You do not have permission to access the \' + resourceType + \' you have requested.\',\n    			            buttons: [{\n    			                label: \'OK\',\n    			                action: function(dialog) {\n    			                	// Go to parent route....\n    			                    dialog.close();\n    			                }\n    			            }]\n    			        });\n    				}\n    				\n    				_this.hideWaitAnim();\n    				\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    				{\n        				callingController.send(completeAction,{error:1,unauthorised:1});\n    				}\n    				\n    				return;\n    			}\n\n    			case \"404\":\n    			{\n    				// Not found\n    				Bootstrap.NM.push(\'Not found : We cannot locate the \' + resourceType + \' you have requested.\', \'warning\');\n\n    				_this.hideWaitAnim();\n    				\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    				{\n        				callingController.send(completeAction,{error:1,notFound:1});\n    				}\n\n    				return;\n    			}\n    			\n    			case \"400\":\n    			{\n    				// Bad Request\n    				Bootstrap.NM.push(\'Bad Request : Server rejected our request\', \'warning\');\n\n    				_this.hideWaitAnim();\n    				\n    				BootstrapDialog.show({\n    		            title: \'Bad Request : \' + resourceType,\n    		            closable: false,\n    		            message: \'<p>There has been a problem communicating with the server.</p><p>\' + response.meta.errorInfo.message + \'</p>\',\n    		            buttons: \n    		            [\n    		             	{\n    		             		label: \'OK\',\n    		             		action: function(dialog)\n    		             		{\n    		             			_this.hideWaitAnim();\n    		        				\n    		             			Ember.Logger.log(\"closing window\",callingController,completeAction);\n    		             			\n    		             			\n    		        				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    		        				{\n    		            				callingController.send(completeAction,{error:1,requestError:1});\n    		        				}\n    		        				\n    		             			dialog.close();\n    		             		}\n    		             	}\n    		             ]\n    		        });\n\n    				return;\n    			}\n    			\n    			default :\n    			{\n    				// Other error, worth retryCounter...\n    			\n    				if (retryCounter < numAutoServerRetries)\n    				{\n    					var waitPeriod = _this.getRetryWaitPeriod(retryCounter);\n    					\n    					Bootstrap.NM.push(\'Communication Error : Error communicating with the server \' + (++retryCounter) + \' times. Will retry \' + resourceType + \' in \' + waitPeriod + \' seconds.\', \'warning\');\n    									\n\n    					var params = callbackParams;\n    					if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    					{\n    						params.push(callingController);\n    						params.push(completeAction);\n    					}\n    					params.push(retryCounter);\n\n    					var runTime = new Date().getTime() + (waitPeriod * 1000);\n    					\n    					var queue = _this.retryQueue;\n    					queue.push({resourceType:resourceType,callbackFn:callbackFn,params:params,runTime:runTime});\n    					\n    					_this.set(\"retryQueue\",queue);\n    					\n    					return;\n    				}\n    				else\n    				{\n    					// Too many errors. Time to prompt the user\n    					if (!this.loginDialogOpen || !this.initialised)\n    					{\n    						Bootstrap.NM.push(\'Communication Failure : Error communicating with the server. \' + (numAutoServerRetries +1) + \' sucessive attempts to \' + resourceType + \' have failed.\', \'danger\');\n\n    						BootstrapDialog.show({\n    				            title: \'Communication Failure : \' + resourceType,\n    				            closable: false,\n    				            message: \'<p>There has been a problem communicating with the server.</p><p>We have tried \' + (numAutoServerRetries +1) + \' times already to \' + resourceType + \'.</p><p>Would you like to keep trying or give up?</p>\',\n    				            buttons: \n    				            [\n    				             	{\n    				             		label: \'Give up\',\n    				             		action: function(dialog)\n    				             		{\n    				             			_this.hideWaitAnim();\n    				        				\n    				        				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    				        				{\n    				            				callingController.send(completeAction,{error:1,commsError:1});\n    				        				}\n    				        				\n    				             			dialog.close();\n    				             		}\n    				             	},\n    				             	{\n    				             		label: \'Continue Trying\',\n    				             		cssClass: \'btn-primary\',\n    				             		action: function(dialog)\n    				             		{\n    				    					var params = callbackParams;\n    				    					if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n    				    					{\n    				    						params.push(callingController);\n    				    						params.push(completeAction);\n    				    					}\n    				    					params.push(retryCounter);\n    				    					\n    				    					_this[callbackFn].apply(_this,params);\n    				             			dialog.close();\n    				             		}\n    				             	}\n    				             ]\n    				        });\n    					}\n    					else\n    					{\n    						Bootstrap.NM.push(\'Communication Failure : Error communicating with the server. \' + (numAutoServerRetries +1) + \' sucessive attempts to load \' + resourceType + \' have failed. Giving up.\', \'danger\');\n                 			_this.send(\"abortDataRequest\",resourceType);\n            				_this.hideWaitAnim();\n            				\n            				if (typeof callingController !== \"undefined\" && typeof completeAction !== \"undefined\")\n            				{\n                				callingController.send(completeAction,{error:1,commsError:1});\n            				}\n\n            				return;\n    					}\n    					\n    				}\n    			}\n    		}\n    	},\n\n    	// -----------------------------------------------------------------------------------------------\n    	\n    	\n    	getAllRefsets : function(callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.refsets:getAllRefSets (retry)\",retry);\n    		\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    	\n    		this.set(\"currentAllRefsets\",{callingController:callingController,completeAction:completeAction});	\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		return refsetsAdapter.findAll(user,0,1).then(function(response)\n    		{\n    			// Need to pick up total number of refsets from the response here...\n    			\n    			var start = 1, end = 0;\n    			var idArraySlices = [];\n    			\n    			var totalNumRefsets = 100;\n    			\n    			while (start < totalNumRefsets)\n    			{\n    				end = Math.min(start + 99,totalNumRefsets);\n    				\n    				if (start === 0) {end = 10;}\n    				\n    				idArraySlices.push({from:start,to:end});\n    				\n    				start = end + 1;\n    			}\n    			\n    			_this.refsetsRequestQueue.setObjects(idArraySlices);\n    			\n    			_this.processRefsetsRequestQueue(callingController,completeAction,retryCounter,user);\n    							\n    			if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    			{\n    				callingController.send(completeAction,{error:0});\n    			}\n    		});\n    	},\n    	\n    	processRefsetsRequestQueue : function(callingController,completeAction,retryCounter,user)\n    	{\n    		var _this = this;\n    		var promise;\n    		\n    		if (this.refsetsRequestQueue.length)\n    		{\n    			var refsetsToProcess = this.refsetsRequestQueue.shift();\n\n    			promise = this.getRefsetChunks(callingController,completeAction,retryCounter,user,refsetsToProcess.from,refsetsToProcess.to).then(function(response)\n    			{\n    				if (typeof response === \"undefined\" || response.error)\n    				{\n    					Ember.Logger.log(\"processRefsetsRequestQueue error\",response);\n    				}\n    			});\n    		}\n    		\n    		Ember.RSVP.all([promise]).then(function()\n    		{\n    			if (_this.refsetsRequestQueue.length)\n    			{\n    				_this.processRefsetsRequestQueue(callingController,completeAction,user);\n    			}\n    		});\n    	},\n\n    	getRefsetChunks : function(callingController,completeAction,retryCounter,user,from,to)\n    	{	\n    		var _this = this;\n    		\n    		return refsetsAdapter.findAll(user,from,to).then(function(response)\n    		{	\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				_this.hideWaitAnim();\n\n    				var refsetsArray 		= [];			\n\n    				response.content.refsets.map(function(item)\n    				{\n    					var moduleType 		= _this.moduleTypes[item.moduleId];\n    					var componentType 	= _this.componentTypes[item.componentTypeId];\n    					var language 		= _this.languageTypes[item.languageCode];\n    					var typeId 			= _this.refsetTypes[item.typeId];\n\n    					item.meta = {type:typeId,moduleType:moduleType,componentType:componentType,language:language,disabled:false};\n\n    					if (item.active)\n    					{\n    						if (item.published)\n    						{\n    							item.meta.status = \'published\';\n    						}\n    						else\n    						{\n    							item.meta.status = \'unpublished\';\n    						}\n    					}\n    					else\n    					{\n    						item.meta.status = \'inactive\';\n    						item.meta.disabled = true;\n    					}\n\n    					refsetsArray.push(item);\n\n    				});\n    				\n    				_this.refsets.setObjects(_this.get(\"refsets\").concat(refsetsArray));\n\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0});\n    				}\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get list of refsets\',\'getAllRefsets\',[],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n    	\n    	getRefset : function(id,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getRefset (id,callingController,completeAction,retry)\",id,callingController,completeAction,retry);\n\n    		this.set(\"currentRefset\",{id:id,callingController:callingController,completeAction:completeAction});\n    		\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		refsetsAdapter.findHeader(user,id).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				_this.hideWaitAnim();\n\n    				response.content.refset.meta 	= {};\n    				response.content.refset.members	= [];\n    				\n    				response.content.refset.meta.allMembersLoaded = false;\n    				\n    				_this.set(\"refset\",response.content.refset);\n    				\n    				// Now get member data...\n    				\n    				var start = 0, end = 0;\n    				var idArraySlices = [];\n    				\n    				while (start < response.content.refset.totalNoOfMembers)\n    				{\n    					end = Math.min(start + 99,response.content.refset.totalNoOfMembers);\n    					\n    					if (start === 0) {end = 10;}\n    					\n    					idArraySlices.push({from:start,to:end});\n    					\n    					start = end + 1;\n    				}\n    				\n    				_this.refsetMemberRequestQueue.setObjects(idArraySlices);\n    				\n    				_this.processRefsetMemberRequestQueue(user,id);\n    								\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0});\n    				}\n\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Refset\',\'getRefset\',[id],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n    	\n    	processRefsetMemberRequestQueue : function(user,id)\n    	{\n    		var _this = this;\n    		var promise;\n    		\n    		if (this.refsetMemberRequestQueue.length)\n    		{\n    			var membersToProcess = this.refsetMemberRequestQueue.shift();\n    	\n    			promise = this.getRefsetMembers(user,id,membersToProcess.from,membersToProcess.to).then(function(response)\n    			{\n    				if (typeof response === \"undefined\" || response.error)\n    				{\n    					Ember.Logger.log(\"processRefsetMemberRequestQueue error\",response);\n    				}\n    			});\n    		}\n    		\n    		Ember.RSVP.all([promise]).then(function()\n    		{\n    			if (_this.refsetMemberRequestQueue.length)\n    			{\n    				_this.processRefsetMemberRequestQueue(user,id);\n    			}\n    		});\n    	},\n    	\n    	getRefsetMembers : function(user,id,from,to)\n    	{	\n    		var _this = this;\n    		\n    		return refsetsAdapter.findMembers(user,id,from,to).then(function(response)\n    		{\n    			if (typeof _this.refset.members !== \"undefined\")\n    			{\n    				var members = _this.refset.members.concat(response.content.members);\n    				\n    				var MemberData = members.map(function(member)\n    				{\n    					member.meta = {};\n    	\n    					member.meta.conceptActive 			= true;\n    					member.meta.found 					= true;\n    					member.meta.deleteConcept			= false;\n    					\n    					member.meta.originalActive			= member.active;\n    					member.meta.originalModuleId		= member.moduleId;\n    					\n    					return member;\n    				});\n    				\n    				_this.refset.members.setObjects(MemberData);\n    				\n    				if (_this.refset.members.length === _this.refset.totalNoOfMembers)\n    				{\n    					_this.set(\"refset.meta.allMembersLoaded\",true);\n    				}\n    			}\n    			else\n    			{\n    				return {error:false};\n    			}\n    		});\n    	\n    	},\n    	\n    	createRefset : function(refset,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:createRefset (retry,callingController,completeAction,retry)\",retry,callingController,completeAction,refset);\n\n    		var _this 		= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		refsetsAdapter.create(user,refset).then(function(response)\n    		{\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				refset.uuid = response.content.uuid;		\n    		\n    				_this.set(\"model\",refset);\n    				\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0,uuid:refset.uuid});				\n    				}\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Create refset\',\'createRefset\',[refset],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n\n    	deleteRefset : function(refsetId,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:deleteRefset (refsetId,callingController,completeAction,retry)\",refsetId,callingController,completeAction,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		refsetsAdapter.deleteRefset(user,refsetId).then(function(response)\n    		{\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				Bootstrap.NM.push(\'Refset Service : Refset deleted\', \'info\');\n\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0});				\n    				}\n    			}	\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Delete refset\',\'deleteRefset\',[refsetId],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n    	\n    	updateRefset : function(refset,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:updateRefset (refset,callingController,completeAction,retry)\",refset,callingController,completeAction,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		refsetsAdapter.update(user,refset).then(function(response)\n    		{\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				Bootstrap.NM.push(\'Refset Service : Refset updated\', \'info\');\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0});\n    				}\n    			}	\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Update refset\',\'updateRefset\',[refset],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n    	\n    	addMembers : function(refsetId,members,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:addMembers (members,retry)\",members,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user 			= loginController.user;\n\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var result = refsetsAdapter.addMembers(user,refsetId,members).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			_this.hideWaitAnim();\n\n    			if (typeof response.meta === \"undefined\" || typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0,refsetId:refsetId,members:response.content.outcome});	\n    				}\n    				\n    				_this.getRefset(refsetId);\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Add members to refset\',\'addMembers\',[refsetId,members],callingController,completeAction,retryCounter);\n    			}\n    		});\n\n    		return result;\n    	},\n    	\n    	getMembers : function(members,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getMembers (members,retry)\",members,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var memberDetails = membersAdapter.findList(user,members).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			_this.hideWaitAnim();\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				return response.content.concepts;\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get refset member details\',\'getMembers\',[members],callingController,completeAction,retryCounter);\n    				return {};\n    			}			\n    		});	\n    		\n    		return memberDetails;\n    	},\n    	\n    	getMember : function(id,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getMember (id,retry)\",id,retry);\n\n    		var _this 		= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n\n    		if (typeof this.concepts[id] !== \"undefined\")\n    		{\n    			return new Ember.RSVP.Promise(function(resolve){resolve(_this.concepts[id]);});\n    		}\n    		\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var memberDetails = membersAdapter.find(user,id).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			_this.hideWaitAnim();\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    			//	_this.set(\"concepts[\" + id + \"]\",response.content.concept); \n    				return response.content.concept;\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get refset memebr details\',\'getMember\',[id],callingController,completeAction,retryCounter);\n    				return {label:\'not found\'};\n    			}			\n    		});	\n    		\n    		return memberDetails;\n    	},\n    	\n    	deleteMembers : function(refsetId,members,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:deleteMembers (members,retry)\",members,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		refsetsAdapter.deleteMembers(user,refsetId,members).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			_this.hideWaitAnim();\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,response.content.outcome);\n    				}\n    				\n    				_this.getRefset(refsetId);		\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Delete refset members\',\'deleteMembers\',[refsetId,members],callingController,completeAction,retryCounter);\n    			}\n    		});	\n    	},\n    	\n    	getSnomedRefsetTypes : function(retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getSnomedRefsetTypes (retry)\",retry);\n    		\n    		if (this.refsetTypes.length)\n    		{\n    			return;\n    		}\n    		\n    		var _this 		= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var promise = snomedTypesAdapter.getRefsetTypes(user).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				_this.hideWaitAnim();\n    				_this.set(\"refsetTypes\",response.content.refsetTypes);\n    				\n    				for (var x=0;x<RefsetENV.APP.supportedSnomedTypes.refsetTypes.length;x++)\n    				{\n    					var id = RefsetENV.APP.supportedSnomedTypes.refsetTypes[x];	\n    					_this.refsetTypesArray.pushObject({id:id,label:response.content.refsetTypes[id].replace(/ *\\([^)]*\\) */g, \"\")});\n    				}\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get refset types\',\'getSnomedRefsetTypes\',[],retryCounter);\n    			}\n    			return response;\n    		});	\n    		\n    		return promise; \n    	},\n\n    	getSnomedModulesTypes : function(retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getSnomedModulesTypes (retry)\",retry);\n    		\n    		if (this.moduleTypes.length)\n    		{\n    			return;\n    		}\n\n    		var _this 		= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var promise = snomedTypesAdapter.getModules(user).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				_this.hideWaitAnim();\n    				_this.set(\"moduleTypes\",response.content.modules);	\n    				\n    				for (var id in response.content.modules)\n    				{\n    					_this.moduleTypesArray.pushObject({id:id,label:response.content.modules[id].replace(/ *\\([^)]*\\) */g, \"\")});\n    				}\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get module types\',\'getSnomedModulesTypes\',[],retryCounter);\n    			}\n    			return response;\n    		});	\n    		\n    		return promise;\n    	},\n\n    	getSnomedComponentTypes : function(retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:getSnomedComponentTypes (retry)\",retry);\n    		\n    		if (this.componentTypes.length)\n    		{\n    			return;\n    		}\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var promise = snomedTypesAdapter.getComponentTypes(user).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				_this.hideWaitAnim();\n    				_this.set(\"componentTypes\",response.content.componentTypes);\n\n    				for (var x=0;x<RefsetENV.APP.supportedSnomedTypes.componentTypes.length;x++)\n    				{\n    					var id = RefsetENV.APP.supportedSnomedTypes.componentTypes[x];					\n    					_this.componentTypesArray.pushObject({id:id,label:response.content.componentTypes[id].replace(/ *\\([^)]*\\) */g, \"\")});\n    				}\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Get refset component types\',\'getSnomedComponentTypes\',[],retryCounter);\n    			}\n    			\n    			return response;\n    		});		\n    		\n    		return promise;\n    	},\n\n    	importRF2 : function(refsetId,rf2file,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:importRF2 (refsetId,retry)\",refsetId,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n\n    		var loginController = this.get(\'controllers.login\');\n    		var user 			= loginController.user;\n\n    		this.set(\"callsInProgressCounter\",this.callsInProgressCounter+1);\n\n    		if (!retryCounter)\n    		{\n    			this.showWaitAnim();\n    		}\n    		\n    		var result = refsetsAdapter.importRF2(user,refsetId,rf2file).then(function(response)\n    		{\n    			_this.set(\"callsInProgressCounter\",_this.callsInProgressCounter-1);\n\n    			_this.hideWaitAnim();\n\n    			if (typeof response.meta === \"undefined\" || typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,{error:0,refsetId:refsetId,rf2report:{}});	\n    				}\n    				\n    				_this.getRefset(refsetId);\n    			}\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Import RF2\',\'importRF2\',[refsetId,rf2file],callingController,completeAction,retryCounter);\n    			}\n    		});\n\n    		return result;\n    	},\n    	\n    	searchRefsetMembers : function(searchTerm,callingController,completeAction,retry)\n    	{\n    		Ember.Logger.log(\"controllers.data:searchRefset (searchTerm,callingController,completeAction,retry)\",searchTerm,callingController,completeAction,retry);\n\n    		var _this 			= this;\n    		var retryCounter 	= (typeof retry === \"undefined\" ? 0 : retry);\n    		\n    		var loginController = this.get(\'controllers.login\');\n    		var user = loginController.user;\n    		\n    		refsetsAdapter.searchRefsetMembers(user,searchTerm).then(function(response)\n    		{\n    			if (typeof response.meta.errorInfo === \'undefined\')\n    			{\n    				if (typeof callingController !== \"undefined\" && typeof completeAction !== \'undefined\')\n    				{\n    					callingController.send(completeAction,response);				\n    				}\n    			}	\n    			else\n    			{\n    				_this.handleRequestFailure(response,\'Search refsets\',\'searchRefset\',[searchTerm],callingController,completeAction,retryCounter);\n    			}\n    		});\n    	},\n    	\n    });\n  });//# sourceURL=refset/controllers/data.js");

;eval("define(\"refset/controllers/login\", \n  [\"refset/adapters/login\",\"refset/models/user\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var LoginAdapter = __dependency1__[\"default\"];\n    var User = __dependency2__[\"default\"];\n\n    var loginAdapter = LoginAdapter.create();\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	needs 				: [\"refsets\",\"utilities\",\"data\"],\n\n    	loginDialogOpen		: false,			// Indicates that we have an open login dialog window\n    	autoLoggedOut		: false,			// Indicates that the user was logged out automatically through inactivity\n    	loginError			: null,				// Contains any relevant login error message\n    	username			: null,				// Bound to the login form input field\n    	password			: \'\',				// Holds the user\'s password between form entry and the authentication call\n    	user				: User.create(),	// A dummy user record. Overwritten upon login\n    	logoutDialogOpen	: false,			// Are we showing an auto-logout alert?\n    	loginDialogRef		: null,\n\n    	loginExpiryLength 	: RefsetENV.APP.loginExpiry * 60 * 1000, // Setting is in MINUTES, we need milliseconds here. This is the inactivity period before auto logout\n    	\n    	showLogoutTimer		: Ember.computed.lte(\"logoutTimerDisplay\",200),	// Only show the logout progress bar if there are 200 seconds or less left until logout.\n    	\n    	logoutTimerDisplay 	: function() 		// A auto calculated property which returns how many seconds are left until user is automatically logged out\n    	{\n    		return this.getSecondsLeftToAutoLogout();\n    	}.property(\"user\"),\n    	\n    	logoutProgressDisplay : function() 		// A auto calculated property which returns a range of 1-100 for the progress bar showing how long until user is automatically logged out\n    	{\n    		var secondsLeft = this.getSecondsLeftToAutoLogout();\n    		\n    		return (secondsLeft / 2);\n    	}.property(\"user\"),\n    	\n    	showLoginForm : function()\n    	{\n    		var _this = this;\n    		\n    		// In case logout alert is showing, close it.\n    		this.send(\"closeLogoutAlertModal\");\n    		\n    		if (!this.loginDialogOpen)\n    		{\n    			this.set(\"loginDialogOpen\",true);\n    			\n    			var loginFormSource   = $(\"#login-form\").html();\n    			var loginFormTemplate = Handlebars.compile(loginFormSource.replace(/(\\r\\n|\\n|\\r)/gm, \'\'));\n    			var context = {autoLoggedOut: this.autoLoggedOut, username: this.user.name, forgotPasswordLink:RefsetENV.APP.passwordResetURL,timeout:RefsetENV.APP.loginExpiry};\n    			var loginFormHTML = loginFormTemplate(context);\n    			\n    			var loginDialog = BootstrapDialog.show({\n    	            title: \'Authentication Required\',\n    	            closable: false,\n    	            message: loginFormHTML,\n    	            buttons: \n    	            [\n    	             	{\n    	             		label		: \'Register\',\n    	             		cssClass	: \'btn-default left\',\n    	             		action		: function(dialog)\n    	             		{\n    	             			_this.set(\"loginDialogOpen\",false);\n    	             			dialog.close();\n    	             			_this.showRegistrationForm();\n    	             		}\n    	             	},\n    	             	{\n    	             		label	: \'Continue as a guest\',\n    	             		action	: function(dialog)\n    	             		{\n    	             			_this.set(\"loginDialogOpen\",false);\n    	             			dialog.close();\n    	             		}\n    	             	},\n    	             	{\n    	             		label		: \'Login\',\n    	             		cssClass	: \'btn-primary\',\n    	             		icon		: \'glyphicon glyphicon-user\',\n    	             		id 			: \'submit-btn\',\n    	             		hotkey		: 13, // Enter key\n    	             		action 		: function(dialog)\n    	             		{\n    	             			var btn = this;\n    	             			btn.spin();\n\n    	             			_this.login($(\'#loginFormUsername\').val(),$(\'#loginFormPassword\').val()).then(function(loginResult)\n    	             			{\n    		             			if (loginResult)\n    		             			{\n    		             				_this.set(\"loginDialogOpen\",false);\n    		             				dialog.close();\n    		             			}\n    		             			else\n    		             			{\n    			             			btn.stopSpin();		             									             				\n    		             			}\n    	             			});\n    	             		}\n    	             	}\n    	             ]\n    	        });	\n    			\n    			this.set(\"loginDialogRef\",loginDialog);\n    		}\n    			\n    	},\n    	\n    	login : function(username,password)\n    	{\n    		var _this = this;\n    		\n    		return loginAdapter.authenticate(username,password).then(function(authResult)\n    		{\n    			var user = authResult.user;\n    			\n    			if (authResult.authenticated)\n    			{\n    				return loginAdapter.isPermittedToUseRefset(user.name).then(function(permissionResult)\n    				{\n    					if (permissionResult)\n    					{\n    						user.autoLogoutTime = new Date(new Date().getTime() + _this.loginExpiryLength);\n    						user.loginDeclined	= false;\n\n    						_this.saveUserToLocalStore(user);\n             				_this.initUserInteractionEvents();\n    						\n    						var dataController = _this.get(\'controllers.data\');\n    						dataController.authenticationStatusChanged();\n    					}\n    					else\n    					{\n    						Bootstrap.GNM.push(\'Unauthorised\',\'You do not have permission to acccess this application\', \'warning\');\n    					}\n    					return permissionResult;\n    				});			\n    			}\n    			else\n    			{\n    				Bootstrap.GNM.push(\'Unauthorised\',\'Your username and/or password were not accepted\', \'warning\');\n    				return false;\n    			}\n    			\n    		});\n    	},\n    	\n    	// Log the user out of the app\n    	logout : function()\n    	{\n    		var user = $.extend(true, {}, this.user);\n    		\n    		// This has the effect of logging the user out\n    		user.token = null;\n\n    		// Store our modified user record in the Local Store\n    		this.saveUserToLocalStore(user);\n\n    		// Since we changed authentication state, we need to refresh our list of refsets.\n    		var dataController = this.get(\'controllers.data\');\n    		dataController.authenticationStatusChanged();\n    		\n    		// No need to monitor user activity once they have been logged out\n    		this.stopUserInteractionEvents();\n    		\n    		// Show the login form\n    		this.showLoginForm();\n    	},\n    	\n    	registerButtons : \n    	[\n    		Ember.Object.create({title: \'Cancel\', clicked: \'closeRegistrationModal\'}),\n       		Ember.Object.create({title: \'Register\', clicked:\'registerUser\', type:\"primary\"})\n    	],\n    	\n    	// Show the registration modal dialog\n    	showRegistrationForm: function() \n    	{\n    		Bootstrap.ModalManager.open(\'registrationModal\', \'Snomed CT\', \'registration\', this.registerButtons, this); // modal ID, title, template (hbs), buttons, controller (usually this)\n    	},\n    	\n       	init : function()\n    	{	\n       		var _this = this;\n       		\n       	   	// When we start up we want to check the Local Store to see if the user may already be logged in\n       		this.monitorLoginViaLocalStore();\n       		setInterval(function(){_this.monitorLoginViaLocalStore();},1000);\n    		\n    		// Show the login form if needed\n    		if(this.user.token === null && !this.user.loginDeclined)\n    		{\n    			this.showLoginForm();\n    		}\n    	},\n\n    	// Calculates the number of seconds of inactivity remaining before the user will be auto logged out\n    	getSecondsLeftToAutoLogout : function()\n    	{\n    		var autoLogoutTime 		= new Date(this.user.autoLogoutTime);\n    		var timeLeftToLogout 	= parseInt((autoLogoutTime.getTime() - new Date().getTime()) /1000); // seconds\n\n    		if (this.user.token !== null && !this.logoutDialogOpen && timeLeftToLogout < 90 && timeLeftToLogout > 0)\n    		{\n    			this.set(\"logoutDialogOpen\",true);\n    			Bootstrap.ModalManager.open(\'logoutModal\', \'<img src=\"assets/img/login.png\"> Snomed CT\', \'logout-alert\', this.logoutButtons, this); // modal ID, title, template (hbs), buttons, controller (usually this)\n    		}\n\n    		return timeLeftToLogout;\n    	},\n\n    	// Check the Local Store every second to see if out user record has been overwritten by another window\n    	monitorLoginViaLocalStore : function()\n    	{\n    		var controller 	= this.get(\'controllers.utilities\');\n    		var userData 	= controller.getDataFromSessionStore(\'user\');\n    		var refreshData = false;\n\n    		if (userData.status === \'ok\' && userData.data !== null)\n    		{\n    			// If user not logged in here, but has logged in on another window then we need to act as if the user has logged in here\n    			if (this.user.token === null && userData.data.token !== null)\n    			{\n    				this.initUserInteractionEvents();\n    				this.send(\'closeLoginModal\');\n    				\n    				refreshData = true;\n    			}\n    			else\n    			{\n    				if (this.user.token !== null && userData.data.token === null)\n    				{\n    					refreshData = true;\n    				}				\n    			}\n    			\n    			// Save the user record from the Local Store into this controller\n    			this.set(\"user\",userData.data);\n    	\n    			if (this.user.token !== null && this.getSecondsLeftToAutoLogout() < 0)\n    			{\n    				this.send(\"closeLogoutAlertModal\");\n    				this.showLoginForm();\n    			}\n    			\n    			if (refreshData)\n    			{\n    				var dataController 	= this.get(\'controllers.data\');\n    				dataController.authenticationStatusChanged();				\n    			}\n\n    			// If we do not already have a username, then use the one from the Store. We only do this once, otherwise it will prevent you entering a username in the login form since it is bound to this value.\n    			if (this.name === null)\n    			{\n    				this.set(\"name\",userData.data.name);				\n    			}\n    		}\n\n    		// Calculate how long the user has been inactive\n    		var timeLeftToAutoLogout = this.getSecondsLeftToAutoLogout();\n    		\n    		// If user is currently logged in and inactivity period has been exceeded then log the user out\n    		if (this.user.token !== null && timeLeftToAutoLogout <= 0)\n    		{\n    			// Enable the \"you\'ve been auto logged out\" message in the login dialog\n    			Bootstrap.GNM.push(\'Session Timeout\',\'You have been logged out after \' + RefsetENV.APP.loginExpiry + \' minutes of inactivity\', \'warning\');\n\n    			this.set(\"autoLoggedOut\",true);\n    			this.logout();\n    		}\n    	},\n    	\n    	// Events handlers to detect ANY user interaction. Used to reset the inactivity timer.\n    	initUserInteractionEvents : function()\n    	{\n    	    $(document).mousemove(function () {\n    			var controller = Refset.__container__.lookup(\"controller:login\");\n    			controller.send(\'resetAutoLogoutTimer\');\n    	    });\n    	    \n    	    $(document).keypress(function () {\n    			var controller = Refset.__container__.lookup(\"controller:login\");\n    			controller.send(\'resetAutoLogoutTimer\');\n    	    });\n    	},\n\n    	// Disable the user interaction event handlers (when user is logged out)\n    	stopUserInteractionEvents : function()\n    	{\n    		// Stop bothering to monitor user events\n    	    $(document).unbind(\'mousemove\');\n    	    $(document).unbind(\'keypress\');\n    	},\n    	\n    	// Save the supplied user record both into this controller and into the Local Store\n    	saveUserToLocalStore : function(user)\n    	{\n    		this.set(\'user\',user);\n    		\n    		var UtilitiesController = this.get(\'controllers.utilities\');						\n    		UtilitiesController.storeDataInSessionStore(\'user\',user);\n    	},\n\n    	actions : \n    	{\n    		logout : function()\n    		{\n    			this.logout();\n    		},\n\n    		closeLoginModal : function()\n    		{\n    			if (this.loginDialogOpen)\n    			{\n    				this.loginDialogRef.close();\n    			}\n    			\n    			this.set(\"loginDialogOpen\",false);\n    		},\n\n    		closeLogoutAlertModal: function()\n    		{\n    			if (this.logoutDialogOpen)\n    			{\n    				Bootstrap.ModalManager.close(\'logoutModal\');\n    			}\n    			\n    			this.set(\"logoutDialogOpen\",false);\n    		},\n\n    		closeRegistrationModal: function()\n    		{\n    			Bootstrap.ModalManager.close(\'registrationModal\');\n    			\n    			this.set(\"loginDialogOpen\",false);\n     		},\n    		\n    		// For now registration consists only of opening the users mail client with some pre-filled in information.\n    		registerUser: function()\n    		{\n    			var regBody = \"Name : \" + this.regname + \"%0A%0A\";\n    			regBody += \"IHTSDO Login : \" + this.reguser + \"%0A%0A\";\n    			regBody += \"Organisations : \" + this.regorg + \"%0A%0A\";\n    			regBody += this.regnotes;\n    			\n    			window.location.href = \'mailto:\' + RefsetENV.APP.RegistrationEmail + \'?subject=Request for access to Reference Set Management Service&body=\' + regBody;\n    			this.send(\'closeRegistrationModal\');\n    		},	\n    		\n    		// If user elects to use the app as a guest then we need to record that fact in order so we can choose not to show the login form if they open another window.\n    		continueAsGuest : function()\n    		{\n    			var user = $.extend(true, {}, this.user);\n    			user.loginDeclined = true;\n\n    			this.saveUserToLocalStore(user);\n    			\n    			Bootstrap.ModalManager.close(\'loginModal\');\n    		},\n    		\n    		// This function is called every time the user makes any interaction with the browser - mouse move, or keypress\n    		// We reset the time the user will be auto logged out because of inactivity.\n    		resetAutoLogoutTimer : function()\n    		{\n    			this.send(\"closeLogoutAlertModal\");\n\n    			var user = $.extend(true, {}, this.user);\n    			\n    			user.autoLogoutTime	= new Date(new Date().getTime() + this.loginExpiryLength);\n    						\n    			this.saveUserToLocalStore(user);\n    		},\n\n    	}\n    	\n    });\n  });//# sourceURL=refset/controllers/login.js");

;eval("define(\"refset/models/user\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var User = Ember.Object.extend({\n    	  name:    		     null,\n    	  firstName:        \'Guest\',\n    	  lastName:         null,\n    	  token:			null,\n    	  permissionGroups: null,\n    	  logoutTimer:		0,\n    	  autoLogoutTime:	new Date(),\n    	  loginDeclined:	false\n    });\n\n    __exports__[\"default\"] = User;\n  });//# sourceURL=refset/models/user.js");

;eval("define(\"refset/controllers/news\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	\n    	model : \n    	[\n    		{\n    	    	\"id\": \"inactive_refsets\",\n    	    	\"title\": \"We now have the concept of an inactive refset\",\n    	    	\"published\": \"2014-11-18T10:00:00\",\n    	    	\"description\": \"We have added th econcept of an inactive refset. An inactive refset can, if required, be made active again. This is the normal action for retiring a refset and differs from deleting a refset.\"\n    	    },\n    		{\n    	    	\"id\": \"import_rf2\",\n    	    	\"title\": \"We can now import an RF2 file to create a puclished refset\",\n    	    	\"published\": \"2014-11-18T10:00:00\",\n    	    	\"description\": \"It is now possible to import an RF2 file which results in the creation of a puvlished refset and the import of the concepts in the file along with their history.\"\n    	    },\n    	    {\n    	    	\"id\": \"first_demo\",\n    	    	\"title\": \"First Public Demonstration : IHTSDO Business Meeting - Amsterdam\",\n    	    	\"published\": \"2014-10-24T10:00:00\",\n    	    	\"description\": \"The new Refset Tool will be publicly demonstrated for the first time at IHTSDO Business Meeting - Amsterdam\"\n    	    },\n    		{\n    	    	\"id\": \"authentication\",\n    	    	\"title\": \"Infinite Scroller - Lists with Turbo Power!\",\n    	    	\"published\": \"2014-10-23T09:00:00\",\n    	    	\"description\": \"We have identified a brilliant infinite scroller widget to put in place of the member lists. Performance is improved significantly for any refset with more than 50 members.The more members, the better the performance improvement. However, we do have a small issue with it which means it has not been included in this release. Look out for it in the next release of the Refset Tool.\"\n    	    },\n    		{\n    	    	\"id\": \"export\",\n    	    	\"title\": \"We can export an RF2 file!\",\n    	    	\"published\": \"2014-09-15T09:00:00\",\n    	    	\"description\": \"Another important milestone. We have now completed the circle by exporting a refset created in the tool back out as an RF2 file. A future task will be to allow import of these RF2 files.\"\n    	    },\n    		{\n    	    	\"id\": \"import\",\n    	    	\"title\": \"Today we imported the first flat file of concept IDs using the new tool\",\n    	    	\"published\": \"2014-09-10T09:00:00\",\n    	    	\"description\": \"Only a small milestone, but today we used the tool for the first time to import a list of concept IDs in a file. \" +\n    	    			\"We then collected the concept details via the API and displayed a list of concept labels for review by the user. \" +\n    	    			\"The final step was to send those to the database via the API.\"\n    	    },\n        ],\n       \n        latestNews : [],\n        \n        init : function()\n        {\n        	this.getLatestNews();\n        },\n        \n    	getLatestNews : function()\n    	{\n    		var allNews = Ember.copy(this.model);\n    		this.latestNews.setObjects(allNews.splice(0,3));\n    	},\n\n    });\n  });//# sourceURL=refset/controllers/news.js");

;eval("define(\"refset/controllers/refsets\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	\n    	needs 	: [\"login\"],\n\n    	user 	: Ember.computed.alias(\"controllers.login.user\"),\n    });\n  });//# sourceURL=refset/controllers/refsets.js");

;eval("define(\"refset/controllers/refsets/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    		\n    	needs 			: [\"data\",\"login\"],\n\n    	refsetTypesArray 			: Ember.computed.alias(\"controllers.data.refsetTypesArray\"),\n    	componentTypesArray 		: Ember.computed.alias(\"controllers.data.componentTypes\"),\n    	moduleTypesArray 			: Ember.computed.alias(\"controllers.data.moduleTypes\"),\n    	languageTypesArray 			: Ember.computed.alias(\"controllers.data.languageTypes\"),\n    	refsetEffectiveTimesArray 	: Ember.computed.alias(\"controllers.data.refsetEffectiveTimesArray\"),\n    	refsetUpdatersArray 		: Ember.computed.alias(\"controllers.data.refsetUpdatersArray\"),\n    	refsets						: Ember.computed.alias(\"controllers.data.refsets\"),\n    	user 						: Ember.computed.alias(\"controllers.login.user\"),\n    	\n    	sortBy 							: \'description\',\n    	sortOrder						: \'asc\',\n\n    	filterByDescription				: \'\',\n    	filterByStatus					: -1,\n    	filterByType					: -1,\n    	filterByModuleId				: -1,\n    	filterByComponentType			: -1,\n    	filterByLanguage				: -1,\n    	filterByEffectiveTime			: -1,\n    	filterByLastUpdateDate			: -1,\n    	filterByLastUpdateUser			: -1,\n    	filterByMemberDescription		: \'\',\n    	\n    	filterByStatusIsActive			: function(){ return this.filterByStatus !== -1;}.property(\'filterByStatus\'),\n    	filterByTypeIsActive			: function(){ return this.filterByType !== -1;}.property(\'filterByType\'),\n    	filterByModuleIdIsActive		: function(){ return this.filterByModuleId !== -1;}.property(\'filterByModuleId\'),\n    	filterByComponentTypeIsActive	: function(){ return this.filterByComponentType !== -1;}.property(\'filterByComponentType\'),\n    	filterByLanguageIsActive		: function(){ return this.filterByLanguage !== -1;}.property(\'filterByLanguage\'),\n    	filterByEffectiveTimeIsActive	: function(){ return this.filterByEffectiveTime !== -1;}.property(\'filterByEffectiveTime\'),\n    	filterByLastUpdateDateIsActive	: function(){ return this.filterByLastUpdateDate !== -1;}.property(\'filterByLastUpdateDate\'),\n    	filterByLastUpdateUserIsActive	: function(){ return this.filterByLastUpdateUser !== -1;}.property(\'filterByLastUpdateUser\'),\n    	\n    	refsetMemberSearchMatchingIDs	: [],\n    	\n    	memberSearch: function(){		\n    		var searchTerm = this.get(\"filterByMemberDescription\");\n    		\n    		if (searchTerm !== \"\")\n    		{\n    			var dataController = this.get(\'controllers.data\');\n    			dataController.searchRefsetMembers(searchTerm,this,\'memberSearchComplete\');\n    		}\n    		\n    	}.observes(\'filterByMemberDescription\'),\n    	  \n    	setSortToBestMatch : function()\n    	{\n    		if (this.get(\"filterByDescription\") !== \'\' || this.get(\"filterByMemberDescription\") !== \'\')\n    		this.set(\"sortOrder\",\"score\");\n    	}.observes(\'filterByMemberDescription\',\'filterByDescription\'),\n    		\n    	filteredRefsets : function()\n    	{\n    		var allRefsets = this.get(\'refsets\');\n    		\n    		return this.filterRefsets(allRefsets);\n    		\n    	}.property(\'refsets.@each\',\'sortBy\',\'sortOrder\',\'filterByDescription\',\'filterByStatus\',\'filterByType\',\'filterByModuleId\',\'filterByComponentType\',\'filterByLanguage\',\'filterByEffectiveTime\',\'filterByLastUpdateDate\',\'filterByLastUpdateUser\',\'filterByMemberDescription\',\'refsetMemberSearchMatchingIDs.@each\'),\n    	\n    	filterRefsets : function(allRefsets)\n    	{\n    		if (typeof allRefsets !== \"undefined\")\n    		{\n    			var filterByDescription 		= this.get(\"filterByDescription\");\n    			var filterByStatus				= this.get(\"filterByStatus\");\n    			var filterByType				= this.get(\"filterByType\");\n    			var filterByModuleId			= this.get(\"filterByModuleId\");\n    			var filterByComponentType		= this.get(\"filterByComponentType\");\n    			var filterByLanguage			= this.get(\"filterByLanguage\");\n    			var filterByEffectiveTime		= this.get(\"filterByEffectiveTime\");\n    			var filterByLastUpdateDate		= this.get(\"filterByLastUpdateDate\");\n    			var filterByLastUpdateUser		= this.get(\"filterByLastUpdateUser\");\n    			var filterByMemberDescription	= this.get(\"filterByMemberDescription\");\n    			var refsetMemberSearchMatchingIDs = this.get(\"refsetMemberSearchMatchingIDs\");\n\n    			var filteredRefsets = allRefsets.map(function(refset)\n    			{\n    				if (typeof refset !== \"undefined\")\n    				{\n    					if (filterByStatus !== -1)\n    					{\n    						if (refset.meta.status !== filterByStatus)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					if (filterByType !== -1)\n    					{\n    						if (refset.typeId !== filterByType)\n    						{\n    							return null;\n    						}\n    					}\n\n    					if (filterByModuleId !== -1)\n    					{\n    						if (refset.moduleId !== filterByModuleId)\n    						{\n    							return null;\n    						}\n    					}\n\n    					if (filterByComponentType !== -1)\n    					{\n    						if (refset.componentTypeId !== filterByComponentType)\n    						{\n    							return null;\n    						}\n    					}\n\n    					if (filterByLanguage !== -1)\n    					{\n    						if (refset.languageCode !== filterByLanguage)\n    						{\n    							return null;\n    						}\n    					}\n\n    					if (filterByEffectiveTime !== -1)\n    					{\n    						if (refset.latestEffectiveTime !== filterByEffectiveTime)\n    						{\n    							return null;\n    						}\n    					}\n    				\n    					if (filterByLastUpdateDate !== -1)\n    					{\n    						var comparisonDate = new Date(filterByLastUpdateDate);\n    						\n    						if (comparisonDate instanceof Date && !isNaN(comparisonDate.valueOf()))\n    						{\n    							if (new Date(refset.modifiedDate).getTime() < comparisonDate.getTime())\n    							{\n    								return null;\n    							}\n    						}\n    					}\n    					\n    					if (filterByLastUpdateUser !== -1)\n    					{\n    						if (refset.modifiedBy !== filterByLastUpdateUser)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					if (filterByMemberDescription !== \'\')\n    					{\n    						if(refsetMemberSearchMatchingIDs.indexOf(refset.uuid) === -1)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					var score;\n    					\n    					if (filterByDescription !== \'\')\n    					{\n    						if (filterByDescription.match(/^[0-9]*$/))\n    						{\n    							var regExp = new RegExp(filterByDescription,\"g\");\n    							score = refset.sctId.search(regExp);\n    							\n    							if (score === -1)\n    							{\n    								return null;\n    							}\n    							else\n    							{\n    								refset.meta.score = 100 - score;\n    							}\n    						}\n    						else\n    						{\n    							score = LiquidMetal.score(refset.description, filterByDescription);\n\n    							if (score < 0.75)\n    							{\n    								return null;								\n    							}\n    							else\n    							{\n    								refset.meta.score = score;\n    							}\n    						}\n    					}\n    					\n    					return refset;	\n    				}\n     \n    			});\n\n    			var nullsRemoved = $.grep(filteredRefsets,function(n){ return(n); });			\n    			var sortBy 		= this.get(\"sortBy\");\n    			var sortOrder 	= this.get(\"sortOrder\");\n    			\n    			if (filterByDescription !== \'\' && sortOrder === \"score\" && (sortBy === \"description\" || sortBy === \"sctId\"))\n    			{\n    				quick_sort(nullsRemoved);\n    			}\n    			else\n    			{\n    				nullsRemoved = mergesort(nullsRemoved,sortBy,sortOrder);\n    			}\n    			\n    			return nullsRemoved;\n    		}\n    	},\n    	\n    	\n    	initModel : function()\n    	{\n    		Ember.Logger.log(\"controllers.refsets.index:initModel\");\n    		\n    		var _this 			= this;\n    		var dataController 	= this.get(\'controllers.data\');\n    		\n    		// Run next so that we do not prevent the UI being displayed if the data is delayed...\n    		return Ember.run.next(function(){dataController.getAllRefsets(_this,\'getAllRefsetsComplete\');});\n    	},\n\n    	\n    	actions :\n    	{\n    		refresh : function()\n    		{\n    			Ember.Logger.log(\"controllers.refsets.index:actions:refresh\");\n    			var dataController = this.get(\'controllers.data\');\n    			\n    			this.set(\"refsets\",[]);\n    			dataController.getAllRefsets();\n    		},\n\n    		getAllRefsetsComplete : function(response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.index:actions:getAllRefsetsComplete (response)\",response);\n    		},	\n    		\n    		addFilter : function()\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:addFilter\");\n    			\n    			var filterName = $(\'#filterSelect\').val();\n    			\n    			Ember.Logger.log(filterName);\n    			\n    			var defaultValue = true;\n    			\n    			var refsets 					= this.get(\"refsets\");\n    			var refsetEffectiveTimesArray 	= this.get(\"refsetEffectiveTimesArray\");\n    			var refsetUpdatersArray 		= this.get(\"refsetUpdatersArray\");\n    			\n    			switch(filterName)\n    			{\n    				case \'filterByStatus\' 			: {defaultValue = \'published\'; break;}\n    				case \'filterByType\' 			: {defaultValue = refsets[0].typeId; break;}\n    				case \'filterByModuleId\' 		: {defaultValue = refsets[0].moduleId; break;}\n    				case \'filterByComponentType\' 	: {defaultValue = refsets[0].componentTypeId; break;}\n    				case \'filterByLanguage\' 		: {defaultValue = refsets[0].languageCode; break;}\n    				case \'filterByEffectiveTime\' 	: {defaultValue = refsetEffectiveTimesArray[0].id; break;}\n    				case \'filterByLastUpdateDate\' 	: {defaultValue = \'\'; break;}\n    				case \'filterByLastUpdateUser\' 	: {defaultValue = refsetUpdatersArray[0].id; break;}\n    			}\n    		\n    			this.set(filterName,defaultValue);\n    			\n    			$(\'#filterSelect\').val(0);\n    		},\n\n    		removeFilter : function(filterName)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:removeFilter\",filterName);\n    			\n    			this.set(filterName,-1);\n    			\n    			var _this = this;\n    			\n    			Ember.run.next(function()\n    			{\n    				_this.set(filterName,-1); // deals with selects changing the value again!\n    			});			\n    		},\n    		\n    		setSortCriteria : function(sortBy)\n    		{\n    			var oldSortBy 			= this.get(\"sortBy\");\n    			var oldSortOrder 		= this.get(\"sortOrder\");\n    			var filterByDescription	= this.get(\"filterByDescription\");\n\n    			var sortOrder = \"asc\";\n\n    			if (oldSortBy === sortBy)\n    			{\n    				switch (oldSortOrder)\n    				{\n    					case \"asc\":\n    					{\n    						sortOrder = \"desc\";\n    						break;\n    					}\n\n    					case \"desc\":\n    					{						\n    						if (sortBy === \"description\" && filterByDescription !== \"\")\n    						{\n    							sortOrder = \"score\";\n    						}\n    						break;\n    					}	\n    				}\n    			}\n    			else\n    			{\n    				if (sortBy === \"description\" && filterByDescription !== \"\")\n    				{\n    					sortOrder = \"score\";\n    				}\n    			}\n    			\n    			this.set(\"sortBy\",sortBy);\n    			this.set(\"sortOrder\",sortOrder);\n    		},\n    		\n    		clearDescriptionFilter : function()\n    		{\n    			this.set(\"filterByDescription\",\"\");\n    			this.set(\"sortOrder\",\"asc\");\n    		},\n    		\n    		clearMemberDescriptionFilter: function()\n    		{\n    			this.set(\"filterByMemberDescription\",\"\");\n    			this.set(\"refsetMemberSearchMatchingIDs\",[]);\n    			this.set(\"sortOrder\",\"asc\");\n    		},\n    		\n    		memberSearchComplete : function(response)\n    		{\n    			Ember.Logger.log(\"memberSearchComplete......\",response);\n    			\n    			if (typeof response.content.result.records !== \"undefined\")\n    			{\n    				this.set(\"refsetMemberSearchMatchingIDs\",response.content.result.records);\n    			}\n    			else\n    			{				\n    				this.set(\"refsetMemberSearchMatchingIDs\",[]);\n    			}\n    		},\n    	}\n    });\n  });//# sourceURL=refset/controllers/refsets/index.js");

;eval("define(\"refset/controllers/refsets/new\", \n  [\"refset/models/refset\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var RefsetModel = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    		\n    	needs : [\"login\",\"utilities\",\"refsets/upload\",\"data\"],\n\n    	potentialMembersToImport	: Ember.computed.alias(\"controllers.refsets/upload.model\"),\n    	getConceptDataInProgress 	: Ember.computed.alias(\"controllers.refsets/upload.getConceptDataInProgress\"),\n    	importError 				: Ember.computed.alias(\"controllers.refsets/upload.importError\"),\n    	moduleTypesArray			: Ember.computed.alias(\"controllers.data.moduleTypesArray\"),\n    	importProgress				: Ember.computed.alias(\"controllers.refsets/upload.importProgress\"),\n    	isRF2Import					: Ember.computed.alias(\"controllers.refsets/upload.isRF2Import\"),\n\n    	dialogInstance 				: null,\n    	\n    	rf2FileToImport				: Ember.computed.alias(\"controllers.refsets/upload.rf2FileToImport\"),\n    	moreThanOneRefsetInRF2		: Ember.computed.alias(\"controllers.refsets/upload.moreThanOneRefsetInRF2\"),\n    	\n    	filterByInactiveConcepts	: -1,\n    	filterByDescription			: \'\',\n    	\n    	filterByInactiveConceptsIsActive	: function(){ return this.filterByInactiveConcepts !== -1;}.property(\'filterByInactiveConcepts\'),\n    	\n    	sortBy 								: \'description\',\n    	sortOrder							: \'asc\',\n\n    	filteringActive						: function()\n    	{ \n    		if (this.get(\"filterByDescription\") !== \"\") { return true; }\n    		if (this.get(\"filterByInactiveConceptsIsActive\")) { return true; }\n    		\n    	}.property(\'potentialMembersToImport.@each\',\'sortBy\',\'sortOrder\',\'filterByInactiveConcepts\',\'filterByDescription\'),\n\n    	filteredImportMembers				: function()\n    	{\n    		var allMembers = this.get(\'potentialMembersToImport\');\n    		\n    		return this.filterMembers(allMembers);\n    		\n    	}.property(\'potentialMembersToImport.@each\',\'sortBy\',\'sortOrder\',\'filterByInactiveConcepts\',\'filterByDescription\'),\n\n    	clearAllFilters : function()\n    	{\n    		this.set(\"filterByInactiveConcepts\",-1);\n    		this.set(\"filterByDescription\",\"\");\n    	},\n    	\n    	filterMembers : function(allMembers)\n    	{\n    		if (typeof allMembers !== \"undefined\")\n    		{\n    			var filterByInactiveConcepts 	= this.get(\"filterByInactiveConcepts\");\n    			var filterByDescription 		= this.get(\"filterByDescription\");\n    			\n    			var filteredMembers = allMembers.map(function(member)\n    			{\n    				if (typeof member !== \"undefined\")\n    				{\n    					var score;\n    					\n    					if (filterByDescription !== \'\')\n    					{\n    						if (filterByDescription.match(/^[0-9]*$/))\n    						{\n    							var regExp = new RegExp(filterByDescription,\"g\");\n    							score = member.referencedComponentId.search(regExp);\n    							\n    							if (score === -1)\n    							{\n    								return null;\n    							}\n    							else\n    							{\n    								member.meta.score = 100 - score;\n    							}\n    						}\n    						else\n    						{\n    							score = LiquidMetal.score(member.description, filterByDescription);\n\n    							if (score < 0.75)\n    							{\n    								return null;								\n    							}\n    							else\n    							{\n    								member.meta.score = score;\n    							}\n    						}\n    					}\n    					\n    					return member;	\n    				}\n     \n    			});\n\n    			var nullsRemoved = $.grep(filteredMembers,function(n){ return(n); });			\n    			var sortBy 		= this.get(\"sortBy\");\n    			var sortOrder 	= this.get(\"sortOrder\");\n    			\n    			if (filterByDescription !== \'\' && sortOrder === \"score\" && (sortBy === \"description\" || sortBy === \"referencedComponentId\"))\n    			{\n    				quick_sort(nullsRemoved);\n    			}\n    			else\n    			{\n    				nullsRemoved = mergesort(nullsRemoved,sortBy,sortOrder);\n    			}\n    			\n    			return nullsRemoved;\n    		}	\n    	},\n    	\n    	createEmptyRefset : function()\n    	{\n    		var model = RefsetModel.create();\n    		\n    		\n    		Ember.Logger.log(\"xxxxxxxxxxxxxxxxxxxxxxxxxx createEmptyRefset\",model);\n\n    		model.meta.expectedReleaseDateInput = null;\n    		this.set(\"model\",model);\n    		\n    		this.clearAllFilters();\n    		\n    		var uploadController = this.get(\'controllers.refsets/upload\');		\n    		uploadController.clearMemberList();\n\n    		var dataController = this.get(\'controllers.data\');		\n    		dataController.clearRefset();\n    	\n    		Ember.run.scheduleOnce(\'afterRender\', this, function(){\n    			document.getElementById(\'refsetUploadFileInput\').addEventListener(\'change\', readSingleFile, false);\n    			document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragover\', handleDragOver, false);\n    			document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragenter\', handleDragEnter, false);\n    			document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragleave\', handleDragLeave, false);\n    			document.getElementById(\'fileUploadDropZone\').addEventListener(\'drop\', readSingleFile, false);\n    		});\n    	},\n    	\n    	create : function()\n    	{\n    		Ember.Logger.log(\"controllers.refsets.new:create\");\n    		\n    		var parselyForm = $(\'#refset-header\').parsley(\n    		{validators:\n    			{\n    				descriptioninuse: \n    				{\n    					fn: function (value) \n    					{\n    						console.log(\"+++++++++++++++++++++++ ParsleyConfig\",value);  	\n    						return false;\n    					},\n    					priority: 32\n    				}\n    			}\n    		});\n\n    		if (parselyForm.validate())\n    		{\n    			var isRF2Import = this.get(\"isRF2Import\");		\n    			if (isRF2Import)\n    			{\n    				var rf2 = this.get(\"rf2FileToImport\");\n    				this.set(\"model.sctId\",rf2.sctId);\n    				this.set(\"model.description\",rf2.label);\n    			}\n    	\n    			var Refset = {};\n    			\n    			Refset.typeId 				= this.get(\"model.typeId\");\n    			Refset.componentTypeId 		= this.get(\"model.componentTypeId\");\n    			Refset.moduleId 			= this.get(\"model.moduleId\");\n    			Refset.active 				= true; // Always make new refsets active\n    			Refset.languageCode 		= this.get(\"model.languageCode\");\n    			Refset.description 			= this.get(\"model.description\");\n    			Refset.published 			= false;\n    			\n    			var releaseDate 			= this.get(\"model.meta.expectedReleaseDateInput\");\n    			Refset.expectedReleaseDate 	= releaseDate;\n    	\n    			if (isRF2Import)\n    			{\n    				Refset.sctId 			= this.get(\"model.sctId\");\n    				Refset.published 		= this.get(\"model.published\");\n    			}\n    			\n    			Ember.Logger.log(\"creat----------------\",this.get(\"model\"),Refset)\n    			\n    			\n    			// Need to validate the form at this point and abort if required fields are not completed\n    					\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Creating your Refsetence Set\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">We are creating your Reference Set Header. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            buttons: [{\n    	                label: \'OK\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    			this.dialogInstance.getModalFooter().hide();\n    	\n    			var dataController = this.get(\'controllers.data\');		\n    			dataController.createRefset(Refset,this,\'createRefsetComplete\');\n    		}\n\n    	},\n\n        actions :\n        {\n        	createRefsetComplete : function(response)\n        	{\n        		Ember.Logger.log(\"controller.refsets.new:actions:createRefsetComplete\",response);\n\n        		if (response.error)\n        		{\n        			var message = \'<table class=\"centre\"><tr><td><img src=\"assets/img/warning.jpg\"></td><td style=\"vertical-align:middle\"><h2>Refset creation failed.</h2></td></tr></table>\';\n\n        			if (typeof response.unauthorised !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">You are not authorised to create refsets. You may need to sign in.</p>\';\n        			}\n\n        			if (typeof response.commsError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">We cannot communicate with the Refset API at this time. Retry later.</p>\';\n        			}\n\n        			this.dialogInstance.setMessage(message);\n        			this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n        			this.dialogInstance.getModalFooter().show();\n        		}\n        		else\n        		{\n        			var refsetId = response.uuid;\n\n        			this.transitionToRoute(\'refsets.refset\',refsetId);\n        			\n        			var conceptsToImport;\n        			var isRF2Import 		= this.get(\"isRF2Import\");\n        			var dataController 		= this.get(\'controllers.data\');	\n        			var uploadController 	= this.get(\'controllers.refsets/upload\');	\n\n        			if (isRF2Import) // Importing an RF2 file\n        			{\n        				conceptsToImport = uploadController.get(\"rf2file\");\n        			}\n        			else\n            		{\n        				conceptsToImport = uploadController.getMembersMarkedForImport();\n            		}	\n\n        			if (conceptsToImport.length)\n        			{\n        				if (isRF2Import) // Importing an RF2 file\n        				{\n                			this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">Your Reference Set Header has been created.<br><br><div class=\"centre\">We are now importing members from your RF2 file. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\');\n        					\n                			// Now initiate sending RF2 file to the API.\n                			dataController.importRF2(refsetId,conceptsToImport,this,\'importRF2Complete\');	\n        				}\n        				else // Flat file of concepts IDs to import\n        				{\n                			this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">Your Reference Set Header has been created.<br><br><div class=\"centre\">We are now importing members. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\');\n                    		\n                			// Now initiate adding members to our new refset...\n                			dataController.addMembers(refsetId,conceptsToImport,this,\'addMembersComplete\');	\n        				}\n        			}\n        			else\n        			{\n            			this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">Refset created.<br><br>\');\n        				this.dialogInstance.getModalFooter().show();\n        			}\n        		}\n        	},\n\n        	importRF2Complete : function()\n        	{\n    			this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">Your Reference Set Header has been created.<br><br><div class=\"centre\">RF2 file imported.<br><br>\');\n    			this.dialogInstance.getModalFooter().show();\n        	},\n        	\n        	addMembersComplete : function(response)\n        	{\n        		Ember.Logger.log(\"controller.refsets.new:actions:addMembersComplete\",response);\n    	\n        		if (response.error)\n        		{\n        			var message = \'<table class=\"centre\"><tr><td><img src=\"assets/img/warning.jpg\"></td><td style=\"vertical-align:middle\"><h2>Importing members failed.</h2></td></tr></table>\';\n\n        			if (typeof response.unauthorised !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">You are not authorised to add members. You may need to log in.</p>\';\n        			}\n\n        			if (typeof response.commsError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">We cannot communicate with the Refset API at this time. Retry later.</p>\';\n        			}\n\n        			if (typeof response.requestError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">The API rejected our request.</p>\';\n        			}\n\n        			this.dialogInstance.setMessage(message);\n        			this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n        			this.dialogInstance.getModalFooter().show();\n        		}\n        		else\n    			{\n        			this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">Your Reference Set Header has been created.<br><br><div class=\"centre\">Members imported.<br><br>\');\n        			this.dialogInstance.getModalFooter().show();\n    			}\n        	},\n        	\n        	togglePublishedRefsetImportForm : function()\n        	{\n        		Ember.Logger.log(\"togglePublishedRefsetImportForm\",this.doImportPublishedRefset);\n        		this.set(\"doImportPublishedRefset\",$(\'#import\').is(\':checked\'));\n        	},\n\n    		toggleMembersImportForm : function()\n    		{\n    			Ember.Logger.log(\"togglePublishedRefsetImportForm\",this.doImportPublishedRefset);\n    			this.set(\"doImportMembers\",$(\'#import-members\').is(\':checked\'));\n\n    			if (this.doImportMembers)\n    			{\n    				Ember.run.next(this,function()\n    				{\n    					Ember.Logger.log(\"controllers.refsets.new:actions:toggleMembersImportForm (Setting event listeners)\");\n    					\n    					document.getElementById(\'refsetUploadFileInput\').addEventListener(\'change\', readSingleFile, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragover\', handleDragOver, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'drop\', readSingleFile, false);\n    				});\n    			}\n    			else\n    			{\n    				Ember.Logger.log(\"controllers.refsets.new:actions:toggleMembersImportForm (Clearing members)\");\n\n    				var uploadController = this.get(\'controllers.refsets/upload\');\n    				uploadController.clearMemberList();\n    			}\n    		},\n    		\n    		clearForm : function()\n    		{\n    			this.createEmptyRefset();\n    			this.set(\"isRF2Import\",false);\n    			this.set(\"rf2FileToImport.sctId\",\"0\");\n    			this.set(\"rf2FileToImport.label\",\"loading...\");\n    		},\n    		\n    		clearImportList : function()\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');		\n    			uploadController.clearMemberList();	\n    		},\n    		\n    		showImportHelp : function()\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.showImportHelp();		\n    		},\n\n    		toggleImportMember : function(referencedComponentId)\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.toggleImportMember(referencedComponentId);	\n    		},\n\n    		toggleImportMemberActive : function(referencedComponentId)\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.toggleImportMemberActive(referencedComponentId);	\n    		},\n    		\n    		saveMemberModuleId : function(memberWrapper)\n    		{\n    			var member = memberWrapper.content;\n    			var newModuleId = $(\'#member-module-id-\' + member.referencedComponentId).val();\n    			member.moduleId = newModuleId;\n    		}\n        }\n    });\n  });//# sourceURL=refset/controllers/refsets/new.js");

;eval("define(\"refset/models/refset\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n    	id:	null,\n    	active 			: true,\n    	componentTypeId : RefsetENV.APP.defaultSnomedTypes.componentType,\n    	description		: null,\n    	languageCode 	: \'en_US\',\n    	members 		: [],\n    	moduleId		: RefsetENV.APP.defaultSnomedTypes.moduleType,\n    	published 		: true,\n    	expectedReleaseDate 	: function()\n    						{\n    							var mydate = moment.utc(this.get(\"meta.publishedDateInput\"),\'YYYYMMDD\');\n    							return mydate.isValid() ? mydate.format() : null;\n    						}.property(\'meta.expectedReleaseDateInput\'),\n    	typeId 			: RefsetENV.APP.defaultSnomedTypes.refsetType,\n    	meta			:\n    	{\n    		expectedReleaseDateInput : null,\n    	}\n    });\n  });//# sourceURL=refset/models/refset.js");

;eval("define(\"refset/controllers/refsets/refset\", \n  [\"refset/adapters/refsets\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var RefsetsAdapter = __dependency1__[\"default\"];\n    var refsetsAdapter = RefsetsAdapter.create();\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    		\n    	needs : [\"login\",\"data\",\"application\",\"refsets/upload\"],\n    	\n    	user						: Ember.computed.alias(\"controllers.login.user\"),\n    	\n    	model 						: Ember.computed.alias(\"controllers.data.refset\"),\n    	refsetTypes 				: Ember.computed.alias(\"controllers.data.refsetTypes\"),\n    	componentTypes 				: Ember.computed.alias(\"controllers.data.componentTypes\"),\n    	moduleTypes 				: Ember.computed.alias(\"controllers.data.moduleTypes\"),\n    	languageTypes 				: Ember.computed.alias(\"controllers.data.languageTypes\"),\n    	moduleTypesArray			: Ember.computed.alias(\"controllers.data.moduleTypesArray\"),\n    	moduleUpdatersArray			: Ember.computed.alias(\"controllers.data.moduleUpdatersArray\"),\n    	effectiveTimeArray			: Ember.computed.alias(\"controllers.data.effectiveTimeArray\"),\n    	\n    	potentialMembersToImport	: Ember.computed.alias(\"controllers.refsets/upload.model\"),\n    	getConceptDataInProgress 	: Ember.computed.alias(\"controllers.refsets/upload.getConceptDataInProgress\"),\n    	importError 				: Ember.computed.alias(\"controllers.refsets/upload.importError\"),\n    	importProgress				: Ember.computed.alias(\"controllers.refsets/upload.importProgress\"),\n    	\n    	editModel					: {},	\n    	membersToDelete 			: [],\n    	membersToAdd				: [],\n    	\n    	editMode					: false,\n    	showMetaData				: false,\n    		\n    	importListChangedInProgress	: false,\n\n    	dialogInstance				: null,\n    	\n    	filterByStatus 				: -1,\n    	filterByModuleId 			: -1,\n    	filterByEffectiveTime		: -1,\n    	filterByLastUpdateDate		: -1,\n    	filterByLastUpdateUser		: -1,\n    	filterByInactiveConcepts	: -1,\n    	filterByPublishedMembers	: -1,\n    	filterByDescription			: \'\',\n    	\n    	filterByStatusIsActive				: function(){ return this.filterByStatus !== -1;}.property(\'filterByStatus\'),\n    	filterByModuleIdIsActive			: function(){ return this.filterByModuleId !== -1;}.property(\'filterByModuleId\'),\n    	filterByEffectiveTimeIsActive		: function(){ return this.filterByEffectiveTime !== -1;}.property(\'filterByEffectiveTime\'),\n    	filterByLastUpdateDateIsActive		: function(){ return this.filterByLastUpdateDate !== -1;}.property(\'filterByLastUpdateDate\'),\n    	filterByLastUpdateUserIsActive		: function(){ return this.filterByLastUpdateUser !== -1;}.property(\'filterByLastUpdateUser\'),\n    	filterByInactiveConceptsIsActive	: function(){ return this.filterByInactiveConcepts !== -1;}.property(\'filterByInactiveConcepts\'),\n    	filterByPublishedMembersIsActive	: function(){ return this.filterByPublishedMembers !== -1;}.property(\'filterByPublishedMembers\'),\n    	\n    	sortBy 								: \'description\',\n    	sortOrder							: \'asc\',\n\n    	filteringActive						: function()\n    	{ \n    		if (this.get(\"filterByStatusIsActive\")) { return true; }\n    		if (this.get(\"filterByModuleIdIsActive\")) { return true; }\n    		if (this.get(\"filterByEffectiveTimeIsActive\")) { return true; }\n    		if (this.get(\"filterByLastUpdateDateIsActive\")) { return true; }\n    		if (this.get(\"filterByLastUpdateUserIsActive\")) { return true; }\n    		if (this.get(\"filterByInactiveConceptsIsActive\")) { return true; }\n    		if (this.get(\"filterByPublishedMembersIsActive\")) { return true; }\n    		\n    	}.property(\'model.members.@each\',\'sortBy\',\'sortOrder\',\'filterByPublishedMembers\',\'filterByDescription\',\'filterByStatus\',\'filterByModuleId\',\'filterByEffectiveTime\',\'filterByDescription\',\'filterByInactiveConcepts\',\'filterByLastUpdateDate\',\'filterByLastUpdateUser\'),\n\n    	filteredMembers						: function()\n    	{\n    		var allMembers = this.get(\'model.members\');\n    		\n    		return this.filterMembers(allMembers);\n    		\n    	}.property(\'model.members.@each\', \'sortBy\',\'sortOrder\',\'filterByStatus\',\'filterByModuleId\',\'filterByEffectiveTime\',\'filterByDescription\',\'filterByInactiveConcepts\',\'filterByLastUpdateDate\',\'filterByLastUpdateUser\',\'filterByPublishedMembers\'),\n\n    	filteredImportMembers				: function()\n    	{\n    		var allMembers = this.get(\'potentialMembersToImport\');\n    		\n    		return this.filterMembers(allMembers);\n    		\n    	}.property(\'potentialMembersToImport.@each\', \'sortBy\',\'sortOrder\',\'filterByStatus\',\'filterByModuleId\',\'filterByEffectiveTime\',\'filterByDescription\',\'filterByInactiveConcepts\',\'filterByLastUpdateDate\',\'filterByLastUpdateUser\',\'filterByPublishedMembers\'),\n\n    	\n    	clearAllFilters : function()\n    	{\n    		this.set(\"filterByStatus\",-1);\n    		this.set(\"filterByModuleId\",-1);\n    		this.set(\"filterByEffectiveTime\",-1);\n    		this.set(\"filterByLastUpdateDate\",-1);\n    		this.set(\"filterByLastUpdateUser\",-1);\n    		this.set(\"filterByInactiveConcepts\",-1);\n    		this.set(\"filterByPublishedMembers\",-1);\n    		this.set(\"filterByDescription\",\"\");		\n    	},\n    	\n    	filterMembers : function(allMembers)\n    	{\n    		if (typeof allMembers !== \"undefined\")\n    		{\n    			var filterByStatus 				= this.get(\"filterByStatus\");\n    			var filterByModuleId 			= this.get(\"filterByModuleId\");\n    			var filterByEffectiveTime 		= this.get(\"filterByEffectiveTime\");\n    			var filterByDescription 		= this.get(\"filterByDescription\");\n    			var filterByLastUpdateDate 		= this.get(\"filterByLastUpdateDate\");\n    			var filterByLastUpdateUser 		= this.get(\"filterByLastUpdateUser\");\n    			var filterByPublishedMembers 	= this.get(\"filterByPublishedMembers\");\n    			\n    			var filteredMembers = allMembers.map(function(member)\n    			{\n    				if (typeof member !== \"undefined\")\n    				{\n    					if (filterByStatus !== -1)\n    					{\n    						if (member.active !== filterByStatus)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					if (filterByModuleId !== -1)\n    					{\n    						if (member.moduleId !== filterByModuleId)\n    						{\n    							return null;\n    						}\n    					}\n\n    					if (filterByEffectiveTime !== -1)\n    					{\n    						if (member.latestEffectiveTime !== filterByEffectiveTime)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					if (filterByLastUpdateDate !== -1)\n    					{\n    						var comparisonDate = new Date(filterByLastUpdateDate);\n    						\n    						if (comparisonDate instanceof Date && !isNaN(comparisonDate.valueOf()))\n    						{\n    							if (new Date(member.modifiedDate).getTime() < comparisonDate.getTime())\n    							{\n    								return null;\n    							}\n    						}\n    					}\n    					\n    					if(filterByPublishedMembers !== -1)\n    					{\n    						if (filterByPublishedMembers)\n    						{ \n    							if (typeof member.effectiveTime === \"undefined\") //Not published\n    							{\n    								return null;\n    							}\n    							\n    							if (!moment(member.effectiveTime).isSame(member.modifiedDate))\n    							{\n    								return null;\n    							}\n    						}\n    						else\n    						{\n    							if (typeof member.effectiveTime !== \"undefined\")\n    							{\n    								if (moment(member.effectiveTime).isSame(member.modifiedDate)) \n    								{\n    									return null;\n    								}\n    							}							\n    						}\n    					}\n    					\n    					if (filterByLastUpdateUser !== -1)\n    					{\n    						if (member.modifiedBy !== filterByLastUpdateUser)\n    						{\n    							return null;\n    						}\n    					}\n    					\n    					var score;\n    					\n    					if (filterByDescription !== \'\')\n    					{\n    						if (filterByDescription.match(/^[0-9]*$/))\n    						{\n    							var regExp = new RegExp(filterByDescription,\"g\");\n    							score = member.referencedComponentId.search(regExp);\n    							\n    							if (score === -1)\n    							{\n    								return null;\n    							}\n    							else\n    							{\n    								member.meta.score = 100 - score;\n    							}\n    						}\n    						else\n    						{\n    							score = LiquidMetal.score(member.description, filterByDescription);\n\n    							if (score < 0.75)\n    							{\n    								return null;								\n    							}\n    							else\n    							{\n    								member.meta.score = score;\n    							}\n    						}\n    					}\n    					\n    					return member;	\n    				}\n     \n    			});\n\n    			var nullsRemoved = $.grep(filteredMembers,function(n){ return(n); });			\n    			var sortBy 		= this.get(\"sortBy\");\n    			var sortOrder 	= this.get(\"sortOrder\");\n    			\n    			if (filterByDescription !== \'\' && sortOrder === \"score\" && (sortBy === \"description\" || sortBy === \"referencedComponentId\"))\n    			{\n    				quick_sort(nullsRemoved);\n    			}\n    			else\n    			{\n    				nullsRemoved = mergesort(nullsRemoved,sortBy,sortOrder);\n    			}\n    			\n    			return nullsRemoved;\n    		}	\n    	},\n    	\n    	memberRowHeight  			: function()\n    	{\n    		if (this.editMode)\n    		{\n    			return this.showMetaData ? 81 : 56;			\n    		}\n    		else\n    		{\n    			return this.showMetaData ? 70 : 45;\n    		}\n    	}.property(\"showMetaData\",\"editMode\"),\n\n    	initModel : function(params)\n    	{\n    		Ember.Logger.log(\"controllers.refsets.refset:initModel\");\n    		\n    		this.set(\"editMode\",false);\n    		this.set(\"filterByDescription\",\"\");\n    		this.set(\"showMetaData\",false);\n    		\n    		this.clearAllFilters();\n    		\n    		var _this 			= this;\n    		var uuid 				= params.params[\"refsets.refset\"].uuid;\n\n    		Ember.Logger.log(\"controllers.refsets.refset:initModel (uuid)\",uuid);\n    				\n    		var dataController 	= this.get(\'controllers.data\');\n\n    		// Run next so that we do not prevent the UI being displayed if the data is delayed...\n    		Ember.run.next(function()\n    		{\n    			dataController.getRefset(uuid,_this,\'getRefsetComplete\');\n    		});\n    	\n    		var uploadController = this.get(\'controllers.refsets/upload\');		\n    		uploadController.clearMemberList();\n    	},\n\n    	importListChanged: function()\n    	{\n    		if (this.importListChangedInProgress) {return;}\n    		\n    		this.importListChangedInProgress = true;\n    		\n    		Ember.Logger.log(\"controllers.refsets.refset:importListChanged\");\n    		\n    		// Need  to check if we have any duplicates...\n    		var duplicates = [];\n    		\n    		var existingMembersArray = this.get(\"model\").members;\n    		var potentialMembersToImport = this.get(\"potentialMembersToImport\");\n    		\n    		if (typeof existingMembersArray !== \"undefined\")\n    		{\n    			for (var m=0;m<existingMembersArray.length;m++)\n    			{\n    				var existingMember = existingMembersArray[m];\n    				\n    				for (var i=0;i<potentialMembersToImport.length;i++)\n    				{\n    					var importMember = potentialMembersToImport[i];\n    					\n    					if (existingMember.referencedComponentId === importMember.referencedComponentId)\n    					{\n    						duplicates.push(importMember.meta.description);\n    						potentialMembersToImport[i] = null;\n    					}\n    				}\n    			}\n    			\n    			potentialMembersToImport = $.grep(potentialMembersToImport,function(n){ return(n); });\n\n    			var uploadController = this.get(\'controllers.refsets/upload\');\n    			uploadController.overrideImportList(potentialMembersToImport);\n    			\n    			if (duplicates.length)\n    			{\n    				var message = \'Your import file contains \' + duplicates.length + \' concepts which are already included in this refset. These will be excluded from the import.<br><br>\';\n    				\n    				for (var d=0;d<duplicates.length;d++)\n    				{\n    					message += duplicates[d] + \'<br>\';\n    				}\n    				\n    				this.dialogInstance = BootstrapDialog.show({\n    		            title: \'Import members\',\n    		            closable: false,\n    		            type : BootstrapDialog.TYPE_WARNING,\n    		            message: message,\n    		            buttons: [\n    	                {\n    		                label: \'OK\',\n    		                cssClass: \'btn-primary\',\n    		                action: function(dialogRef){\n    		            		dialogRef.close();\n    		                }\n    		            }]\n    		        });	\n    			}\n    			\n    			$(\"#importMemberList\").collapse(\'show\');\n    		}\n\n    		this.importListChangedInProgress = false;\n\n    	}.observes(\'potentialMembersToImport.@each\'),\n    	\n    	getDefaultModuleId : function()\n    	{\n    		var members = this.get(\"model.members\");\n    		return members[0].moduleId;\n    	},\n    	\n    	getDefaultLastUpdater : function()\n    	{\n    		var members = this.get(\"model.members\");\n    		return members[0].modifiedBy;\n    	},\n    	\n    	getDefaultEffectiveTime : function()\n    	{\n    		var times = this.get(\"effectiveTimeArray\");\n    		return times[0].id;\n    	},\n\n    	actions :\n    	{\n    		setSortCriteria : function(sortBy)\n    		{\n    			var oldSortBy 			= this.get(\"sortBy\");\n    			var oldSortOrder 		= this.get(\"sortOrder\");\n    			var filterByDescription	= this.get(\"filterByDescription\");\n\n    			var sortOrder = \"asc\";\n\n    			if (oldSortBy === sortBy)\n    			{\n    				switch (oldSortOrder)\n    				{\n    					case \"asc\":\n    					{\n    						sortOrder = \"desc\";\n    						break;\n    					}\n\n    					case \"desc\":\n    					{						\n    						if (sortBy === \"description\" && filterByDescription !== \"\")\n    						{\n    							sortOrder = \"score\";\n    						}\n    						break;\n    					}	\n    				}\n    			}\n    			else\n    			{\n    				if (sortBy === \"description\" && filterByDescription !== \"\")\n    				{\n    					sortOrder = \"score\";\n    				}\n    			}\n    			\n    			this.set(\"sortBy\",sortBy);\n    			this.set(\"sortOrder\",sortOrder);\n    		},\n    		\n    		toggleEditMode : function()\n    		{\n    			this.set(\"editMode\",!this.editMode);\n    			\n    			if (this.editMode)\n    			{\n    				this.set(\"editModel\",$.extend(true, {}, this.get(\"model\")));\n    				\n    				Ember.run.scheduleOnce(\'afterRender\', this, function(){\n    					document.getElementById(\'refsetUploadFileInput\').addEventListener(\'change\', readSingleFile, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragover\', handleDragOver, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragenter\', handleDragEnter, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'dragleave\', handleDragLeave, false);\n    					document.getElementById(\'fileUploadDropZone\').addEventListener(\'drop\', readSingleFile, false);				\n    				});\n    			}\n    		},\n\n    		toggleMetaData : function()\n    		{\n    			this.set(\"showMetaData\",!this.showMetaData);\n    		},\n    		\n    		cancelEdits : function()\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');		\n    			uploadController.clearMemberList();	\n    			this.set(\"editMode\",false);\n    			this.set(\"model\",$.extend(true, {}, this.get(\"editModel\")));	\n    		},\n    		\n    		toggleDeleteMember : function(memberId)\n    		{\n    			Ember.Logger.log(\"toggleDeleteMember\",memberId);\n    			\n    			var refset = $.extend(true, {}, this.get(\"model\"));\n    			\n    			for (var m=0;m<refset.members.length;m++)\n    			{\n    				if (refset.members[m].uuid === memberId)\n    				{\n    					refset.members[m].meta.deleteConcept = !refset.members[m].meta.deleteConcept;\n    					this.set(\"model\",refset);\n    					break;\n    				}\n    			}\n    		},\n\n    		showImportHelp : function()\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.showImportHelp();	\n    		},\n    		\n    		toggleMemberActive : function(memberId)\n    		{\n    			Ember.Logger.log(\"toggleMemberActive\",memberId);\n\n    			var refset = $.extend(true, {}, this.get(\"model\"));\n    			\n    			for (var m=0;m<refset.members.length;m++)\n    			{\n    				if (refset.members[m].uuid === memberId)\n    				{\n    					refset.members[m].active = !refset.members[m].active;\n    					this.set(\"model\",refset);\n    					break;\n    				}\n    			}\n    		},\n    		\n    		toggleImportMember : function(referencedComponentId)\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.toggleImportMember(referencedComponentId);	\n    		},\n\n    		toggleImportMemberActive : function(referencedComponentId)\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');	\n    			uploadController.toggleImportMemberActive(referencedComponentId);	\n    		},\n    		\n    		getRefsetComplete : function (response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:getRefsetComplete\",response);\n    			\n    			if (response.error)\n    			{\n    				// Model will then contain attributes that will modify the display...\n    				this.set(\"model\",response);\n    			}\n    		},\n\n    		updateRefset : function()\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:updateRefset (Refset)\",Refset);\n\n    			var _this = this;\n    			var refset = this.get(\"model\");\n    			\n    			// Members we are going to update\n    			\n    			var membersToUpdate = refset.members.map(function(obj)\n    			{\n    				var member = $.extend(true, {}, obj);\n    				\n    				if (member.meta.deleteConcept) {return null;}\n    				\n    				if (member.active === member.meta.originalActive && member.moduleId === member.meta.originalModuleId) {return null;}\n    				\n    				Ember.Logger.log(member.active,member.meta.originalActive,member.moduleId,member.meta.originalModuleId);	\n    				\n    				delete member[\"meta\"];\n    				\n    				return member;\n    			});\n    			membersToUpdate = $.grep(membersToUpdate,function(n){ return(n); });\n    	\n    			// members we are going to import\n    						\n    			var uploadController = this.get(\'controllers.refsets/upload\');		\n    			var conceptsToImport = uploadController.getMembersMarkedForImport();\n    			\n    			this.set(\"membersToAdd\",conceptsToImport);	\n    			\n    			// Members we are going to delete\n    			\n    			var membersToDelete = refset.members.map(function(obj)\n    			{\n    				var member = $.extend(true, {}, obj);\n    				\n    				if (!member.meta.deleteConcept) {return null;}\n    				\n    				delete member[\"meta\"];\n    				\n    				return member;\n    			});\n    			this.set(\"membersToDelete\",$.grep(membersToDelete,function(n){ return(n);}));\n    						\n    			var message = \'<div class=\"centre\">Are you sure you wish to save your changes to this refset?</div><br><div class=\"centre\">\' + refset.description + \'<br><br>\';\n    				\n    			if (membersToUpdate.length || this.membersToAdd.length || this.membersToDelete.length)\n    			{\n    				message += \'<div class=\"centre\">You are \';				\n    			}\n    			\n    			if (membersToUpdate.length)\n    			{\n    				message += \'Updating \' + membersToUpdate.length + \' members\';\n    				\n    				if (this.membersToAdd.length || this.membersToDelete.length)\n    				{\n    					message += \', \';\n    				}\n    			}\n    			\n    			if (this.membersToAdd.length)\n    			{\n    				message += \'Adding \' + this.membersToAdd.length + \' members\';\n    				\n    				if (this.membersToDelete.length)\n    				{\n    					message += \', \';\n    				}\n    			}\n    			\n    			if (this.membersToDelete.length)\n    			{\n    				message += \'Deleting \' + this.membersToDelete.length + \' members\';	\n    			}\n\n    			\n    			if (membersToUpdate.length || this.membersToDelete.length || this.membersToAdd.length)\n    			{\n    				message += \'</div>\';\n    			}\n    			\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Update refset\',\n    	            closable: false,\n    	            message: message,\n    	            buttons: [{\n    	                label: \'No. Do not update\',\n    	                cssClass: \'btn-default left\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            },\n                    {\n    	                label: \'Yes. Update refset\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    _this.send(\"doUpdateRefset\",membersToUpdate);\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });			\n    		},\n    		\n    		doUpdateRefset : function(membersToUpdate)\n    		{\n    			var dataController = this.get(\'controllers.data\');\n    			var Refset = $.extend(true, {}, dataController.refset);\n    			\n    			// API barfs if we send it anything other than what it expects. So we keep extra data in meta so we can delete it easily...\n    			delete Refset[\"meta\"];\n\n    			Refset.members = membersToUpdate;\n    			\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:doUpdateRefset (Refset,membersToUpdate)\",Refset,membersToUpdate);\n    						\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Updating your refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">Updating. Please wait...<br><br><!-----><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            buttons: [{\n    	                label: \'OK\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    			\n    			this.dialogInstance.getModalFooter().hide();\n    			\n    			dataController.updateRefset(Refset,this,\'updateRefsetComplete\');\n    		},	\n    		\n    		updateRefsetComplete : function(response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:updateRefsetComplete\",response);\n    			\n        		if (response.error)\n        		{\n        			var message = \'<table class=\"centre\"><tr><td><img src=\"assets/img/warning.jpg\"></td><td style=\"vertical-align:middle\"><h2>Refset update failed.</h2></td></tr></table>\';\n\n        			if (typeof response.unauthorised !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">You are not authorised to update this refset. You may need to log in.</p>\';\n        			}\n\n        			if (typeof response.commsError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">We cannot communicate with the Refset API at this time. Retry later.</p>\';\n        			}\n\n        			this.dialogInstance.setMessage(message);\n        			this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n        			this.dialogInstance.getModalFooter().show();\n        		}\n        		else\n        		{\n    				var dataController = this.get(\'controllers.data\');\n\n    				// Now Add / Delete any necessary members...\n    				if (this.membersToAdd.length)\n        			{\n        				// Need to add some members...\n\n    					var oldAddMessage = this.dialogInstance.getMessage();\n        				var newAddMessage = oldAddMessage.replace(/<!----->/,\'<div class=\"centre\">Adding new members</div><br><br><!----->\');\n        				\n        				this.dialogInstance.setMessage(newAddMessage);\n\n        				dataController.addMembers(this.get(\"model\").uuid,this.membersToAdd,this,\'addMembersComplete\');\n        			}\n        			else\n        			{\n            			if (this.membersToDelete.length)\n        				{\n            				// Need to delete some members...\n            				\n            				var oldDelMessage = this.dialogInstance.getMessage();\n            				var newDelMessage = oldDelMessage.replace(/<!----->/,\'<div class=\"centre\">Deleting unwanted members</div><br><br><!----->\');\n            				\n            				this.dialogInstance.setMessage(newDelMessage);\n            				\n            				dataController.deleteMembers(this.get(\"model\").uuid,this.membersToDelete,this,\'deleteMembersComplete\');\n        				}\n        				else\n        				{\n        					// Nothing do do...\n        					this.set(\"editMode\",false);\n        	    			this.dialogInstance.close();\n        				}\n        			}\n        		}	\n    		},\n\n    		addMembersComplete : function(response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:addMembersComplete\",response);\n\n    			var uploadController = this.get(\'controllers.refsets/upload\');		\n    			uploadController.clearMemberList();\n    			\n    			if (this.membersToDelete.length)\n    			{\n    				// Need to delete some members...\n    				\n    				var oldMessage = this.dialogInstance.getMessage();\n    				var newMessage = oldMessage.replace(/<!----->/,\'<div class=\"centre\">Deleting unwanted members</div><br><br><!----->\');\n    				\n    				this.dialogInstance.setMessage(newMessage);\n    				\n    				var dataController = this.get(\'controllers.data\');\n    				dataController.deleteMembers(this.get(\"model\").uuid,this.membersToDelete,this,\'deleteMembersComplete\');\n    			}\n    			else\n    			{\n    				// Nothing do do...\n    				this.set(\"editMode\",false);\n        			this.dialogInstance.close();\n    			}\n    		},\n\n    		\n    		deleteMembersComplete : function(response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:deleteMembersComplete\",response);\n\n    			// Nothing do do...\n    			this.set(\"editMode\",false);\n    			this.dialogInstance.close();\n    		},\n\n    		exportRefset : function()\n    		{\n    			var refset = this.get(\"model\");\n    			var id = refset.uuid;\n    			\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:exportRefset (id)\",id);\n    			\n    			var loginController = this.get(\'controllers.login\');\n    			var user = loginController.user;\n    			var _this = this;\n    			\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Export refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">We are preparing your refset export file. Please wait...</div><br><br><div class=\"centre\"><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            type: \'BootstrapDialog.\',\n    	            buttons: [{\n    	                label: \'Give up\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef)\n    	                {\n    	                    dialogRef.close();\n    	                }\n    	            },{\n    	                label: \'Retry\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef)\n    	                {\n    	                	_this.send(\"exportRefset\");\n    	                    dialogRef.close();\n    	                }\n    		         }]\n    	        });\n\n    			this.dialogInstance.getModalFooter().hide();\n\n    			refsetsAdapter.getRefsetExport(user, id).then(function(response)\n    			{\n    				try\n    				{\n    					var exportFile = response.response;\n    					var contentDisposition = response.jqXHR.getResponseHeader(\'Content-Disposition\');\n    					\n    					\n    					var filename = contentDisposition.split(\'\"\')[1];\n\n    					var RF2 = new Blob([exportFile], {type: \"text/plain;charset=utf-8\"});\n\n    					_this.dialogInstance.close();\n\n    					saveAs(RF2, filename);\n    				}\n    				catch(e)\n    				{\n    	    			_this.dialogInstance.setMessage(\'<br><br><div class=\"centre\">We have been unable to retrieve your refset export file. Would you like to retry.</div></br></br>\');\n    	    			_this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n    	    			_this.dialogInstance.getModalFooter().show();\n    				}\n    			});	\n    		},	\n    		\n    		deleteRefset : function()\n    		{\n    			\n    			var _this 	= this;\n    			var refset 	= this.get(\"model\");			\n    			var id 		= refset.uuid;\n    			\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:deleteRefset (id)\",id);\n\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Delete refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">Are you sure you wish to delete this refset?</div><br><br><div class=\"centre\">\' + refset.description + \'<br><br>\',\n    	            buttons: [{\n    	                label: \'No. Do not delete\',\n    	                cssClass: \'btn-default left\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            },\n                    {\n    	                label: \'Yes. Delete refset\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    _this.send(\"doDeleteRefset\",id);\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    		},	\n    				\n    		doDeleteRefset : function(id)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:deleteRefset (id)\",id);\n    						\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Deleting your refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">Deleting. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            buttons: [{\n    	                label: \'OK\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    			\n    			this.dialogInstance.getModalFooter().hide();\n    			\n    			var dataController = this.get(\'controllers.data\');\n    			dataController.deleteRefset(id,this,\'deleteRefsetComplete\');\n    		},\n    	\n    		deleteRefsetComplete : function (response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:deleteRefsetComplete\",response);\n    			\n        		if (response.error)\n        		{\n        			var message = \'<table class=\"centre\"><tr><td><img src=\"assets/img/warning.jpg\"></td><td style=\"vertical-align:middle\"><h2>Refset deletion failed.</h2></td></tr></table>\';\n\n        			if (typeof response.unauthorised !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">You are not authorised to delete refsets. You may need to log in.</p>\';\n        			}\n\n        			if (typeof response.commsError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">We cannot communicate with the Refset API at this time. Retry later.</p>\';\n        			}\n\n        			this.dialogInstance.setMessage(message);\n        			this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n        			this.dialogInstance.getModalFooter().show();\n        		}\n        		else\n        		{\n        			this.dialogInstance.close();\n        			this.transitionToRoute(\'refsets\');\n        		}\n    		},\n    		\n    		activateRefset : function()\n    		{\n    			\n    			var refset 	= this.get(\"model\");			\n    			\n    			refset.active = true;\n    			delete refset[\"members\"];\n    			delete refset[\"meta\"];\n    			\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:activateRefset\");\n\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Activating your refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">Activating. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            buttons: [{\n    	                label: \'OK\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    			\n    			this.dialogInstance.getModalFooter().hide();\n    			\n    			var dataController = this.get(\'controllers.data\');\n    			dataController.updateRefset(refset,this,\'activateRefsetComplete\');\n    			\n    		},	\n    	\n    		inactivateRefset : function()\n    		{\n    			var refset 	= this.get(\"model\");	\n    			\n    			refset.active = false;\n    			delete refset[\"members\"];\n    			delete refset[\"meta\"];\n    			\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:inactivateRefset\");\n\n    			this.dialogInstance = BootstrapDialog.show({\n    	            title: \'Inactivating your refset\',\n    	            closable: false,\n    	            message: \'<br><br><div class=\"centre\">Inactivating. Please wait...<br><br><img src=\"assets/img/googleballs-animated.gif\"></div><br><br>\',\n    	            buttons: [{\n    	                label: \'OK\',\n    	                cssClass: \'btn-primary\',\n    	                action: function(dialogRef){\n    	                    dialogRef.close();\n    	                }\n    	            }]\n    	        });\n    			\n    			this.dialogInstance.getModalFooter().hide();\n    			\n    			var dataController = this.get(\'controllers.data\');\n    			dataController.updateRefset(refset,this,\'activateRefsetComplete\');\n    			\n    		},	\n    		\n    		activateRefsetComplete : function (response)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:activateRefsetComplete\",response);\n    			\n        		if (response.error)\n        		{\n        			var message = \'<table class=\"centre\"><tr><td><img src=\"assets/img/warning.jpg\"></td><td style=\"vertical-align:middle\"><h2>Refset activation/inactivation failed.</h2></td></tr></table>\';\n\n        			if (typeof response.unauthorised !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">You are not authorised to activate/inactivate refsets. You may need to log in.</p>\';\n        			}\n\n        			if (typeof response.commsError !== \"undefined\")\n        			{\n        				message += \'<br><br><p class=\"centre\">We cannot communicate with the Refset API at this time. Retry later.</p>\';\n        			}\n\n        			this.dialogInstance.setMessage(message);\n        			this.dialogInstance.setType(BootstrapDialog.TYPE_WARNING);\n        			this.dialogInstance.getModalFooter().show();\n        		}\n        		else\n        		{\n        			this.dialogInstance.close();\n        			var refset = this.get(\"model\");\n        			this.initModel({params:{\"refsets.refset\":refset}});\n        		}\n    		},\n    	\n    		clearImportList : function()\n    		{\n    			var uploadController = this.get(\'controllers.refsets/upload\');		\n    			uploadController.clearMemberList();	\n    		},\n    		\n    		addFilter : function()\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:addFilter\");\n    			\n    			var filterName = $(\'#filterSelect\').val();\n    			\n    			Ember.Logger.log(filterName);\n    			\n    			var defaultValue = true;\n    			\n    			switch(filterName)\n    			{\n    				case \'filterByModuleId\' : {defaultValue = this.getDefaultModuleId(); break;}\n    				case \'filterByEffectiveTime\' : {defaultValue = this.getDefaultEffectiveTime(); break;}\n    				case \'filterByLastUpdateDate\' : {defaultValue = \'\'; break;}\n    				case \'filterByLastUpdateUser\' : {defaultValue = this.getDefaultLastUpdater(); break;}\n    				case \'filterByPublishedMembers\' : {defaultValue = false; break;}\n    			}\n    		\n    			this.set(filterName,defaultValue);\n    			\n    			$(\'#filterSelect\').val(0);\n\n    		},\n\n    		removeFilter : function(filterName)\n    		{\n    			Ember.Logger.log(\"controllers.refsets.refset:actions:removeFilter\",filterName);\n    			\n    			this.set(filterName,-1);\n    			\n    			var _this = this;\n    			\n    			Ember.run.next(function()\n    			{\n    				_this.set(filterName,-1); // deals with selects changing the value again!\n    			});			\n    		},\n    		\n    		clearDescriptionFilter : function()\n    		{\n    			this.set(\"filterByDescription\",\"\");\n    			this.set(\"sortOrder\",\"asc\");\n    		},\n    		\n    		setSortToBestMatch : function()\n    		{\n    			Ember.Logger.log(\"setSortToBestMatch\");\n    			this.set(\"sortOrder\",\"score\");\n    		}\n    	\n    	}\n    });\n  });//# sourceURL=refset/controllers/refsets/refset.js");

;eval("define(\"refset/controllers/refsets/upload\", \n  [\"refset/adapters/simple-members\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var MembersAdapter = __dependency1__[\"default\"];\n    var membersAdapter = MembersAdapter.create();\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	\n    	needs : [\"login\"],\n    	\n    	model : [], // flat file import\n    	\n    	isRF2Import	: false,\n    	rf2file : null,\n    	\n    	conceptsQueue : [],\n    	\n    	moreThanOneRefsetInRF2 	: false,\n    	rf2FileToImport 		: {sctId:\"0\",label:\"loading...x\"},\n    	\n    	processGetConceptsQueueTempData : {},\n    	\n    	importTotalChunks : 0,\n    	importCurrentChunk : 0,\n    	importProgress  : function()\n    	{\n    		var percentDone = this.importCurrentChunk / this.importTotalChunks * 100;\n    		\n    		return percentDone;\n    	}.property(\"importCurrentChunk\"),\n    	\n    	\n    	importRequiredFilteredModel : function()\n    	{\n    		var concepts = this.get(\'model\');\n    		\n    		Ember.Logger.log(\"importRequiredFilteredModel concepts\");\n\n    		return concepts.filter(function(concept)\n    		{\n    			return !concept.meta.deleteConcept;\n    		});\n    	}.property(\'model\'),\n    	\n        importError : null,\n\n    	clearMemberList : function()\n    	{\n    		this.model.setObjects([]);\n    	},\n    	\n    	overrideImportList : function(newList)\n    	{\n    		this.model.setObjects(newList);\n    	},\n    	\n    	getConceptDataInProgress : false,\n\n    	clearMembers : function()\n    	{\n    		this.model.setObjects([]);\n    	},\n    	\n    	getMembersMarkedForImport : function()\n    	{\n    		var concepts = this.get(\'model\');\n    		\n    		\n    		var conceptsToImport =  concepts.map(function(concept)\n    		{\n    			var validConcept = $.extend(true, {}, concept);\n    			\n    			delete validConcept[\"meta\"];\n    			\n    			return concept.meta.deleteConcept ? null : validConcept;\n    		});\n    		\n    		conceptsToImport = $.grep(conceptsToImport,function(n){ return(n); });\n    		\n    		return conceptsToImport;\n    	},\n\n    	addConceptsToImportList : function(membersToAddToList)\n    	{\n    		var membersToImport = [];\n    		\n    		var membersToImportOriginal = this.get(\"model\");\n\n    		membersToImportOriginal.map(function(member)\n    		{\n    			membersToImport.push(member);\n    		});\n    		\n    		membersToAddToList.map(function(member)\n    		{\n    			membersToImport.push(member);\n    		});\n    		\n    		this.model.setObjects(membersToImport);\n    	},\n\n    	showImportHelp : function()\n    	{\n            BootstrapDialog.show({\n                title: \'Member import help\',\n                closable: false,\n                message: \'...............\',\n                buttons: [{\n                    label: \'OK\',\n                    action: function(dialog)\n                    {\n                        dialog.close();\n                    }\n                }]\n            });		\n    	},\n    	\n    	toggleImportMember : function(referencedComponentId)\n    	{\n    		var members = $.extend(true, [], this.get(\"model\"));\n    		\n    		for (var m=0;m<members.length;m++)\n    		{\n    			if (members[m].referencedComponentId === referencedComponentId)\n    			{\n    				members[m].meta.deleteConcept = !members[m].meta.deleteConcept;\n    				this.set(\"model\",members);\n    				break;\n    			}\n    		}\n    	},\n\n    	toggleImportMemberActive : function(referencedComponentId)\n    	{\n    		var members = $.extend(true, [], this.get(\"model\"));\n    		\n    		for (var m=0;m<members.length;m++)\n    		{\n    			if (members[m].referencedComponentId === referencedComponentId)\n    			{\n    				members[m].active = !members[m].active;\n    				this.set(\"model\",members);\n    				break;\n    			}\n    		}\n    	},\n    	\n    	sortMembers : function(a,b)\n    	{\n    		if (a.meta.conceptActive && !b.meta.conceptActive) {return 1;}\n    		if (!a.meta.conceptActive && b.meta.conceptActive) {return -1;}\n    		if (a.description < b.description) {return -1;}		\n    		if (a.description > b.description) {return 1;}\n    		\n    		return 0;		\n    	},\n    	\n    	processGetConceptsQueue : function(user,defaultMemberModuleId)\n    	{\n    		Ember.Logger.log(\"get concepts started\", this.conceptsQueue.length);\n    		\n    		var promise;\n    		var _this = this;\n    				\n    		if (this.conceptsQueue.length)\n    		{\n    			var conceptsToProcess = this.conceptsQueue.shift();\n    			\n    			promise = this.getConceptsForImportFile(user,conceptsToProcess,defaultMemberModuleId).then(function(response)\n    			{\n    				if (response.error) {_this.processGetConceptsQueueTempData.error = response.error;}\n\n    				_this.processGetConceptsQueueTempData.conceptsNotFound 	= _this.processGetConceptsQueueTempData.conceptsNotFound.concat(response.conceptsNotFound);\n    				_this.processGetConceptsQueueTempData.membersData 		= _this.processGetConceptsQueueTempData.membersData.concat(response.membersData);\n\n    				// Now sort member data to pull any inactive concepts to the top\n    				_this.processGetConceptsQueueTempData.membersData.sort(_this.sortMembers);\n\n    				_this.model.setObjects(_this.processGetConceptsQueueTempData.membersData);\n    			});\n    		}\n    		\n    		Ember.RSVP.all([promise]).then(function()\n    		{\n    			Ember.Logger.log(\"get concepts finished\",_this.conceptsQueue.length);\n    			\n    			if (_this.conceptsQueue.length)\n    			{\n    				_this.processGetConceptsQueue(user,defaultMemberModuleId);\n    			}\n    			else\n    			{\n    				if (_this.processGetConceptsQueueTempData.conceptsNotFound.length)\n    				{\n    					BootstrapDialog.show({\n    			            title: \'Concept SCTIDs not found\',\n    			            type : BootstrapDialog.TYPE_WARNING,\n    			            closable: false,\n    			            message: \'<br><br><div class=\"centre\">The identifiers listed below are not in SNOMED CT and cannot be imported.</div><br><br><div class=\"centre\">\' + _this.processGetConceptsQueueTempData.conceptsNotFound.toString() + \'</div><br><br>\',\n    			            buttons: [{\n    			                label: \'OK\',\n    			                cssClass: \'btn-primary\',\n    			                action: function(dialogRef){\n    			                    dialogRef.close();\n    			                }\n    			            }]\n    			        });\n    				}\n    					\n    				_this.set(\"getConceptDataInProgress\",false);\n    				_this.set(\"importError\",_this.processGetConceptsQueueTempData.error);}\n    		});\n    	},\n    	\n    	getConceptsForImportFile : function(user,ids,defaultMemberModuleId)\n    	{\n    		var _this = this;\n    		\n    		return membersAdapter.findList(user,ids).then(function(result)\n    		{\n    			var membersData 		= [];\n    			var conceptsNotFound 	= [];\n    			var error;\n    			\n    			_this.set(\"importCurrentChunk\",_this.get(\"importCurrentChunk\") + 1);\n    			\n    			if (typeof result.meta.errorInfo === \"undefined\")\n    			{\n    				var conceptData = result.content.concepts;\n    								\n    				membersData = ids.map(function(refCompId)\n    				{\n    					var member = {};\n    					\n    					member.referencedComponentId = refCompId;\n    					member.moduleId = defaultMemberModuleId;\n    					member.meta = {};\n    					\n    					if (conceptData[refCompId] !== null)\n    					{\n    						member.active 						= true;\n    						member.description					= conceptData[refCompId].label;\n    						member.meta.conceptActive 			= conceptData[refCompId].active;\n    						member.meta.deleteConcept 			= !conceptData[refCompId].active;\n    						member.meta.disabled				= !conceptData[refCompId].active;\n\n    						return member;\n    					}\n    					else\n    					{\n    						conceptsNotFound.push(refCompId);	\n    						return null;\n    					}\n    				});\n    										\n    				membersData = $.grep(membersData,function(n){ return(n); });\n    				\n    				\n    			}\n    			else\n    			{\n    				Ember.Logger.log(result.error);\n    				error = result.error;\n    			}\n    			\n    			return {error:error,membersData:membersData,conceptsNotFound:conceptsNotFound};\n    			\n    		});\n    	},\n    	\n        actions :\n        {\n        	importSingleMember : function(member)\n        	{\n        		Ember.Logger.log(\"controller.refsets.upload:actions:importSingleFile\");\n        		\n        		member.moduleId = $(\'#newRefsetModuleId\').val();\n        		member.active 	= true;\n        		\n        		member.meta = 	{};\n    			member.meta.conceptActive 			= true;\n    			member.meta.deleteConcept 			= false;\n    			member.meta.found 					= true;\n    			member.meta.disabled				= false;\n    						\n    			this.addConceptsToImportList([member]);\n        	},\n        	\n        	\n    		importRF2File : function(members)\n    		{\n        		Ember.Logger.log(\"controller.refsets.upload:actions:importRF2File\");\n        		    		\n        		this.model.setObjects([]);\n        		this.set(\"isRF2Import\",true);\n        		this.set(\"rf2file\",members);\n        		var _this = this;\n        		\n    			var loginController = this.get(\'controllers.login\');\n    			var user = loginController.user;\n    			\n    			Ember.run.next(this, function()\n        	    {	\n    	    		// Process file to remove any blank lines or trailing CR/LF \n    	    		var rawArray = members.split(\'\\n\');\n    	    		\n    	    		rawArray.shift(); // Remove the header row at the top\n    	    		\n    	    		var refsetsInRF2File = {};\n    	    		var promises = [];\n    	    		\n    				var rowsToImportArray = rawArray.map(function(member)\n    				{\n    					if (typeof member !== \"undefined\" && member !== \"\")\n    					{\n    						var memberRow 		= member.split(/\\t/);\n    						var effectiveTime	= memberRow[1];\n    						var refsetId 		= memberRow[4];\n    						var conceptId 		= memberRow[5];\n\n    						if (effectiveTime === \"\") // If no effective Time, then not published, so ignore it\n    						{\n    							return null;\n    						}\n    						\n    						// We may have more than one refset in an RF2 file, so lets deal with them separately.\n    						if (!(refsetId in refsetsInRF2File))\n    						{\n    							refsetsInRF2File[refsetId] = {sctId:refsetId,label:\'loading...\',concepts:{}};\n    								\n    							var promise = membersAdapter.find(user,refsetId).then(function(response)\n    							{\n    								return {sctId:refsetId,label:response.content.concept.label};	\n    							});\n    							\n    							promises.push(promise);\n    						}\n    						\n    						refsetsInRF2File[refsetId].concepts[conceptId] = 1;						\n    						\n    						return member;\n    					}\n    				});\n    				\n    				rowsToImportArray = $.grep(rowsToImportArray,function(n){ return(n); });\n    				\n    				var refsetsArray		= Object.keys(refsetsInRF2File);\n    				\n    				var refsets 			= [];\n    				\n    				for (var r=0;r<refsetsArray.length;r++)\n    				{\n    					refsets[r] = refsetsInRF2File[refsetsArray[r]];\n    					\n    					var conceptsArray		= Object.keys(refsets[r].concepts);\n    					\n    					var concepts 			= [];\n    					\n    					for (var c=0;c<conceptsArray.length;c++)\n    					{\n    						concepts[c] = refsets[r].concepts[conceptsArray[c]];\n    					}\n    					\n    					refsets[r].concepts = concepts;\n    				}\n    				\n    				_this.set(\"moreThanOneRefsetInRF2\",refsets.length>1);\n    				\n    				Ember.RSVP.all(promises).then(function(result)\n    				{\n    					for (var l=0;l<result.length;l++)\n    					{\n    						for (var r=0;r<refsets.length;r++)\n    						{\n    							if (refsets[r].sctId === result[l].sctId)\n    							{\n    								refsets[r].label = result[l].label;\n    							}\n    						}\n    					}\n\n    					if (refsets.length > 0)\n    					{\n    						_this.set(\"rf2FileToImport\",refsets[0]);\n    					}\n    					else\n    					{\n    						_this.set(\"rf2FileToImport\",{});\n    					}\n\n    					_this.model.setObjects(refsets);\n    				});\n    				\n    				_this.model.setObjects(refsets);\n        	    });\n    		},\n        	\n    		importFlatFile : function(members)\n    		{\n        		Ember.Logger.log(\"controller.refsets.upload:actions:importFlatFile\");\n        		\n        		this.model.setObjects([]);\n        		this.set(\"isRF2Import\",false);\n        		var _this = this;\n        		\n        		Ember.run.next(this, function()\n        		{					\n    				var membersArray = members.split(\'\\n\');\n    				\n    				var idArray = membersArray.map(function(refCompId)\n    				{\n    					if (typeof refCompId !== \"undefined\" && refCompId !== \"\")\n    					{\n    						return refCompId;\n    					}\n    				});\n    				\n    				idArray = $.grep(idArray,function(n){ return(n); });\n    	\n    				var loginController = this.get(\'controllers.login\');\n    				var user = loginController.user;\n    				\n    				_this.set(\"getConceptDataInProgress\",true);\n    				\n    				var defaultMemberModuleId = $(\'#newRefsetModuleId\').val();\n    				\n    				var idArraySlices		= [];			\n    				while(idArray.length)\n    				{\n    					idArraySlices.push(idArray.splice(0,25));\n    				}\n    				\n    				_this.conceptsQueue.setObjects(idArraySlices);\n    				\n    				_this.set(\"importTotalChunks\",idArraySlices.length +1);\n    				_this.set(\"importCurrentChunk\",1);\n    			\n    				_this.processGetConceptsQueueTempData.conceptsNotFound	= [];\n    				_this.processGetConceptsQueueTempData.membersData 		= [];\n    				_this.processGetConceptsQueueTempData.error 			= 0;\n    				\n    				_this.processGetConceptsQueue(user,defaultMemberModuleId);\n        		});\n    		},\n        }\n    });\n  });//# sourceURL=refset/controllers/refsets/upload.js");

;eval("define(\"refset/controllers/utilities\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	deserialiseURLString: function(p)\n    	{\n    		var ret = {};\n    		\n    		if (p !== null)\n    		{\n    			var seg = p.replace(/^\\?/,\'\').split(\'&\');\n    		    var len = seg.length, i = 0;\n    			for (;i<len;i++) \n    			{\n    				if (!seg[i]) { continue; }\n    				var s = seg[i].split(\'=\');\n    				var v = this.urldecode(s[1]);\n    				ret[s[0]] = /^\\[^0]d+$/.test(v) ? Math.ceil(v) : v == \"null\" ? null : v; // If our value is an integer value then force it to be numeric rather than a string\n    			}\n    		}\n    		return ret;\n    	},\n    	\n    	urldecode : function(str) \n    	{\n    		return decodeURIComponent((str+\'\').replace(/\\+/g, \'%20\'));\n    	},\n    	\n    	serialiseObject : function(object)\n    	{\n    		var URLSerialisedData = \"\";\n    		\n    		for (var key in object)\n    		{\n    			if (object.hasOwnProperty(key) && key !== \"toString\")\n    			{\n    				if (URLSerialisedData !== \"\") \n    			    {\n    			    	URLSerialisedData += \"&\";\n    			    }\n    			    \n    			    URLSerialisedData += key + \"=\" + object[key];\n    			}\n    		}\n    		\n    		return URLSerialisedData;\n    	},\n    	\n    	storeDataInSessionStore : function(key,data)\n    	{\n    		var URLSerialisedData = JSON.stringify(data);\n    		sessionStoreManager.setSessionVar(key,URLSerialisedData);		\n    	},\n    	\n    	getDataFromSessionStore : function(key)\n    	{\n    		var returnObj = {};\n    		\n    		var storedData = sessionStoreManager.getSessionVar(key);\n\n    		if (typeof storedData !== \"undefined\")\n    		{\n    			try\n    			{\n    				returnObj.data 		= JSON.parse(storedData);\n    				returnObj.status 	= \'ok\';\n    			}\n    			catch(e)\n    			{\n    				returnObj.status 	= \'error\';				\n    			}\n    		}\n    		else\n    		{\n    			returnObj.status = \'error\';\n    		}\n    			\n    		return returnObj;\n    	},\n    });\n  });//# sourceURL=refset/controllers/utilities.js");

;eval("define(\"refset/helpers/code-to-language\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value)\n    {\n    	switch (value)\n    	{\n    		case \"en_US\" : return \"US English\"; \n    	}\n    });\n  });//# sourceURL=refset/helpers/code-to-language.js");

;eval("define(\"refset/helpers/date-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(date)\n    {\n    	var theDate = new Date(date);\n    	\n    	if (theDate instanceof Date && !isNaN(theDate.valueOf()))\n    	{\n    		return $.formatDateTime(\'M dd, yy\', theDate);		\n    	}\n    });\n  });//# sourceURL=refset/helpers/date-format.js");

;eval("define(\"refset/helpers/date-time-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(date)\n    {\n    	var theDate = new Date(date);\n    	\n    	if (theDate instanceof Date && !isNaN(theDate.valueOf()))\n    	{\n    		return $.formatDateTime(\'hh:ii - MM dd, yy\', theDate);		\n    	}\n    });\n  });//# sourceURL=refset/helpers/date-time-format.js");

;eval("define(\"refset/helpers/effective-time-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(date)\n    {\n    	var theDate = new Date(date);\n    	\n    	if (theDate instanceof Date && !isNaN(theDate.valueOf()))\n    	{\n    		return $.formatDateTime(\'yymmdd\', theDate);		\n    	}\n    });\n  });//# sourceURL=refset/helpers/effective-time-format.js");

;eval("define(\"refset/helpers/is-selected\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value1,value2)\n    {\n    	return value1 === value2 ? \' selected\' : null;\n    });\n  });//# sourceURL=refset/helpers/is-selected.js");

;eval("define(\"refset/helpers/member-meta-data-icon\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(member)\n    {\n    	var theDate1 	= new Date(member.created);\n    	var theDate2 	= new Date(member.modifiedDate);\n    	var createdDate;\n    	var updateDate;\n    	\n    	if (theDate1 instanceof Date && !isNaN(theDate1.valueOf()))\n    	{	\n    		createdDate = $.formatDateTime(\'hh:ii - MM dd, yy\', theDate1);\n    	}\n\n    	if (theDate2 instanceof Date && !isNaN(theDate2.valueOf()))\n    	{	\n    		updateDate = $.formatDateTime(\'hh:ii - MM dd, yy\', theDate2);\n    	}\n\n    	var tooltip	= \"Created: \" + createdDate + \", Last Updated: \" + updateDate + \", by: \" + member.modifiedBy;\n    	var anchor 	= \'<a class=\"pointer icon info\" rel=\"tooltip\" title=\"\' + tooltip + \'\"></a>\';\n    	\n    	return new Handlebars.SafeString(anchor);\n    });\n  });//# sourceURL=refset/helpers/member-meta-data-icon.js");

;eval("define(\"refset/helpers/radio-button\", \n  [\"ember\",\"refset/views/radio-button\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var RadioView = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Handlebars.makeViewHelper(RadioView);\n  });//# sourceURL=refset/helpers/radio-button.js");

;eval("define(\"refset/views/radio-button\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n    	tagName: \'input\',\n    	type: \'radio\',\n    	attributeBindings: [\'type\', \'htmlChecked:checked\', \'value\', \'name\'],\n    	 \n    	htmlChecked: function(){\n    		return this.get(\'value\') === this.get(\'checked\');\n    	}.property(\'value\', \'checked\'),\n    	  \n    	change: function(){\n    		this.set(\'checked\', this.get(\'value\'));\n    	},\n    	\n        _updateElementValue: function() {\n            Ember.run.next(this, function() {\n              this.$().prop(\'checked\', this.get(\'htmlChecked\'));\n            });\n        }.observes(\'htmlChecked\')\n\n    });\n  });//# sourceURL=refset/views/radio-button.js");

;eval("define(\"refset/helpers/refset-list-item-span\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(classname,value,concepts)\n    {\n    	if (typeof value !== \"undefined\" && typeof concepts !== \"undefined\")\n    	{\n    		if (typeof concepts[value] !== \"undefined\")\n    		{\n    			return new Handlebars.SafeString(\'<span class=\"\' + classname + \'\" rel=\"tooltip\" title=\"\' + concepts[value] + \'\">\' + value + \'</span>\');\n    		}\n    		else\n    		{\n    			return new Handlebars.SafeString(\'<span class=\"\' + classname + \'\">\' + value + \'</span>\');\n    		}\n    	}\n    });\n  });//# sourceURL=refset/helpers/refset-list-item-span.js");

;eval("define(\"refset/helpers/snomed-id-to-label\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value,concepts)\n    {\n    	if (typeof value !== \"undefined\" && typeof concepts !== \"undefined\")\n    	{\n    		if (typeof concepts[value] !== \"undefined\")\n    		{\n    			return concepts[value].replace(/ *\\([^)]*\\) */g, \"\");\n    		}\n    		else\n    		{\n    			return value + \' not found\';\n    		}\n    	}\n    });\n  });//# sourceURL=refset/helpers/snomed-id-to-label.js");

;eval("define(\"refset/helpers/sort-icon\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(sortBy, sortOrder, thisField)\n    {\n    	if (sortBy === thisField)\n    	{\n    		var icon = \'upArrow.png\';\n    		\n    		switch (sortOrder)\n    		{\n    			case \'desc\' 	: {icon=\'downArrow.png\'; break; } \n    			case \'score\' 	: {icon=\'search.png\'; break; } \n    		}\n    		\n    		return new Handlebars.SafeString(\'<img src=\"/assets/img/\' + icon + \'\">\');\n    	}\n    });\n  });//# sourceURL=refset/helpers/sort-icon.js");

;eval("define(\"refset/helpers/yes-no-format\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value)\n    {\n    	return value ? \'Yes\' : \'No\';\n    });\n  });//# sourceURL=refset/helpers/yes-no-format.js");

;eval("define(\"refset/models/simple-refset-member\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Object.extend({\n    	id:	null,\n    	moduleId: RefsetENV.APP.defaultSnomedTypes.moduleType,\n    	referencedComponentId: null,\n    	description: null,\n    	effectiveTime : null,\n    	active : true\n    });\n  });//# sourceURL=refset/models/simple-refset-member.js");

;eval("define(\"refset/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: RefsetENV.locationType\n    });\n\n    Router.map(function() {\n    	  this.route(\"dashboard\",{path:\'/\'});\n    	  \n    	  this.resource(\"refsets\", function(){\n    		  this.route(\"refset\", {path:\':uuid\'});\n    		  this.route(\"new\");\n    	  });\n\n    	  this.route(\"news\");\n    	  this.route(\"privacy-statement\");\n    	  this.route(\"cookie-policy\");\n    	  this.route(\"accessibility\");\n    	  this.route(\"terms-and-conditions\");\n    	  this.route(\"site-map\");\n    	  \n    	  //this.route(\'catchall\', {path: \'/*wildcard\'});\n    });\n\n    Ember.Route.reopen({\n    	  getParentRoute: function(){\n    	    var route = this;\n    	    var handlerInfos = route.router.router.currentHandlerInfos;\n    	    var parent, current;\n\n    	    for (var i=0, l=handlerInfos.length; i<l; i++) {\n    	      current = handlerInfos[i].handler;\n    	      if((current.routeName === route.routeName)||(current.routeName.match(/./) && current.routeName.split(\'.\')[1] === route.routeName )){\n    	        return parent.routeName;\n    	      }\n    	      parent = current;\n    	    }\n    	  }\n    	});\n    	\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=refset/router.js");

;eval("define(\"refset/routes/accessibility\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/accessibility.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/accessibility.js");

;eval("define(\"refset/routes/application\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n\n       model: function(){\n           return this.controllerFor(\'data\').initialiseAppData().then(function(){\n               return true;\n           });\n       },\n           \n    });\n  });//# sourceURL=refset/routes/application.js");

;eval("define(\"refset/routes/cookie-policy\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/cookie-policy.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/cookie-policy.js");

;eval("define(\"refset/routes/dashboard\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    	setupController: function(controller)\n    	{\n    		controller.initModel();\n    	},\n    	\n    });\n  });//# sourceURL=refset/routes/dashboard.js");

;eval("define(\"refset/routes/news\", \n  [\"refset/controllers/news\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var NewsController = __dependency1__[\"default\"];\n\n    var newsController = NewsController.create();\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	   model: function() \n    	   {\n    		   return  newsController.model;\n    	   }\n     });\n  });//# sourceURL=refset/routes/news.js");

;eval("define(\"refset/routes/privacy-statement\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/privacy-statement.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/privacy-statement.js");

;eval("define(\"refset/routes/refsets/index\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n    	\n    	setupController: function(controller)\n    	{\n    		controller.initModel();\n    	},\n\n    });\n  });//# sourceURL=refset/routes/refsets/index.js");

;eval("define(\"refset/routes/refsets/new\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n    	\n    	beforeModel : function()\n    	{\n    		Ember.Logger.log(\"routes.refsets.new:beforeModel\");\n    		this.controllerFor(\'refsets.new\').createEmptyRefset();\n    	},\n\n    	actions :\n    	{\n    		initRefsetImport : function()\n    		{\n    			var newRefsetController = this.controllerFor(\'refsets.new\');\n    			newRefsetController.create(this.refset);\n    		},\n    	\n    		abortDataRequest : function(resourceType)\n    		{\n    			Ember.Logger.log(\"routes.refsets.new:actions:abortDataRequest (resourceType)\",resourceType);\n    			// Depends what we are doing here... getting member data or saving the refset\n    		},	\n    	},	\n     });\n  });//# sourceURL=refset/routes/refsets/new.js");

;eval("define(\"refset/routes/refsets/refset\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n            		\n    	beforeModel : function(params)\n    	{\n    		this.controllerFor(\'refsets/refset\').initModel(params);\n    	},\n\n    });\n  });//# sourceURL=refset/routes/refsets/refset.js");

;eval("define(\"refset/routes/site-map\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n         return \'site map goes here...\';\n       }\n     });\n  });//# sourceURL=refset/routes/site-map.js");

;eval("define(\"refset/routes/terms-and-conditions\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.Route.extend({\n       model: function() {\n    	   return $.get(\"assets/static-content/terms-and-conditions.html\");\n       }\n     });\n  });//# sourceURL=refset/routes/terms-and-conditions.js");

;eval("define(\"refset/templates/accessibility\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/accessibility.js");

;eval("define(\"refset/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Dashboard\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Browse Refsets\");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"refsets.new\", options) : helperMissing.call(depth0, \"link-to\", \"refsets.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"New Refset\");\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"News\");\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n					<li><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"logout\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Logout</a></li>\\n				\");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n					<li><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showRegistrationForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Register</a></li>\\n					<li><a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showLoginForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Login</a></li>\\n				\");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n		<table style=\\\"margin-top:5px\\\">\\n		<tr>\\n			<td width=\\\"320\\\">\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progressBinding\': (\"logoutProgressDisplay\"),\n        \'type\': (\"danger\"),\n        \'stripped\': (\"true\")\n      },hashTypes:{\'progressBinding\': \"STRING\",\'type\': \"STRING\",\'stripped\': \"STRING\"},hashContexts:{\'progressBinding\': depth0,\'type\': depth0,\'stripped\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\"\\n			</td>\\n			<td class=\\\"warningText\\\" valign=top>\\n				&nbsp;&nbsp;Logging you out in \");\n      stack1 = helpers._triageMustache.call(depth0, \"logoutTimerDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" seconds\\n			</td>\\n		</tr>\\n		</table>\\n		\");\n      return buffer;\n      }\n\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"Privacy\");\n      }\n\n    function program18(depth0,data) {\n      \n      \n      data.buffer.push(\"Cookie policy\");\n      }\n\n    function program20(depth0,data) {\n      \n      \n      data.buffer.push(\"Accessibility\");\n      }\n\n    function program22(depth0,data) {\n      \n      \n      data.buffer.push(\"Terms and conditions\");\n      }\n\n    function program24(depth0,data) {\n      \n      \n      data.buffer.push(\"Site map\");\n      }\n\n      data.buffer.push(\"<nav id=\\\"header\\\" role=\\\"navigation\\\" class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"navbar-header\\\">\\n            <button data-target=\\\"#bs-example-navbar-collapse-1\\\" data-toggle=\\\"collapse\\\" class=\\\"navbar-toggle collapsed\\\" type=\\\"button\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <img alt=\\\"IHTSDO Reference Set Management Service\\\" style=\\\"height:50px\\\" src=\\\"assets/img/box-logo.png\\\">\\n\\n        </div>\\n        <div id=\\\"bs-example-navbar-collapse-1\\\" class=\\\"collapse navbar-collapse\\\">\\n            <ul class=\\\"nav navbar-nav navbar-left \\\">\\n                <li><a href=\\\"#\\\">IHTSDO Reference Set Management Service</a></li>\\n            </ul>\\n            <ul class=\\\"nav navbar-nav navbar-right \\\">\\n				<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"dashboard\", options) : helperMissing.call(depth0, \"link-to\", \"dashboard\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n				<li class=\\\"dropdown\\\">\\n					<a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">Refsets <span class=\\\"caret\\\"></span></a>\\n					<ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n						<li>\");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'showUnpublished\': (\"0\"),\n        \'showInactive\': (\"0\")\n      },hashTypes:{\'showUnpublished\': \"STRING\",\'showInactive\': \"STRING\"},hashContexts:{\'showUnpublished\': depth0,\'showInactive\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"refsets\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"refsets\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n						\");\n      stack1 = helpers[\'if\'].call(depth0, \"user.token\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</ul>\\n				</li>\\n		\\n		        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"news\", options) : helperMissing.call(depth0, \"link-to\", \"news\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n				\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"user.token\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n            </ul>\\n        </div>\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"showLogoutTimer\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n</nav>\\n\\n<div id=\\\"body\\\" class=\\\"container-fluid\\\">\\n\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.outlet || (depth0 && depth0.outlet),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modal\", options) : helperMissing.call(depth0, \"outlet\", \"modal\", options))));\n      data.buffer.push(\"\\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-notifications\'] || (depth0 && depth0[\'bs-notifications\']),options={hash:{\n        \'style\': (\"z-index: 1000;  width: 90%; left: 0; right: 0; margin-left: auto; margin-right: auto; margin-top: 50px;\")\n      },hashTypes:{\'style\': \"STRING\"},hashContexts:{\'style\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-notifications\", options))));\n      data.buffer.push(\"\\n\\n</div>\\n\\n<div class=\\\"waitAnim\\\"><img src=\\\"/assets/img/ajax-loader.gif\\\"></div>\\n\\n\\n<div id=\\\"footer\\\" class=\\\"container-fluid\\\">	\\n	\\n	<hr>\\n\\n	<nav class=\\\"navbar\\\">\\n\\n        <ul class=\\\"nav navbar-nav navbar-right links\\\">\\n            <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"privacy-statement\", options) : helperMissing.call(depth0, \"link-to\", \"privacy-statement\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n            <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"cookie-policy\", options) : helperMissing.call(depth0, \"link-to\", \"cookie-policy\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n            <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"accessibility\", options) : helperMissing.call(depth0, \"link-to\", \"accessibility\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n            <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"terms-and-conditions\", options) : helperMissing.call(depth0, \"link-to\", \"terms-and-conditions\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n            <li><small>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"site-map\", options) : helperMissing.call(depth0, \"link-to\", \"site-map\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small></li>\\n            <li><small><a href=\\\"http://www.ihtsdo.org/\\\" target=\\\"_blank\\\">&copy; Copyright IHTSDO 2014</a></small></li>\\n        </ul>\\n\\n		<ul class=\\\"nav navbar-nav navbar-right share\\\">\\n			<li class=\\\"title\\\">Share</li>\\n			<li><a href=\\\"#\\\" class=\\\"linkedin\\\">linkedin</a></li>\\n			<li><a href=\\\"#\\\" class=\\\"twitter\\\">twitter</a></li>\\n			<li><a href=\\\"#\\\" class=\\\"google\\\">googleplus</a></li>\\n		</ul>\\n\\n    </nav>\\n\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/application.js");

;eval("define(\"refset/templates/cookie-policy\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/cookie-policy.js");

;eval("define(\"refset/templates/dashboard\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Published Refsets\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Unpublished Refsets\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Inactivated Refsets\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n		<li class=\\\"list-group-item\\\">\\n			<span class=\\\"right\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"published\", options) : helperMissing.call(depth0, \"date-format\", \"published\", options))));\n      data.buffer.push(\"</span>\\n			<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n			<p>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</p>\\n		</li>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Summary</h1>\\n<ul>\\n	<li>There are \");\n      stack1 = helpers._triageMustache.call(depth0, \"publishedRefsets.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'showUnpublished\': (\"0\"),\n        \'showInactive\': (\"0\")\n      },hashTypes:{\'showUnpublished\': \"STRING\",\'showInactive\': \"STRING\"},hashContexts:{\'showUnpublished\': depth0,\'showInactive\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"refsets\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"refsets\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n	<li>There are \");\n      stack1 = helpers._triageMustache.call(depth0, \"unpublishedRefsets.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'showUnpublished\': (\"1\"),\n        \'showInactive\': (\"0\")\n      },hashTypes:{\'showUnpublished\': \"STRING\",\'showInactive\': \"STRING\"},hashContexts:{\'showUnpublished\': depth0,\'showInactive\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"refsets\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"refsets\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n	<li>There are \");\n      stack1 = helpers._triageMustache.call(depth0, \"inactiveRefsets.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'query-params\'] || (depth0 && depth0[\'query-params\']),options={hash:{\n        \'showUnpublished\': (\"0\"),\n        \'showInactive\': (\"1\")\n      },hashTypes:{\'showUnpublished\': \"STRING\",\'showInactive\': \"STRING\"},hashContexts:{\'showUnpublished\': depth0,\'showInactive\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"query-params\", options));\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0,depth0],types:[\"STRING\",\"sexpr\"],data:data},helper ? helper.call(depth0, \"refsets\", stack1, options) : helperMissing.call(depth0, \"link-to\", \"refsets\", stack1, options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n</ul>\\n\\n<h1>Latest Refset Tool News</h1>\\n<ul class=\\\"list-group refset-list\\\">\\n	\");\n      stack1 = helpers.each.call(depth0, \"news\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/dashboard.js");

;eval("define(\"refset/templates/login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		<p class=\\\"autoLogoutInfo\\\">You have been automatically logged out after \");\n      stack1 = helpers._triageMustache.call(depth0, \"RefsetENV.APP.loginExpiry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" minutes of inactivity.</p>\\n	\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n		<div class=\\\"loading\\\">Signing you you in, please wait...</div>\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progress\': (100),\n        \'stripped\': (true),\n        \'animated\': (true)\n      },hashTypes:{\'progress\': \"INTEGER\",\'stripped\': \"BOOLEAN\",\'animated\': \"BOOLEAN\"},hashContexts:{\'progress\': depth0,\'stripped\': depth0,\'animated\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\"\\n	\");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		<div class=\\\"error\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"loginError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<form id=\\\"loginForm\\\" class=\\\"RefsetPanel\\\" action=\\\"javascript:Refset.__container__.lookup(\'controller:login\').send(\'loginUser\')\\\">\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"autoLoggedOut\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	<p>\\n		For access to the full range to tools you will need to sign in.\\n		You may continue as a guest to view only public Reference Sets.\\n	</p>\\n	\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"username\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Username\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"password\"),\n        \'type\': (\"password\"),\n        \'id\': (\"loginPassword\"),\n        \'placeholder\': (\"Password\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'id\': \"STRING\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'id\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"loginInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"loginError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n	<button type=\\\"submit\\\" style=\\\"display:none\\\">Submit</button>\\n	\\n	<p class=\\\"forgetPasswordLink\\\"><a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"RefsetENV.APP.passwordResetURL\")\n      },hashTypes:{\'href\': \"STRING\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" target=\\\"_blank\\\">I\'ve forgotten my password or I would like to change my password</a></p>\\n</form>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/login.js");

;eval("define(\"refset/templates/logout-alert\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div id=\\\"logoutWarningModel\\\">\\n	<p class=\\\"heading\\\">Due to inactivity, you will be automatically logged out in</p>\\n\\n	<p class=\\\"timer\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"logoutTimerDisplay\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" seconds</p>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/logout-alert.js");

;eval("define(\"refset/templates/news\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n		<li class=\\\"list-group-item\\\">\\n			<span class=\\\"right\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"published\", options) : helperMissing.call(depth0, \"date-format\", \"published\", options))));\n      data.buffer.push(\"</span>\\n			<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n			<p>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"description\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</p>\\n		</li>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Refset Tool News</h1>\\n<ul class=\\\"list-group refset-list\\\">\\n	\");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/news.js");

;eval("define(\"refset/templates/privacy-statement\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/privacy-statement.js");

;eval("define(\"refset/templates/refsets/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filteredRefsets\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n					 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredRefsets\"),\n        \'height\': (400),\n        \'rowHeight\': (65),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"INTEGER\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				  \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n						<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.disabled:inactiveConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n							\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"refsets.refset\", \"uuid\", options) : helperMissing.call(depth0, \"link-to\", \"refsets.refset\", \"uuid\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							<span class=\\\"snomed-id\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"sctId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\");\n      stack1 = helpers[\'if\'].call(depth0, \"sctId\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							\\n							<br>\\n			\\n							<span class=\\\"language pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"meta.language\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"languageCode\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							<span class=\\\"snomed-id pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"meta.type\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"typeId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							<span class=\\\"snomed-id pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"meta.moduleType\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"moduleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							<span class=\\\"snomed-id pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"meta.componentType\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"componentTypeId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							\\n							<span class=\\\"status\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.status\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							<span class=\\\"num-members\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"totalNoOfMembers\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n							\\n							<br>\\n							\\n							<span class=\\\"effective-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"latestEffectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"latestEffectiveTime\", options))));\n      data.buffer.push(\"</span>\\n							<span class=\\\"last-modified\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-format\'] || (depth0 && depth0[\'date-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modifiedDate\", options) : helperMissing.call(depth0, \"date-format\", \"modifiedDate\", options))));\n      data.buffer.push(\"</span>\\n							<span class=\\\"last-modified-by\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n						</div>\\n					  \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"<button class=\\\"btn btn-primary right\\\">view</button>\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\" | \");\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n				  		No Refset match your search filters\\n				  \");\n      }\n\n    function program10(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n				<p>There are currently no matching refsets available.</p>\\n			\");\n      }\n\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByStatus\\\">Filter by refset status</option>\");\n      }\n\n    function program14(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByType\\\">Filter by refset type</option>\");\n      }\n\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByModuleId\\\">Filter by module type</option>\");\n      }\n\n    function program18(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByComponentType\\\">Filter by component type</option>\");\n      }\n\n    function program20(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByLanguage\\\">Filter by language</option>\");\n      }\n\n    function program22(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByEffectiveTime\\\">Filter by effective time</option>\");\n      }\n\n    function program24(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByLastUpdateDate\\\">Filter by last update date</option>\");\n      }\n\n    function program26(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByLastUpdateUser\\\">Filter by last updater</option>\");\n      }\n\n    function program28(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Status:				<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByStatus\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (\"published\"),\n        \'checked\': (\"filterByStatus\")\n      },hashTypes:{\'value\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Published\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (\"unpublished\"),\n        \'checked\': (\"filterByStatus\")\n      },hashTypes:{\'value\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Unpublished\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (\"inactive\"),\n        \'checked\': (\"filterByStatus\")\n      },hashTypes:{\'value\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Inactive\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program30(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Refset Type:		<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByType\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByType\"),\n        \'dataType\': (\"refsetTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program32(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Module Type:		<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByModuleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByModuleId\"),\n        \'dataType\': (\"moduleTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program34(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Component Type:		<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByComponentType\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByComponentType\"),\n        \'dataType\': (\"componentTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program36(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Language:		<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByLanguage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByLanguage\"),\n        \'dataType\': (\"languagesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program38(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Effective Time: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByEffectiveTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByEffectiveTime\"),\n        \'dataType\': (\"refsetEffectiveTimesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program40(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Modified since: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByLastUpdateDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Em.TextField\", {hash:{\n        \'placeholder\': (\"Pick date...\"),\n        \'valueBinding\': (\"filterByLastUpdateDate\"),\n        \'data-provide\': (\"datepicker\"),\n        \'data-date-format\': (\"MM d, yyyy\"),\n        \'data-date-clear-btn\': (\"true\"),\n        \'data-date-autoclose\': (\"true\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'valueBinding\': \"STRING\",\'data-provide\': \"STRING\",\'data-date-format\': \"STRING\",\'data-date-clear-btn\': \"STRING\",\'data-date-autoclose\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'valueBinding\': depth0,\'data-provide\': depth0,\'data-date-format\': depth0,\'data-date-clear-btn\': depth0,\'data-date-autoclose\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"	\\n			</p>\\n		\");\n      return buffer;\n      }\n\n    function program42(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<p class=\\\"filterItem\\\">\\n				Last Updater: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByLastUpdateUser\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByLastUpdateUser\"),\n        \'dataType\': (\"refsetUpdatersArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n			</p>\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"row\\\">\\n	\\n	<div class=\\\"col-md-9\\\">\\n	\\n		<h1>Browse Reference Sets</h1>\\n		<ul class=\\\"list-group checkboxList member-list refset-header\\\" style=\\\"clear:both\\\">\\n			\\n			<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-bottom:none\\\">\\n				<span class=\\\"snomed-id pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"sctId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Refset Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"sctId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"sctId\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Description</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"description\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"description\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"right\\\">(hover over anything in <span class=\\\"tooltiplink\\\">blue</span> for more info)</span>\\n			</li>\\n			\\n			<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-top:1px solid #eee\\\">\\n				<span class=\\\"language\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"languageCode\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Language</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"languageCode\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"languageCode\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"snomed-id pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"typeId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Refset Type Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"typeId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"typeId\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"snomed-id pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"moduleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Module Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"moduleId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"moduleId\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"snomed-id pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"componentTypeId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Component Type Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"componentTypeId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"componentTypeId\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"status pointer\\\" rel=\\\"tooltip\\\" title=\\\"A Refset can have status: Published, Unpublished or Inactive\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"meta.status\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Status</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"meta.status\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"meta.status\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"num-members pointer\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"totalNoOfMembers\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Member Count</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"totalNoOfMembers\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"totalNoOfMembers\", options))));\n      data.buffer.push(\"</span>\\n			</li>\\n			\\n			<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-top:1px solid #eee\\\">\\n				<span class=\\\"effective-time pointer\\\" rel=\\\"tooltip\\\" title=\\\"Latest member effective time\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"latestEffectiveTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Latest Effective Time</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"latestEffectiveTime\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"latestEffectiveTime\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"last-modified pointer\\\" rel=\\\"tooltip\\\" title=\\\"Last date refset header or any member was modified\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"modifiedDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Last update date</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"modifiedDate\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"modifiedDate\", options))));\n      data.buffer.push(\"</span>\\n				<span class=\\\"last-modified-by pointer\\\" rel=\\\"tooltip\\\" title=\\\"User that last modified this refset\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Last updated by</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"modifiedBy\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"modifiedBy\", options))));\n      data.buffer.push(\"</span>\\n			</li>\\n			\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"refsets\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</ul>\\n	\\n	</div>\\n	\\n	<div class=\\\"col-md-3\\\">\\n		<h2>Filter Refsets</h2>\\n		\\n		<select id=\\\"filterSelect\\\" class=\\\"btn btn-default btn-side-menu\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addFilter\", {hash:{\n        \'on\': (\"change\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n			<option value=\\\"0\\\">Filter refsets...</option>\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByStatusIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByTypeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByModuleIdIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByComponentTypeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByLanguageIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByEffectiveTimeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(22, program22, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"			\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByLastUpdateDateIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(24, program24, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers.unless.call(depth0, \"filterByLastUpdateUserIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</select>\\n		\\n		<p class=\\\"filterItem\\\">\\n			Filter by Refset description or SCTID: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearDescriptionFilter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">clear</a><br>\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"filterByDescription\"),\n        \'placeholder\': (\"type filter here...\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		</p>\\n\\n		<p class=\\\"filterItem\\\">\\n			Filter by Member description or Referenced Component Id: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearMemberDescriptionFilter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">clear</a><br>\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"filterByMemberDescription\"),\n        \'placeholder\': (\"type filter here...\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		</p>\\n			\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByStatusIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(28, program28, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByTypeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(30, program30, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByModuleIdIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(32, program32, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByComponentTypeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(34, program34, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByLanguageIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(36, program36, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByEffectiveTimeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(38, program38, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByLastUpdateDateIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(40, program40, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByLastUpdateUserIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(42, program42, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\\n		<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"refresh\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default btn-side-menu right\\\">Refresh Refsets</button>\\n	</div>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets/index.js");

;eval("define(\"refset/templates/refsets/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n						<label>Are you importing a published Reference Set?</label> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (true),\n        \'checked\': (\"published\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Yes \");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (false),\n        \'checked\': (\"published\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" No\\n					\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"	\\n									<td class=\\\"label pointer\\\">Refset Description</td>\\n									<td class=\\\"content\\\" colspan=\\\"3\\\">\\n										\");\n      stack1 = helpers._triageMustache.call(depth0, \"rf2FileToImport.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						  			</td>\\n								\");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n									<td class=\\\"content\\\" colspan=\\\"4\\\">\\n										<label class=\\\"control-label pointer\\\" rel=\\\"tooltip\\\" title=\\\"Reference Set description should conform to the editorial rules for Fully Specified Name, including valid semantic (hierarchy) tags.\\\">Reference Set Description</label>\\n										\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"description\"),\n        \'class\': (\"form-control\"),\n        \'required\': (true),\n        \'data-parsley-required-message\': (\"Refset Description is required\"),\n        \'data-parsely-descriptioninuse\': (\"x\"),\n        \'data-parsely-descriptioninuse-message\': (\"Description has to be unique. The description you have provided is already in use.\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\",\'required\': \"BOOLEAN\",\'data-parsley-required-message\': \"STRING\",\'data-parsely-descriptioninuse\': \"STRING\",\'data-parsely-descriptioninuse-message\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0,\'required\': depth0,\'data-parsley-required-message\': depth0,\'data-parsely-descriptioninuse\': depth0,\'data-parsely-descriptioninuse-message\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n									</td>\\n								\");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"									\\n									<td class=\\\"label\\\">SCTID</td>\\n									<td class=\\\"content\\\" colspan=3>\\n										\");\n      stack1 = helpers._triageMustache.call(depth0, \"rf2FileToImport.sctId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									</td>\\n								\");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n		    <div class=\\\"panel panel-info ember-view fade in\\\">\\n		        <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#importRF2File\\\">\\n		             <h4 class=\\\"panel-title\\\">Import RF2 File</h4>\\n		        </div>\\n		        <div class=\\\"panel-collapse collapse in\\\">\\n		            <div id=\\\"importRF2File\\\" class=\\\"panel-body member-list\\\">\\n		            	\\n						\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</div>\\n				</div>\\n			</div>	\\n\\n		\");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n			            	\");\n      stack1 = helpers[\'if\'].call(depth0, \"moreThanOneRefsetInRF2\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n								Your RF2 file contains more than one Refset. Please choose which refset you wish to import:\\n\\n								<p>\\n								\");\n      stack1 = helpers.each.call(depth0, \"mbr\", \"in\", \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</p>\\n\\n							\");\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n									<label class=\\\"notALabel\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (\"mbr\"),\n        \'name\': (\"refsetId\"),\n        \'checked\': (\"rf2FileToImport\")\n      },hashTypes:{\'value\': \"ID\",\'name\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'name\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"mbr.sctId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" | \");\n      stack1 = helpers._triageMustache.call(depth0, \"mbr.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" | \");\n      stack1 = helpers._triageMustache.call(depth0, \"mbr.concepts.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" members</label><br>\\n								\");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n								Your RF2 file contains a single Refset:\\n\\n								<p>\\n								\");\n      stack1 = helpers.each.call(depth0, \"member\", \"in\", \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(15, program15, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</p>\\n\\n							\");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"					\\n									\");\n      stack1 = helpers._triageMustache.call(depth0, \"member.uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" | \");\n      stack1 = helpers._triageMustache.call(depth0, \"member.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" | \");\n      stack1 = helpers._triageMustache.call(depth0, \"member.concepts.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" members<br>\\n								\");\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n							There are no published refsets in that file...\\n						\");\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		\\n			\");\n      stack1 = helpers.unless.call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(20, program20, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\\n		\");\n      return buffer;\n      }\n    function program20(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(21, program21, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program21(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				    <div class=\\\"panel panel-info ember-view fade in panelNoPadding\\\">\\n				        <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#importMemberList\\\">\\n				             <h4 class=\\\"panel-title\\\">Review potential members to import. \");\n      stack1 = helpers[\'if\'].call(depth0, \"filteringActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n				        </div>\\n				        <div class=\\\"panel-collapse collapse in\\\">\\n				            <div id=\\\"importMemberList\\\" class=\\\"panel-body member-list\\\">\\n				            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypesArray\", \"as\", \"moduleTypesArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(26, program26, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							</div>\\n						</div>\\n					</div>\\n				\");\n      return buffer;\n      }\n    function program22(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"Showing \");\n      stack1 = helpers._triageMustache.call(depth0, \"filteredImportMembers.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" of \");\n      stack1 = helpers._triageMustache.call(depth0, \"potentialMembersToImport.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" items matching your filter\");\n      return buffer;\n      }\n\n    function program24(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"(\");\n      stack1 = helpers._triageMustache.call(depth0, \"potentialMembersToImport.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")\");\n      return buffer;\n      }\n\n    function program26(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n									 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredImportMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (59),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"INTEGER\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(27, program27, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								  \");\n      return buffer;\n      }\n    function program27(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n											<span class=\\\"trashIcon\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleImportMember\", \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon meta.deleteConcept:undelete:delete\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n		\\n											<div class=\\\"listViewRow\\\"><span class=\\\"sctid\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>						\\n		\\n											<span class=\\\"tickIcon\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleImportMemberActive\", \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon active:tick:cross\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n		\\n											<label><span>\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Em.Select\", {hash:{\n        \'value\': (\"content.moduleId\"),\n        \'content\': (\"moduleTypesArray\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'optionLabelPath\': (\"content.label\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'content\': \"ID\",\'optionValuePath\': \"STRING\",\'optionLabelPath\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'content\': depth0,\'optionValuePath\': depth0,\'optionLabelPath\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</span></label>\\n					\\n											\");\n      stack1 = helpers.unless.call(depth0, \"meta.conceptActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(28, program28, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n										</div>\\n									  \");\n      return buffer;\n      }\n    function program28(depth0,data) {\n      \n      \n      data.buffer.push(\"<label class=\\\"inactiveMemberText\\\">Note: This component is INACTIVE</label>\");\n      }\n\n    function program30(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearImportList\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default btn-side-menu\\\">Clear import list</button>\\n		\");\n      return buffer;\n      }\n\n    function program32(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"		\\n			<h2>Importing member file</h2>\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progressBinding\': (\"importProgress\"),\n        \'type\': (\"info\"),\n        \'stripped\': (\"true\")\n      },hashTypes:{\'progressBinding\': \"STRING\",\'type\': \"STRING\",\'stripped\': \"STRING\"},hashContexts:{\'progressBinding\': depth0,\'type\': depth0,\'stripped\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\"\\n			<p><b>Please wait...</b></p>\\n		\");\n      return buffer;\n      }\n\n    function program34(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(35, program35, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program35(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				<h2>Importing failed</h2>\\n				<p><b\");\n      stack1 = helpers._triageMustache.call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</b></p>\\n			\");\n      return buffer;\n      }\n\n    function program37(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<hr>\\n			\\n			<h2>Filter concepts</h2>\\n		\\n			<p>NOTE: All listed members will be imported regardless of this filter, which will only limit what you can view, not what wll be imported.\\n			\\n			<p class=\\\"filterItem\\\">\\n				Filter by description or referenced component id: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearDescriptionFilter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">clear</a><br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"filterByDescription\"),\n        \'placeholder\': (\"type filter here...\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n			</p>\\n\\n			<p class=\\\"filterItem\\\">\\n				Show: <br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (-1),\n        \'checked\': (\"filterByInactiveConcepts\")\n      },hashTypes:{\'value\': \"INTEGER\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" All concepts<br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (false),\n        \'checked\': (\"filterByInactiveConcepts\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Inactive Concepts<br>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (true),\n        \'checked\': (\"filterByInactiveConcepts\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Active Concepts<br>\\n			</p>\\n			\\n		\");\n      return buffer;\n      }\n\n    function program39(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"		\\n			<hr>\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-danger left\\\">Clear Form</button>\\n			<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"initRefsetImport\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-primary right\\\">Create Refset</button>\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Create New Reference Set</h1>\\n\\n<div class=\\\"row\\\">\\n\\n	<div class=\\\"col-md-9\\\">\\n\\n		<div class=\\\"panel panel-info ember-view fade in\\\">\\n		    <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#refsetHeader\\\">\\n		         <h4 class=\\\"panel-title\\\">Reference Set Header</h4>\\n		    </div>\\n		    <div class=\\\"panel-collapse collapse in\\\">\\n		        <div id=\\\"refsetHeader\\\" class=\\\"panel-body\\\">\\n\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRF2Import\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n					<form id=\\\"refset-header\\\" class=\\\"refset-header\\\">\\n\\n						<table width=\\\"100%\\\">\\n\\n							<tr>\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRF2Import\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							</tr>\\n\\n							<tr>\\n								<td class=\\\"label\\\">Language</td>\\n								<td class=\\\"content\\\">\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'valueBinding\': (\"languageCode\"),\n        \'dataType\': (\"languagesArray\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'valueBinding\': \"STRING\",\'dataType\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'valueBinding\': depth0,\'dataType\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n					  			</td>\\n							</tr>\\n\\n							<tr>\\n								<td class=\\\"label\\\">Refset Type</td>\\n								<td class=\\\"content\\\">\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'valueBinding\': (\"typeId\"),\n        \'dataType\': (\"refsetTypesArray\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'valueBinding\': \"STRING\",\'dataType\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'valueBinding\': depth0,\'dataType\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n								</td>\\n								<td class=\\\"label\\\">Refset Members Type</td>\\n								<td class=\\\"content\\\">\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'valueBinding\': (\"componentTypeId\"),\n        \'dataType\': (\"componentTypesArray\")\n      },hashTypes:{\'valueBinding\': \"STRING\",\'dataType\': \"STRING\"},hashContexts:{\'valueBinding\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n					  			</td>\\n							</tr>\\n\\n							<tr>\\n								<td class=\\\"label\\\"><span class=\\\"pointer\\\" rel=\\\"tooltip\\\" title=\\\"Planned publish member effective time\\\">Planned Published Date</span></td>\\n								<td class=\\\"content\\\">\\n									\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Em.TextField\", {hash:{\n        \'placeholder\': (\"enter date...\"),\n        \'valueBinding\': (\"meta.expectedReleaseDateInput\"),\n        \'data-provide\': (\"datepicker\"),\n        \'data-date-format\': (\"yyyymmdd\"),\n        \'data-date-clear-btn\': (\"true\"),\n        \'data-date-autoclose\': (\"true\"),\n        \'class\': (\"form-control\"),\n        \'required\': (\"true\"),\n        \'data-parsley-required-message\': (\"Planned Publish Date is required\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'valueBinding\': \"STRING\",\'data-provide\': \"STRING\",\'data-date-format\': \"STRING\",\'data-date-clear-btn\': \"STRING\",\'data-date-autoclose\': \"STRING\",\'class\': \"STRING\",\'required\': \"STRING\",\'data-parsley-required-message\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'valueBinding\': depth0,\'data-provide\': depth0,\'data-date-format\': depth0,\'data-date-clear-btn\': depth0,\'data-date-autoclose\': depth0,\'class\': depth0,\'required\': depth0,\'data-parsley-required-message\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"								\\n								</td>\\n								<td class=\\\"label\\\">Module</td><td class=\\\"content\\\">\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'valueBinding\': (\"moduleId\"),\n        \'dataType\': (\"moduleTypesArray\"),\n        \'id\': (\"newRefsetModuleId\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'valueBinding\': \"STRING\",\'dataType\': \"STRING\",\'id\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'valueBinding\': depth0,\'dataType\': depth0,\'id\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n					  			</td>\\n							</tr>\\n							<tr>\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRF2Import\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							</tr>\\n\\n						</table>\\n					</form>\\n				</div>\\n			</div>\\n		</div>\\n\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"isRF2Import\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(19, program19, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</div>\\n							\\n						\\n	<div class=\\\"col-md-3\\\">	\\n\\n		<!-- This requires vendor/my_utilities/drag_drop_file_upload.js --->\\n		<h2>Import Members <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showImportHelp\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"class=\\\"right icon info pointer\\\"></a></h2>\\n		<div id=\\\"fileUploadDropZone\\\" class=\\\"fileUploadDropZone\\\"><span id=\\\"droptext\\\">Drag an RF2 file, a file of component IDs or an individual component from the Snomed CT browser here.<br><br>Alternatively use the file requestor below to choose a file.</span></div>\\n		<br><input type=\\\"file\\\" id=\\\"refsetUploadFileInput\\\" />\\n		\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(30, program30, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"getConceptDataInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(37, program37, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\\n		\");\n      stack1 = helpers.unless.call(depth0, \"getConceptDataInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(39, program39, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\\n	</div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets/new.js");

;eval("define(\"refset/templates/refsets/refset\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"unauthorised\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"notFound\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"commsError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n		You need to <a href=\\\"#\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showLoginForm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">login</a> to access this Reference Set\\n	\");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		We cannot find the Reference Set you are looking for\\n	\");\n      }\n\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		We were unable to retrieve the Reference Set from the server\\n	\");\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n	<div class=\\\"row\\\">\\n		\\n		<div class=\\\"col-md-9\\\">\\n			\\n	    <div class=\\\"panel panel-info ember-view fade in panelNoPadding refset-header\\\">\\n	        <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#collapseOne\\\">\\n	             <h4 class=\\\"panel-title\\\">Reference Set Header</h4>\\n	        </div>\\n	        <div class=\\\"panel-collapse collapse in\\\">\\n	            <div id=\\\"collapseOne\\\" class=\\\"panel-body\\\">\\n	   				<form class=\\\"refset-header\\\">\\n						\\n						<table width=\\\"100%\\\">\\n							\\n							<tr class=\\\"hr\\\"><td width=\\\"100\\\"></td><td width=\\\"300\\\"><td width=\\\"100\\\"></td>\\n							\\n							<tr>\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							</tr>\\n\\n							<tr>\\n								<td class=\\\"label\\\">Refset Id</td><td class=\\\"content\\\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n								<td class=\\\"label\\\">UUID</td><td class=\\\"content\\\" colspan=2>\");\n      stack1 = helpers._triageMustache.call(depth0, \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							</tr>\\n		\\n							<tr>\\n								<td class=\\\"label\\\">Refset Type Id</td><td class=\\\"content\\\">\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(20, program20, data),fn:self.program(18, program18, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</td>\\n\\n								<td class=\\\"label\\\" rel=\\\"tooltip\\\" title=\\\"Latest member effective time\\\"><span class=\\\"pointer\\\">Latest Effective Time</span></td><td class=\\\"content\\\" colspan=2>				\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"latestEffectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"latestEffectiveTime\", options))));\n      data.buffer.push(\"\\n								</td>\\n							</tr>\\n\\n							<tr>\\n								<td class=\\\"label\\\">Refset Member Type Id</td><td class=\\\"content\\\">\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"		\\n								</td>\\n								<td class=\\\"label\\\" rel=\\\"tooltip\\\" title=\\\"Earliest member effective time\\\"><span class=\\\"pointer\\\">Earliest Effective Time</span></td><td class=\\\"content\\\" colspan=2>				\\n									\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"earliestEffectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"earliestEffectiveTime\", options))));\n      data.buffer.push(\"\\n								</td>\\n							</tr>\\n							\\n							<tr>\\n								<td class=\\\"label\\\">Module Id</td><td class=\\\"content\\\">\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(34, program34, data),fn:self.program(32, program32, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</td>\\n								<td class=\\\"label\\\" rel=\\\"tooltip\\\" title=\\\"Planned publish member effective time\\\"><span class=\\\"pointer\\\">Planned Publish Date</span></td><td class=\\\"content\\\" colspan=2>				\\n									not available in data yet...\\n								</td>\\n							</tr>\\n\\n							<tr>\\n								<td colspan=2></td>\\n								<td class=\\\"label\\\">Language Code</td><td class=\\\"content\\\">\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(41, program41, data),fn:self.program(39, program39, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</td>\\n							</tr>\\n		\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"showMetaData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(46, program46, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							\\n						</table>\\n					</form>\\n					</div>\\n				</div>\\n			</div>\\n\\n			\");\n      stack1 = helpers.unless.call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(48, program48, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\\n		    <div class=\\\"panel panel-info ember-view fade in panelNoPadding\\\">\\n		        <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#collapseMembers\\\">\\n		             <h4 class=\\\"panel-title\\\">\\n		             	\");\n      stack1 = helpers[\'if\'].call(depth0, \"meta\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(54, program54, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					 </h4>\\n		        </div>\\n		        <div class=\\\"panel-collapse collapse in\\\">\\n		            <div id=\\\"collapseMembers\\\" class=\\\"panel-body\\\">\\n						<ul class=\\\"list-group checkboxList member-list\\\">\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"filteredMembers\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(84, program84, data),fn:self.program(62, program62, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						</ul>\\n					</div>\\n				</div>\\n			</div>\\n		</div>\\n		\\n		<div class=\\\"col-md-3\\\">\\n			\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"meta\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(92, program92, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(139, program139, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\\n			<hr>\\n			\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"meta\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(141, program141, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n	</div>\\n\\n\");\n      return buffer;\n      }\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n									<td class=\\\"label\\\">Description</td>\\n									<td class=\\\"content title\\\" colspan=\\\"4\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n								\");\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(14, program14, data),fn:self.program(12, program12, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								\");\n      return buffer;\n      }\n    function program12(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n										<td class=\\\"content\\\" colspan=\\\"5\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"description\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"</td>\\n									\");\n      return buffer;\n      }\n\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										<td class=\\\"label\\\">Description</td>\\n										<td class=\\\"content title\\\" colspan=\\\"4\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n									\");\n      return buffer;\n      }\n\n    function program16(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"sctId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program18(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n										\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"type-id\", \"typeId\", \"refsetTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"type-id\", \"typeId\", \"refsetTypes\", options))));\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n\n    function program20(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(23, program23, data),fn:self.program(21, program21, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n    function program21(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"typeId\"),\n        \'dataType\': (\"refsetTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program23(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"type-id\", \"typeId\", \"refsetTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"type-id\", \"typeId\", \"refsetTypes\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program25(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n 										\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"component-type-id\", \"componentTypeId\", \"componentTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"component-type-id\", \"componentTypeId\", \"componentTypes\", options))));\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n\n    function program27(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(30, program30, data),fn:self.program(28, program28, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"																			\\n							  		\");\n      return buffer;\n      }\n    function program28(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"componentTypeId\"),\n        \'dataType\': (\"componentTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program30(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"component-type-id\", \"componentTypeId\", \"componentTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"component-type-id\", \"componentTypeId\", \"componentTypes\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program32(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n										<input type=hidden id=\\\"newRefsetModuleId\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"moduleId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n										\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"module-id\", \"moduleId\", \"moduleTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"module-id\", \"moduleId\", \"moduleTypes\", options))));\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n\n    function program34(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(37, program37, data),fn:self.program(35, program35, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"																	\\n									\");\n      return buffer;\n      }\n    function program35(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"moduleId\"),\n        \'dataType\': (\"moduleTypesArray\"),\n        \'id\': (\"newRefsetModuleId\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\",\'id\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0,\'id\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program37(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											<input type=hidden id=\\\"newRefsetModuleId\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'value\': (\"moduleId\")\n      },hashTypes:{\'value\': \"STRING\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"module-id\", \"moduleId\", \"moduleTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"module-id\", \"moduleId\", \"moduleTypes\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program39(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n										\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"language\", \"languageCode\", \"languageTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"language\", \"languageCode\", \"languageTypes\", options))));\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n\n    function program41(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(44, program44, data),fn:self.program(42, program42, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n    function program42(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"languageCode\"),\n        \'dataType\': (\"languagesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program44(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n											\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"language\", \"languageCode\", \"languageTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"language\", \"languageCode\", \"languageTypes\", options))));\n      data.buffer.push(\"\\n										\");\n      return buffer;\n      }\n\n    function program46(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n							<tr class=\\\"hr\\\"><td colspan=5><hr></td></tr>\\n		\\n							<tr>\\n								<td class=\\\"label\\\">Last Updated</td><td class=\\\"content\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-time-format\'] || (depth0 && depth0[\'date-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modifiedDate\", options) : helperMissing.call(depth0, \"date-time-format\", \"modifiedDate\", options))));\n      data.buffer.push(\"</td>\\n								<td class=\\\"label\\\">Last Updated by</td><td class=\\\"content\\\" colspan=2>\");\n      stack1 = helpers._triageMustache.call(depth0, \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n							</tr>\\n							\");\n      return buffer;\n      }\n\n    function program48(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(49, program49, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program49(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				    <div class=\\\"panel panel-info ember-view fade in panelNoPadding\\\">\\n				        <div class=\\\"panel-heading accordion-toggle\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordion\\\" data-target=\\\"#importMemberList\\\">\\n				             <h4 class=\\\"panel-title\\\">Review potential members to import(\");\n      stack1 = helpers._triageMustache.call(depth0, \"potentialMembersToImport.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")</h4>\\n				        </div>\\n				        <div class=\\\"panel-collapse collapse in\\\">\\n				            <div id=\\\"importMemberList\\\" class=\\\"panel-body member-list\\\">\\n				            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypesArray\", \"as\", \"moduleTypesArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(50, program50, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							</div>\\n						</div>\\n					</div>\\n				\");\n      return buffer;\n      }\n    function program50(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n									 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredImportMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (59),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"INTEGER\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(51, program51, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								  \");\n      return buffer;\n      }\n    function program51(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n											<span class=\\\"trashIcon\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleImportMember\", \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon meta.deleteConcept:undelete:delete\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n		\\n											<div class=\\\"listViewRow\\\"><span class=\\\"sctid\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>						\\n		\\n											<span class=\\\"tickIcon\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleImportMemberActive\", \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon active:tick:cross\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n		\\n											<label><span>\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Em.Select\", {hash:{\n        \'value\': (\"content.moduleId\"),\n        \'content\': (\"moduleTypesArray\"),\n        \'optionValuePath\': (\"content.id\"),\n        \'optionLabelPath\': (\"content.label\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'content\': \"ID\",\'optionValuePath\': \"STRING\",\'optionLabelPath\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'content\': depth0,\'optionValuePath\': depth0,\'optionLabelPath\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</span></label>\\n					\\n											\");\n      stack1 = helpers.unless.call(depth0, \"meta.conceptActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(52, program52, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n										</div>\\n									  \");\n      return buffer;\n      }\n    function program52(depth0,data) {\n      \n      \n      data.buffer.push(\"<label class=\\\"inactiveMemberText\\\">Note: This component is INACTIVE</label>\");\n      }\n\n    function program54(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"filteringActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(58, program58, data),fn:self.program(55, program55, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							 \\n							\");\n      stack1 = helpers.unless.call(depth0, \"meta.allMembersLoaded\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(60, program60, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n    function program55(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n								Showing \");\n      stack1 = helpers._triageMustache.call(depth0, \"filteredMembers.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" out of \");\n      stack1 = helpers._triageMustache.call(depth0, \"members.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers.unless.call(depth0, \"meta.allMembersLoaded\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(56, program56, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" members matching your filter.\\n							\");\n      return buffer;\n      }\n    function program56(depth0,data) {\n      \n      \n      data.buffer.push(\"retrieved\");\n      }\n\n    function program58(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n								\");\n      stack1 = helpers._triageMustache.call(depth0, \"totalNoOfMembers\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Members.\\n							\");\n      return buffer;\n      }\n\n    function program60(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"(Retrieved \");\n      stack1 = helpers._triageMustache.call(depth0, \"members.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" of \");\n      stack1 = helpers._triageMustache.call(depth0, \"totalNoOfMembers\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\")\");\n      return buffer;\n      }\n\n    function program62(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n								<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-bottom:none\\\">\\n									<span class=\\\"active\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Referenced Component Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"referencedComponentId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"referencedComponentId\", options))));\n      data.buffer.push(\"</span>\\n									<span><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Description</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"description\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"description\", options))));\n      data.buffer.push(\"</span>\\n									<span class=\\\"right\\\">(hover over anything in <span class=\\\"tooltiplink\\\">blue</span> for more info)</span>\\n								</li>\\n\\n								<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-top:none\\\">\\n									<span class=\\\"active pointer\\\" rel=\\\"tooltip\\\" title=\\\"Member (not underlying component) status (active/inactive)\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"active\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Status</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"active\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"active\", options))));\n      data.buffer.push(\"</span>\\n									<span class=\\\"effective-time pointer\\\" rel=\\\"tooltip\\\" title=\\\"Latest published effective time\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"latestEffectiveTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Effective Time</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"latestEffectiveTime\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"latestEffectiveTime\", options))));\n      data.buffer.push(\"</span>\\n									<span class=\\\"module-id\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"moduleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Module Id</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"moduleId\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"moduleId\", options))));\n      data.buffer.push(\"</span>\\n									<span>Member Id</span>\\n								</li>\\n									\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"showMetaData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(75, program75, data),fn:self.program(63, program63, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							\\n							\");\n      return buffer;\n      }\n    function program63(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n								<li class=\\\"list-group-item member-list-header\\\" style=\\\"border-top:1px solid #eee\\\">\\n									<span class=\\\"last-modified pointer\\\" rel=\\\"tooltip\\\" title=\\\"Last date this member was modified\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"modifiedDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Last update date</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"modifiedDate\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"modifiedDate\", options))));\n      data.buffer.push(\"</span>\\n									<span class=\\\"last-modified-by pointer\\\" rel=\\\"tooltip\\\" title=\\\"User that last modified this member\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setSortCriteria\", \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"pointer\\\">Last updated by</a> \");\n      data.buffer.push(escapeExpression((helper = helpers[\'sort-icon\'] || (depth0 && depth0[\'sort-icon\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"STRING\"],data:data},helper ? helper.call(depth0, \"sortBy\", \"sortOrder\", \"modifiedBy\", options) : helperMissing.call(depth0, \"sort-icon\", \"sortBy\", \"sortOrder\", \"modifiedBy\", options))));\n      data.buffer.push(\"</span>\\n								</li>\\n								\\n								\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(68, program68, data),fn:self.program(64, program64, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								\");\n      return buffer;\n      }\n    function program64(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypesArray\", \"as\", \"moduleTypesArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(65, program65, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									  \\n									\");\n      return buffer;\n      }\n    function program65(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n										 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (\"memberRowHeight\"),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"ID\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(66, program66, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									  \");\n      return buffer;\n      }\n    function program66(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n											<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n												<span class=\\\"right\\\"><a class=\\\"pointer icon info\\\"></a></span>\\n												<span class=\\\"right\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleDeleteMember\", \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon meta.deleteConcept:undelete:delete\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n\\n												<div class=\\\"memberRowWrapperEdit\\\"><span class=\\\"active\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"description\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>\\n		\\n												<span class=\\\"left active\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleMemberActive\", \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon active:tick:cross\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n	\\n												<span class=\\\"effective-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"effectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"effectiveTime\", options))));\n      data.buffer.push(\"</span>\\n												<span>\\n													\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"content.moduleId\"),\n        \'dataType\': (\"moduleTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n									 			</span>\\n\\n												<hr>				\\n												<span class=\\\"last-modified\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-time-format\'] || (depth0 && depth0[\'date-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modifiedDate\", options) : helperMissing.call(depth0, \"date-time-format\", \"modifiedDate\", options))));\n      data.buffer.push(\"</span>\\n												<span class=\\\"last-modified-by\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n											</div>\\n										  \");\n      return buffer;\n      }\n\n    function program68(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n									\\n						            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypes\", \"as\", \"moduleTypes\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(69, program69, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"									\\n									\");\n      return buffer;\n      }\n    function program69(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n											 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (\"memberRowHeight\"),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"ID\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(70, program70, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n										  \");\n      return buffer;\n      }\n    function program70(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n												<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n						\\n													<div class=\\\"memberRowWrapper\\\"><span class=\\\"active\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"description\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>\\n			\\n													<div class=\\\"memberRowWrapper\\\">\\n														<span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":active active::inactiveMemberText\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(73, program73, data),fn:self.program(71, program71, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n														<span class=\\\"effective-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"effectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"effectiveTime\", options))));\n      data.buffer.push(\"</span>\\n														<span class=\\\"module-id\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"module-id\", \"moduleId\", \"moduleTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"module-id\", \"moduleId\", \"moduleTypes\", options))));\n      data.buffer.push(\"</span>\\n														<span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n													</div>\\n													\\n													<hr>				\\n													<span class=\\\"last-modified\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'date-time-format\'] || (depth0 && depth0[\'date-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"modifiedDate\", options) : helperMissing.call(depth0, \"date-time-format\", \"modifiedDate\", options))));\n      data.buffer.push(\"</span>\\n													<span class=\\\"last-modified-by\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"modifiedBy\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n												</div>\\n											  \");\n      return buffer;\n      }\n    function program71(depth0,data) {\n      \n      \n      data.buffer.push(\"ACTIVE\");\n      }\n\n    function program73(depth0,data) {\n      \n      \n      data.buffer.push(\"INACTIVE\");\n      }\n\n    function program75(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(80, program80, data),fn:self.program(76, program76, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								\");\n      return buffer;\n      }\n    function program76(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypesArray\", \"as\", \"moduleTypesArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(77, program77, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n										  \\n										\");\n      return buffer;\n      }\n    function program77(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n											 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (\"memberRowHeight\"),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"ID\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(78, program78, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n										  \");\n      return buffer;\n      }\n    function program78(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n												<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n													<span class=\\\"right\\\"><a class=\\\"pointer icon info\\\"></a></span>\\n													<span class=\\\"right\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleDeleteMember\", \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon meta.deleteConcept:undelete:delete\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n	[\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.conceptActive\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"]\\n	[\");\n      stack1 = helpers._triageMustache.call(depth0, \"meta.deleteConcept\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"]\\n													<div class=\\\"memberRowWrapperEdit\\\"><span class=\\\"active\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"description\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>\\n			\\n													<span class=\\\"left active\\\"><a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleMemberActive\", \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon active:tick:cross\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\\"></a></span>\\n		\\n													<span class=\\\"effective-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"effectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"effectiveTime\", options))));\n      data.buffer.push(\"</span>\\n													<span>\\n														\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"content.moduleId\"),\n        \'dataType\': (\"moduleTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n										 			</span>\\n													<span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n												</div>\\n											  \");\n      return buffer;\n      }\n\n    function program80(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\\n							            	\");\n      stack1 = helpers[\'with\'].call(depth0, \"controller.moduleTypes\", \"as\", \"moduleTypes\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(81, program81, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"									\\n										\");\n      return buffer;\n      }\n    function program81(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n												 \");\n      stack1 = (helper = helpers.collection || (depth0 && depth0.collection),options={hash:{\n        \'contentBinding\': (\"filteredMembers\"),\n        \'height\': (400),\n        \'rowHeight\': (\"memberRowHeight\"),\n        \'width\': (\"100%\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'height\': \"INTEGER\",\'rowHeight\': \"ID\",\'width\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'height\': depth0,\'rowHeight\': depth0,\'width\': depth0},inverse:self.noop,fn:self.program(82, program82, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"Ember.ListView\", options) : helperMissing.call(depth0, \"collection\", \"Ember.ListView\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n											  \");\n      return buffer;\n      }\n    function program82(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n													<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":list-group-item :member-list-item meta.conceptActive::inactiveConcept meta.deleteConcept:deleteConcept\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n							\\n														<div class=\\\"memberRowWrapper\\\"><span class=\\\"active\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"referencedComponentId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> | <span class=\\\"description pointer\\\" rel=\\\"tooltip\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'title\': (\"description\")\n      },hashTypes:{\'title\': \"STRING\"},hashContexts:{\'title\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span> |</div>\\n				\\n														<div class=\\\"memberRowWrapper\\\">\\n															<span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":active active::inactiveMemberText\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(73, program73, data),fn:self.program(71, program71, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n															<span class=\\\"effective-time\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'effective-time-format\'] || (depth0 && depth0[\'effective-time-format\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"effectiveTime\", options) : helperMissing.call(depth0, \"effective-time-format\", \"effectiveTime\", options))));\n      data.buffer.push(\"</span>\\n															<span class=\\\"module-id\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers[\'refset-list-item-span\'] || (depth0 && depth0[\'refset-list-item-span\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0,depth0],types:[\"STRING\",\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"module-id\", \"moduleId\", \"moduleTypes\", options) : helperMissing.call(depth0, \"refset-list-item-span\", \"module-id\", \"moduleId\", \"moduleTypes\", options))));\n      data.buffer.push(\"</span>\\n															<span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"uuid\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n														</div>\\n													</div>\\n												  \");\n      return buffer;\n      }\n\n    function program84(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n								<li class=\'list-group-item\'>\\n									\");\n      stack1 = helpers[\'if\'].call(depth0, \"totalNoOfMembers\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(90, program90, data),fn:self.program(85, program85, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n								</li>\\n							\");\n      return buffer;\n      }\n    function program85(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n										\");\n      stack1 = helpers[\'if\'].call(depth0, \"meta.allMembersLoaded\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(88, program88, data),fn:self.program(86, program86, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n									\");\n      return buffer;\n      }\n    function program86(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n											No matches found for your filter.\\n										\");\n      }\n\n    function program88(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n											Still loading members. Please wait...\\n										\");\n      }\n\n    function program90(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n										Your refset does not have any members yet...\\n									\");\n      }\n\n    function program92(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(105, program105, data),fn:self.program(93, program93, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				<hr>\\n			\\n				<select id=\\\"filterSelect\\\" class=\\\"btn btn-default btn-side-menu\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addFilter\", {hash:{\n        \'on\': (\"change\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n					<option value=\\\"0\\\">Filter members...</option>\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByInactiveConceptsIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(108, program108, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByStatusIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(110, program110, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByModuleIdIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(112, program112, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByEffectiveTimeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(114, program114, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"model.published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(116, program116, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"										\\n					\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByLastUpdateDateIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(119, program119, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers.unless.call(depth0, \"filterByLastUpdateUserIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(121, program121, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				</select>\\n\\n				<p class=\\\"filterItem\\\">\\n					Filter by description or referenced component id: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearDescriptionFilter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">clear</a><br>\\n					\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"filterByDescription\"),\n        \'placeholder\': (\"type filter here...\"),\n        \'class\': (\"form-control\"),\n        \'action\': (\"setSortToBestMatch\"),\n        \'on\': (\"key-press\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\",\'action\': \"STRING\",\'on\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'placeholder\': depth0,\'class\': depth0,\'action\': depth0,\'on\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n				</p>\\n\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByInactiveConceptsIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(123, program123, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByStatusIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(125, program125, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByModuleIdIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(127, program127, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByEffectiveTimeIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(129, program129, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByPublishedMembersIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(132, program132, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"	\\n	\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByLastUpdateDateIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(134, program134, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"filterByLastUpdateUserIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(136, program136, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program93(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					<button class=\\\"btn btn-default btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleMetaData\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"showMetaData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(96, program96, data),fn:self.program(94, program94, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Metadata</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon showHeaderMetaData:hideinfo:info\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n\\n					<hr>\\n\\n					<!-- This requires vendore/my_utilities/drag_drop_file_upload.js --->\\n					<h2>Import Members <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"showImportHelp\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"class=\\\"right icon info pointer\\\"></a></h2>\\n					<div id=\\\"fileUploadDropZone\\\" class=\\\"fileUploadDropZone\\\"><span id=\\\"droptext\\\">Drag a file of component IDs or an individual component from the Snomed CT browser here.<br><br>Alternatively use the file requestor below to choose a file.</span></div>\\n					<br><input type=\\\"file\\\" id=\\\"refsetUploadFileInput\\\" />\\n					\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"potentialMembersToImport\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(98, program98, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"getConceptDataInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(102, program102, data),fn:self.program(100, program100, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\\n				\");\n      return buffer;\n      }\n    function program94(depth0,data) {\n      \n      \n      data.buffer.push(\"Hide\");\n      }\n\n    function program96(depth0,data) {\n      \n      \n      data.buffer.push(\"Show\");\n      }\n\n    function program98(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n						<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearImportList\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-default btn-side-menu\\\">Clear import list</button>\\n					\");\n      return buffer;\n      }\n\n    function program100(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"		\\n						<h2>Importing member file</h2>\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-progress\'] || (depth0 && depth0[\'bs-progress\']),options={hash:{\n        \'progressBinding\': (\"importProgress\"),\n        \'type\': (\"info\"),\n        \'stripped\': (\"true\")\n      },hashTypes:{\'progressBinding\': \"STRING\",\'type\': \"STRING\",\'stripped\': \"STRING\"},hashContexts:{\'progressBinding\': depth0,\'type\': depth0,\'stripped\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-progress\", options))));\n      data.buffer.push(\"\\n						<p><b>Please wait...</b></p>\\n					\");\n      return buffer;\n      }\n\n    function program102(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						\");\n      stack1 = helpers[\'if\'].call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(103, program103, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n					\");\n      return buffer;\n      }\n    function program103(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n							<h2>Importing failed</h2>\\n							<p><b\");\n      stack1 = helpers._triageMustache.call(depth0, \"importError\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</b></p>\\n						\");\n      return buffer;\n      }\n\n    function program105(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(106, program106, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      return buffer;\n      }\n    function program106(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						<button class=\\\"btn btn-default btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon showHeaderMetaData:hideinfo:info\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleMetaData\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">\");\n      stack1 = helpers[\'if\'].call(depth0, \"showMetaData\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(96, program96, data),fn:self.program(94, program94, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Metadata</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon showHeaderMetaData:hideinfo:info\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n						<button class=\\\"btn btn-default btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"exportRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">Export Refset Pseudo Delta RF2</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon :link\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n					\");\n      return buffer;\n      }\n\n    function program108(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByInactiveConcepts\\\">Filter inactive components (not working yet)</option>\");\n      }\n\n    function program110(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByStatus\\\">Filter by active status</option>\");\n      }\n\n    function program112(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByModuleId\\\">Filter by module type</option>\");\n      }\n\n    function program114(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByEffectiveTime\\\">Filter by effective time</option>\");\n      }\n\n    function program116(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						\");\n      stack1 = helpers.unless.call(depth0, \"filterByPublishedMembersIsActive\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(117, program117, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      return buffer;\n      }\n    function program117(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByPublishedMembers\\\">Filter modified members (not working yet)</option>\");\n      }\n\n    function program119(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByLastUpdateDate\\\">Filter by last update date</option>\");\n      }\n\n    function program121(depth0,data) {\n      \n      \n      data.buffer.push(\"<option value=\\\"filterByLastUpdateUser\\\">Filter by last updater</option>\");\n      }\n\n    function program123(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Active members with inactive concepts: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByInactiveConcepts\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n					</p>\\n				\");\n      return buffer;\n      }\n\n    function program125(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Status: \");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (true),\n        \'checked\': (\"filterByStatus\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Active \");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (false),\n        \'checked\': (\"filterByStatus\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Inactive <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByStatus\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n					</p>\\n				\");\n      return buffer;\n      }\n\n    function program127(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Module Id: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByModuleId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByModuleId\"),\n        \'dataType\': (\"moduleTypesArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n					</p>\\n				\");\n      return buffer;\n      }\n\n    function program129(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Effective Time: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByEffectiveTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n						\");\n      stack1 = helpers[\'with\'].call(depth0, \"effectiveTimeArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(130, program130, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</p>\\n				\");\n      return buffer;\n      }\n    function program130(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n							\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByEffectiveTime\"),\n        \'dataType\': (\"effectiveTimeArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n\n    function program132(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Modified members:<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByPublishedMembers\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (true),\n        \'checked\': (\"filterByPublishedMembers\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Published \");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (false),\n        \'checked\': (\"filterByPublishedMembers\")\n      },hashTypes:{\'value\': \"BOOLEAN\",\'checked\': \"ID\"},hashContexts:{\'value\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\" Unpublished/Modified \\n					</p>				\\n				\");\n      return buffer;\n      }\n\n    function program134(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Modified since: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByLastUpdateDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n						\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Em.TextField\", {hash:{\n        \'placeholder\': (\"Pick date...\"),\n        \'valueBinding\': (\"filterByLastUpdateDate\"),\n        \'data-provide\': (\"datepicker\"),\n        \'data-date-format\': (\"MM d, yyyy\"),\n        \'data-date-clear-btn\': (\"true\"),\n        \'data-date-autoclose\': (\"true\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'placeholder\': \"STRING\",\'valueBinding\': \"STRING\",\'data-provide\': \"STRING\",\'data-date-format\': \"STRING\",\'data-date-clear-btn\': \"STRING\",\'data-date-autoclose\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'placeholder\': depth0,\'valueBinding\': depth0,\'data-provide\': depth0,\'data-date-format\': depth0,\'data-date-clear-btn\': depth0,\'data-date-autoclose\': depth0,\'class\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"	\\n					</p>\\n				\");\n      return buffer;\n      }\n\n    function program136(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					<p class=\\\"filterItem\\\">\\n						Last Updater: <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"removeFilter\", \"filterByLastUpdateUser\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"right pointer\\\">remove</a><br>\\n						\");\n      stack1 = helpers[\'with\'].call(depth0, \"moduleUpdatersArray\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(137, program137, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</p>\\n				\");\n      return buffer;\n      }\n    function program137(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n							\");\n      data.buffer.push(escapeExpression((helper = helpers[\'snomed-data-dropdown\'] || (depth0 && depth0[\'snomed-data-dropdown\']),options={hash:{\n        \'value\': (\"filterByLastUpdateUser\"),\n        \'dataType\': (\"moduleUpdatersArray\")\n      },hashTypes:{\'value\': \"ID\",\'dataType\': \"STRING\"},hashContexts:{\'value\': depth0,\'dataType\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"snomed-data-dropdown\", options))));\n      data.buffer.push(\"\\n						\");\n      return buffer;\n      }\n\n    function program139(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n				<p><b>NOTE:</b> Filters apply to both existing member list and import member list</p>\\n			\");\n      }\n\n    function program141(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			\\n				\");\n      stack1 = helpers[\'if\'].call(depth0, \"editMode\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(145, program145, data),fn:self.program(142, program142, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n    function program142(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"									\\n					\");\n      stack1 = helpers.unless.call(depth0, \"getConceptDataInProgress\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(143, program143, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      return buffer;\n      }\n    function program143(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"		\\n						<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"cancelEdits\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-danger left\\\">Discard Changes</button>\\n						<button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"updateRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-success right\\\">Save changes</button>\\n					\");\n      return buffer;\n      }\n\n    function program145(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n					\");\n      stack1 = helpers[\'if\'].call(depth0, \"user.token\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(146, program146, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n				\");\n      return buffer;\n      }\n    function program146(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						\");\n      stack1 = helpers[\'if\'].call(depth0, \"active\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(150, program150, data),fn:self.program(147, program147, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      return buffer;\n      }\n    function program147(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n							<button class=\\\"btn btn-primary btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"toggleEditMode\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">Edit Refset</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon :link\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n\\n							\");\n      stack1 = helpers[\'if\'].call(depth0, \"published\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(148, program148, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n							\\n							<button class=\\\"btn btn-danger btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"deleteRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">Delete Refset</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon :undelete\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n						\");\n      return buffer;\n      }\n    function program148(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n								<button class=\\\"btn btn-warning btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"inactivateRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">Inactivate Refset</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon :link\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>\\n							\");\n      return buffer;\n      }\n\n    function program150(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n							<button class=\\\"btn btn-warning btn-side-menu icon-btn\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"activateRefset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"><span class=\\\"btn-text\\\">Activate Refset</span><span \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":pointer :icon :link\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"></span></button>					\\n						\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>View Reference Set</h1>\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"error\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/refsets/refset.js");

;eval("define(\"refset/templates/registration\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div id=\\\"registrationForm\\\" class=\\\"RefsetPanel\\\">\\n	<form>		\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"regname\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Your Name\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"regorg\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Your organisation\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"reguser\"),\n        \'type\': (\"text\"),\n        \'placeholder\': (\"Already registered with for other IHTSDO tools? Enter your existing login ID here...\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n		\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"regnotes\"),\n        \'placeholder\': (\"Please tell us why you would like access to the Reference Set Management Service\"),\n        \'class\': (\"form-control\")\n      },hashTypes:{\'value\': \"ID\",\'placeholder\': \"STRING\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'placeholder\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n	</form>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/registration.js");

;eval("define(\"refset/templates/site-map\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" (templates/side-map.hbs)\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/site-map.js");

;eval("define(\"refset/templates/terms-and-conditions\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"model\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      \n    });\n  });//# sourceURL=refset/templates/terms-and-conditions.js");

;eval("define(\"refset/templates/toggle-switch\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<label for=\\\"\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"view.checkBoxId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"view.label\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    <input id=\\\"\");\n      data.buffer.push(escapeExpression(helpers.unbound.call(depth0, \"view.checkBoxId\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\\" type=\\\"checkbox\\\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'checked\': (\"view.checked\")\n      },hashTypes:{\'checked\': \"STRING\"},hashContexts:{\'checked\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n    <div class=\\\"switch\\\"></div>\\n</label>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=refset/templates/toggle-switch.js");

;eval("define(\"refset/tests/adapters/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/login.js should pass jshint\', function() { \n      ok(true, \'adapters/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/login.jshint.js");

;eval("define(\"refset/tests/adapters/refsets.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/refsets.js should pass jshint\', function() { \n      ok(true, \'adapters/refsets.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/refsets.jshint.js");

;eval("define(\"refset/tests/adapters/simple-members.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/simple-members.js should pass jshint\', function() { \n      ok(true, \'adapters/simple-members.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/simple-members.jshint.js");

;eval("define(\"refset/tests/adapters/type-lookups.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/type-lookups.js should pass jshint\', function() { \n      ok(true, \'adapters/type-lookups.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/adapters/type-lookups.jshint.js");

;eval("define(\"refset/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/app.jshint.js");

;eval("define(\"refset/tests/components/snomed-data-dropdown.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - components\');\n    test(\'components/snomed-data-dropdown.js should pass jshint\', function() { \n      ok(true, \'components/snomed-data-dropdown.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/components/snomed-data-dropdown.jshint.js");

;eval("define(\"refset/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/application.js should pass jshint\', function() { \n      ok(true, \'controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/application.jshint.js");

;eval("define(\"refset/tests/controllers/dashboard.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/dashboard.js should pass jshint\', function() { \n      ok(true, \'controllers/dashboard.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/dashboard.jshint.js");

;eval("define(\"refset/tests/controllers/data.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/data.js should pass jshint\', function() { \n      ok(false, \'controllers/data.js should pass jshint.\\ncontrollers/data.js: line 517, col 63, \\\'response\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=refset/tests/controllers/data.jshint.js");

;eval("define(\"refset/tests/controllers/login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/login.js should pass jshint\', function() { \n      ok(true, \'controllers/login.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/login.jshint.js");

;eval("define(\"refset/tests/controllers/news.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/news.js should pass jshint\', function() { \n      ok(true, \'controllers/news.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/news.jshint.js");

;eval("define(\"refset/tests/controllers/refsets.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/refsets.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/index.js should pass jshint\', function() { \n      ok(false, \'controllers/refsets/index.js should pass jshint.\\ncontrollers/refsets/index.js: line 53, col 9, Expected \\\'{\\\' and instead saw \\\'this\\\'.\\n\\n1 error\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/index.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/new.js should pass jshint\', function() { \n      ok(false, \'controllers/refsets/new.js should pass jshint.\\ncontrollers/refsets/new.js: line 189, col 79, Missing semicolon.\\ncontrollers/refsets/new.js: line 52, col 17, \\\'filterByInactiveConcepts\\\' is defined but never used.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/new.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/refset.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/refset.jshint.js");

;eval("define(\"refset/tests/controllers/refsets/upload.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/refsets\');\n    test(\'controllers/refsets/upload.js should pass jshint\', function() { \n      ok(true, \'controllers/refsets/upload.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/refsets/upload.jshint.js");

;eval("define(\"refset/tests/controllers/utilities.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/utilities.js should pass jshint\', function() { \n      ok(true, \'controllers/utilities.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/controllers/utilities.jshint.js");

;eval("define(\"refset/tests/helpers/code-to-language.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/code-to-language.js should pass jshint\', function() { \n      ok(true, \'helpers/code-to-language.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/code-to-language.jshint.js");

;eval("define(\"refset/tests/helpers/date-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/date-format.js should pass jshint\', function() { \n      ok(true, \'helpers/date-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/date-format.jshint.js");

;eval("define(\"refset/tests/helpers/date-time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/date-time-format.js should pass jshint\', function() { \n      ok(true, \'helpers/date-time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/date-time-format.jshint.js");

;eval("define(\"refset/tests/helpers/effective-time-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/effective-time-format.js should pass jshint\', function() { \n      ok(true, \'helpers/effective-time-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/effective-time-format.jshint.js");

;eval("define(\"refset/tests/helpers/is-selected.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/is-selected.js should pass jshint\', function() { \n      ok(true, \'helpers/is-selected.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/is-selected.jshint.js");

;eval("define(\"refset/tests/helpers/member-meta-data-icon.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/member-meta-data-icon.js should pass jshint\', function() { \n      ok(true, \'helpers/member-meta-data-icon.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/member-meta-data-icon.jshint.js");

;eval("define(\"refset/tests/helpers/refset-list-item-span.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/refset-list-item-span.js should pass jshint\', function() { \n      ok(true, \'helpers/refset-list-item-span.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/refset-list-item-span.jshint.js");

;eval("define(\"refset/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'refset\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=refset/tests/helpers/resolver.js");

;eval("define(\"refset/tests/helpers/snomed-id-to-label.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/snomed-id-to-label.js should pass jshint\', function() { \n      ok(true, \'helpers/snomed-id-to-label.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/snomed-id-to-label.jshint.js");

;eval("define(\"refset/tests/helpers/sort-icon.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/sort-icon.js should pass jshint\', function() { \n      ok(true, \'helpers/sort-icon.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/sort-icon.jshint.js");

;eval("define(\"refset/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'refset/app\')[\'default\'];\n    var Router = require(\'refset/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION: false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=refset/tests/helpers/start-app.js");

;eval("define(\"refset/tests/helpers/yes-no-format.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - helpers\');\n    test(\'helpers/yes-no-format.js should pass jshint\', function() { \n      ok(true, \'helpers/yes-no-format.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/helpers/yes-no-format.jshint.js");

;eval("define(\"refset/tests/models/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/refset.js should pass jshint\', function() { \n      ok(true, \'models/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/refset.jshint.js");

;eval("define(\"refset/tests/models/simple-refset-member.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/simple-refset-member.js should pass jshint\', function() { \n      ok(true, \'models/simple-refset-member.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/simple-refset-member.jshint.js");

;eval("define(\"refset/tests/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/user.js should pass jshint\', function() { \n      ok(true, \'models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/models/user.jshint.js");

;eval("define(\"refset/tests/refset/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests/helpers\');\n    test(\'refset/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'refset/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/helpers/resolver.jshint.js");

;eval("define(\"refset/tests/refset/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests/helpers\');\n    test(\'refset/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'refset/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/helpers/start-app.jshint.js");

;eval("define(\"refset/tests/refset/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - refset/tests\');\n    test(\'refset/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'refset/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/refset/tests/test-helper.jshint.js");

;eval("define(\"refset/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/router.jshint.js");

;eval("define(\"refset/tests/routes/accessibility.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/accessibility.js should pass jshint\', function() { \n      ok(true, \'routes/accessibility.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/accessibility.jshint.js");

;eval("define(\"refset/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/application.jshint.js");

;eval("define(\"refset/tests/routes/cookie-policy.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/cookie-policy.js should pass jshint\', function() { \n      ok(true, \'routes/cookie-policy.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/cookie-policy.jshint.js");

;eval("define(\"refset/tests/routes/dashboard.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/dashboard.js should pass jshint\', function() { \n      ok(true, \'routes/dashboard.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/dashboard.jshint.js");

;eval("define(\"refset/tests/routes/news.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/news.js should pass jshint\', function() { \n      ok(true, \'routes/news.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/news.jshint.js");

;eval("define(\"refset/tests/routes/privacy-statement.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/privacy-statement.js should pass jshint\', function() { \n      ok(true, \'routes/privacy-statement.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/privacy-statement.jshint.js");

;eval("define(\"refset/tests/routes/refsets/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/index.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/index.jshint.js");

;eval("define(\"refset/tests/routes/refsets/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/new.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/new.jshint.js");

;eval("define(\"refset/tests/routes/refsets/refset.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/refsets\');\n    test(\'routes/refsets/refset.js should pass jshint\', function() { \n      ok(true, \'routes/refsets/refset.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/refsets/refset.jshint.js");

;eval("define(\"refset/tests/routes/site-map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/site-map.js should pass jshint\', function() { \n      ok(true, \'routes/site-map.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/site-map.jshint.js");

;eval("define(\"refset/tests/routes/terms-and-conditions.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/terms-and-conditions.js should pass jshint\', function() { \n      ok(true, \'routes/terms-and-conditions.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/routes/terms-and-conditions.jshint.js");

;eval("define(\"refset/tests/test-helper\", \n  [\"refset/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=refset/tests/test-helper.js");

;eval("define(\"refset/tests/views/toggle-switch-inverted.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/toggle-switch-inverted.js should pass jshint\', function() { \n      ok(true, \'views/toggle-switch-inverted.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/views/toggle-switch-inverted.jshint.js");

;eval("define(\"refset/tests/views/toggle-switch.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - views\');\n    test(\'views/toggle-switch.js should pass jshint\', function() { \n      ok(true, \'views/toggle-switch.js should pass jshint.\'); \n    });\n  });//# sourceURL=refset/tests/views/toggle-switch.jshint.js");

;eval("define(\"refset/views/toggle-switch-inverted\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.View.extend({\n      classNames: [\'toggle-switch\',\'inverted\'],\n      templateName: \'toggle-switch\',\n      \n      init: function() {\n        this._super.apply(this, arguments);\n        return this.on(\'change\', this, this._updateElementValue);\n      },\n      \n      checkBoxId: (function() {\n        return \"checker-\" + (this.get(\'elementId\'));\n      }).property(),\n      \n      _updateElementValue: function() {\n        return this.set(\'checked\', this.$(\'input\').prop(\'checked\'));\n      }\n    });\n  });//# sourceURL=refset/views/toggle-switch-inverted.js");

;eval("define(\"refset/views/toggle-switch\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = Ember.View.extend({\n      classNames: [\'toggle-switch\'],\n      templateName: \'toggle-switch\',\n      \n      init: function() {\n        this._super.apply(this, arguments);\n        return this.on(\'change\', this, this._updateElementValue);\n      },\n      \n      checkBoxId: (function() {\n        return \"checker-\" + (this.get(\'elementId\'));\n      }).property(),\n      \n      _updateElementValue: function() {\n        return this.set(\'checked\', this.$(\'input\').prop(\'checked\'));\n      }\n    });\n  });//# sourceURL=refset/views/toggle-switch.js");
