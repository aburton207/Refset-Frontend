import ajax from 'ic-ajax';
import { raw as icAjaxRaw } from 'ic-ajax';

export default Ember.Object.extend({
	
	getPreAuthHeaders : function(user)
	{
		var headers =
		{
			'X-REFSET-PRE-AUTH-USERNAME'	: user.name,
			'X-REFSET-PRE-AUTH-TOKEN'		: user.token
		};

		return headers;
	},
	
	getHeaders : function(user)
	{
		if (user.token === null) {return;}
		
		var headers =
		{
			'X-REFSET-AUTH-TOKEN'			: user.token
		};

		return headers;
	},
	
	returnErrorResponse : function(response)
	{
		if (typeof response.jqXHR.responseJSON !== "undefined")
		{
			// We have an error generated by the API
			return {meta:response.jqXHR.responseJSON.meta};
		}
		else
		{
			// We've failed to speak to the API...
			return {meta:{errorInfo:{message:response.jqXHR.statusText,code:response.jqXHR.status.toString()}}};
		}
	},
	
	authenticate : function (username,password)
	{
		Ember.Logger.log("adapters.refsets:authenticate",username,password);
		
		var _this = this;
		var user = {name:username,token:password};

		var result = icAjaxRaw(RefsetENV.APP.refsetApiBaseUrl + '/getUserDetails', {headers:this.getPreAuthHeaders(user) , type:"post", processData: false, contentType: 'application/json'}).then(function(response)
		{			
			return response;
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;				
	},
	
	findAll : function (user,from,to)
	{
		Ember.Logger.log("adapters.refsets:findAll (user,from,to)",user,from,to);
		
		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '?from=' + from + '&to=' + to, {headers:this.getHeaders(user)}).then(function(response)
		{
			return response;
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});
		
		return result;
	},
	
	find : function (user,id)
	{
		Ember.Logger.log("adapters.refsets:find (user,id)",user,id);
		
		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + id, {headers:this.getHeaders(user)}).then(function(response)
		{	
			return response;
		},
		function (response) 
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	getRefsetHistoryHeader : function (user,id)
	{
		Ember.Logger.log("adapters.refsets:getRefsetHistoryHeader (user,id)",user,id);
		
		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + id + '/headerState?from=0&to=200', {headers:this.getHeaders(user), processData: false, contentType: 'application/json'}).then(function(response)
		{	
			return response;
		},
		function (response) 
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},

	findHeader : function (user,id)
	{
		Ember.Logger.log("adapters.refsets:findHeader (user,id)",user,id);
		
		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + id + '/header', {headers:this.getHeaders(user)}).then(function(response)
		{	
			return response;
		},
		function (response) 
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	findMembers : function (user,id,from,to)
	{
		Ember.Logger.log("adapters.refsets:findMembers (user,id,from,to)",user,id,from,to);
		
		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + id + '/members?from=' + from + '&to=' + to, {headers:this.getHeaders(user)}).then(function(response)
		{	
			return response;
		},
		function (response) 
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	create : function (user,refset)
	{
		Ember.Logger.log("adapters.refsets:create",user,refset);
		
		var _this = this;

		var jsonFormatRefset = JSON.stringify(refset);

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/new', {headers:this.getHeaders(user), type:'post', data: jsonFormatRefset, processData: false, contentType: 'application/json'}).then(function(response)
		{
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	update : function (user,refset)
	{
		Ember.Logger.log("adapters.refsets:update",user,refset);
		
		var _this = this;

		var jsonFormatRefset = JSON.stringify(refset);

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/update', {headers:this.getHeaders(user), type:'post', data: jsonFormatRefset, processData: false, contentType: 'application/json'}).then(function(response)
		{
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	addMembers : function (user,refsetId,members)
	{
		Ember.Logger.log("adapters.refsets:addMembers (user,refsetId,members)",user,refsetId,members);

		var _this = this;
		
		var importMembers = members.map(function(member)
		{
			var myMember = $.extend(true, {}, member);
			delete myMember["meta"];
			return myMember;
		});
			
		var jsonFormatMemberData = JSON.stringify(importMembers);

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + refsetId + '/add/members', {headers:_this.getHeaders(user), method:"post", data: jsonFormatMemberData, processData: false, contentType: 'application/json'}).then(function(response)
		{			
			return response;
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});
		
		return result;	
	},
	
	deleteMembers : function(user,refsetid,members)
	{
		var _this = this;
		
		var data = members.map(function(member)
		{
			return member.referencedComponentId;
		});
		
		var jsonFormatMemberData = JSON.stringify(data);

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/delete/' + refsetid + '/members', {headers:this.getHeaders(user), method:"delete", data: jsonFormatMemberData, processData: false, contentType: 'application/json'}).then(function(response){
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	getRefsetExport : function(user,id)
	{
		var _this = this;

		var result = icAjaxRaw(RefsetENV.APP.refsetApiBaseUrl + '/' + id + '/export', {headers:this.getHeaders(user)}).then(function(response)
		{
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	deleteRefset : function(user,id)
	{
		var _this = this;

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/delete/' + id , {headers:this.getHeaders(user), method:"delete", processData: false, contentType: 'application/json'}).then(function(response){
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},

	importRF2 : function (user,refsetId,rf2file)
	{
		Ember.Logger.log("adapters.refsets:importRF2 (user,refsetId)",user,refsetId);

		var _this = this;
		
		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/' + refsetId + '/import', {headers:_this.getHeaders(user), method:"post", data: rf2file, processData: false, contentType: 'application/json'}).then(function(response)
		{			
			return response;
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});
		
		return result;	
	},
	
	searchRefsetMembers : function(user,searchTerm)
	{
		var _this = this;

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/search?from=0&to=100&q=' + searchTerm , {headers:this.getHeaders(user), method:"get", processData: false, contentType: 'application/json'}).then(function(response){
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
	checkifDescriptionIsUnique : function(user,description)
	{
		var _this = this;

		var result = ajax(RefsetENV.APP.refsetApiBaseUrl + '/checkDescription/' + description , {headers:this.getHeaders(user), method:"get", processData: false, contentType: 'application/json'}).then(function(response){
			return response;	
		},
		function (response)
		{
			return _this.returnErrorResponse(response);
		});	
		
		return result;
	},
	
});

